{"ast":null,"code":"var _jsxFileName = \"/Users/amit/Desktop/Algoverse-main/src/Turing Machine/turingMachine.jsx\";\nimport React, { Component } from 'react';\nimport Ribbon from \"./ribbon\";\nimport { getNextStep, getTable } from '../algorithms/turing';\nimport Menu from \"./menu\";\nimport Navbar from \"./navbar\";\nimport Table from \"./table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass TuringMachine extends Component {\n  constructor() {\n    super();\n    this.handleLeftShift = () => {\n      this.setState({\n        cellStart: this.state.cellStart + 1,\n        cellEnd: this.state.cellEnd + 1,\n        midCell: this.state.midCell + 1\n      });\n    };\n    this.handleRightShift = () => {\n      // console.log('aaaaaaa')\n      this.setState({\n        cellStart: this.state.cellStart - 1,\n        cellEnd: this.state.cellEnd - 1,\n        midCell: this.state.midCell - 1\n      });\n    };\n    this.handleSet = () => {\n      this.handleReset();\n      let string = this.state.inputString1;\n      let strip = [...this.state.strip];\n      for (let i = 0; i < string.length; i++) {\n        strip[50 + i] = {\n          ...strip[50 + i],\n          val: string[i]\n        };\n      }\n      this.setState({\n        strip\n      });\n    };\n    this.handleReset = () => {\n      const width = window.innerWidth;\n      let cellCount = Math.floor(width / 50);\n      if (cellCount % 2 === 0) cellCount--;\n      let strip = [...this.state.strip];\n      if (strip.length === 0) strip = getInitialGrid(cellCount);\n      for (let i = 0; i < strip.length; i++) strip[i].val = 'B';\n      this.setState({\n        strip,\n        midCell: 50\n      });\n      let cellStart, cellEnd;\n      cellStart = 50 + (1 - cellCount) / 2;\n      cellEnd = 50 + (cellCount - 1) / 2;\n      this.setState({\n        cellStart,\n        cellEnd,\n        state: -1\n      });\n    };\n    this.handleStart = () => {\n      // this.handleReset();\n      this.handleSet();\n      this.handleAlgo();\n    };\n    this.handleAlgo = async () => {\n      await sleep(500);\n      let state = 'q0';\n      while (state !== 'qe') {\n        let read = this.state.strip[this.state.midCell].val;\n        read = read.toString();\n        let [nextState, write, dir, rowIdx] = getNextStep(state, read, this.state.algo);\n        this.setState({\n          state: rowIdx\n        });\n        let strip = [...this.state.strip];\n        strip[this.state.midCell].val = write;\n        document.getElementById('stepsText').innerText = 'Reads ' + read + ' on strip';\n        // await sleep(500);\n\n        await sleep(1000);\n        document.getElementById('stepsText').innerText = 'writes ' + write + ' on strip';\n        this.setState({\n          strip\n        });\n        await sleep(500);\n        if (dir === 'R') this.handleLeftShift();else this.handleRightShift();\n        state = nextState;\n      }\n    };\n    this.setInput1 = event => {\n      let input = event.target.value;\n      const filtered = [...input].filter(item => item === \"0\" || item === \"1\").slice(0, 8).join(\"\");\n      this.setState({\n        inputString1: filtered\n      });\n    };\n    this.setInput2 = event => {\n      let input = event.target.value;\n      const filtered = [...input].filter(item => item === \"0\" || item === \"1\").slice(0, 8).join(\"\");\n      this.setState({\n        inputString2: filtered\n      });\n    };\n    this.setAlgo = (pos, val) => {\n      if (pos === 0) {\n        // console.log(\"sup 0\");\n        this.setState({\n          algo: val\n        });\n      }\n    };\n    this.state = {\n      cellCount: 0,\n      cellStart: 0,\n      cellEnd: 0,\n      midCell: 0,\n      strip: [],\n      inputString1: \"\",\n      inputString2: \"\",\n      table: [],\n      algo: 0,\n      state: -1\n    };\n  }\n  componentDidMount() {\n    getNextStep('100');\n    this.handleReset();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Menu, {\n        visualize: this.handleStart,\n        onAlgoChanged: this.setAlgo,\n        onReset: this.handleReset,\n        setInput1: this.setInput1,\n        setInput2: this.setInput2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-info\",\n          children: [/*#__PURE__*/_jsxDEV(Ribbon, {\n            strip: this.state.strip,\n            midCell: this.state.midCell,\n            cellCount: this.state.cellCount,\n            cellStart: this.state.cellStart,\n            cellEnd: this.state.cellEnd\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-warning m-3\",\n            onClick: this.handleLeftShift,\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              width: \"16\",\n              height: \"16\",\n              fill: \"currentColor\",\n              className: \"bi bi-caret-left-square-fill\",\n              viewBox: \"0 0 16 16\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M0 2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2zm10.5 10V4a.5.5 0 0 0-.832-.374l-4.5 4a.5.5 0 0 0 0 .748l4.5 4A.5.5 0 0 0 10.5 12z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-warning m-3\",\n            onClick: this.handleRightShift,\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              width: \"16\",\n              height: \"16\",\n              fill: \"currentColor\",\n              className: \"bi bi-caret-right-square-fill\",\n              viewBox: \"0 0 16 16\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M0 2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2zm5.5 10a.5.5 0 0 0 .832.374l4.5-4a.5.5 0 0 0 0-.748l-4.5-4A.5.5 0 0 0 5.5 4v8z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\",\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              data: getTable(this.state.algo),\n              state: this.state.state\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"bg-light p-2 font-weight-bold text-lg-center rounded-3\",\n              id: \"stepsText\",\n              children: \"Details goes here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this);\n  }\n}\nconst getInitialGrid = () => {\n  const strip = [];\n  for (let cell = 0; cell <= 100; cell++) {\n    let currentCell = {\n      id: cell,\n      val: 'B'\n    };\n    strip.push(currentCell);\n  }\n  return strip;\n};\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\nexport default TuringMachine;","map":{"version":3,"names":["React","Component","Ribbon","getNextStep","getTable","Menu","Navbar","Table","jsxDEV","_jsxDEV","TuringMachine","constructor","handleLeftShift","setState","cellStart","state","cellEnd","midCell","handleRightShift","handleSet","handleReset","string","inputString1","strip","i","length","val","width","window","innerWidth","cellCount","Math","floor","getInitialGrid","handleStart","handleAlgo","sleep","read","toString","nextState","write","dir","rowIdx","algo","document","getElementById","innerText","setInput1","event","input","target","value","filtered","filter","item","slice","join","setInput2","inputString2","setAlgo","pos","table","componentDidMount","render","children","fileName","_jsxFileName","lineNumber","columnNumber","visualize","onAlgoChanged","onReset","className","onClick","xmlns","height","fill","viewBox","d","data","id","cell","currentCell","push","ms","Promise","resolve","setTimeout"],"sources":["/Users/amit/Desktop/Algoverse-main/src/Turing Machine/turingMachine.jsx"],"sourcesContent":["import React, {Component} from 'react';\nimport Ribbon from \"./ribbon\";\n\nimport {getNextStep, getTable} from '../algorithms/turing';\nimport Menu from \"./menu\";\nimport Navbar from \"./navbar\";\nimport Table from \"./table\";\n\nclass TuringMachine extends Component {\n    constructor() {\n        super();\n        this.state = {\n            cellCount: 0,\n            cellStart: 0,\n            cellEnd: 0,\n            midCell: 0,\n            strip: [],\n            inputString1: \"\",\n            inputString2: \"\",\n            table: [],\n            algo: 0,\n            state: -1\n        }\n    }\n\n    componentDidMount() {\n        getNextStep('100');\n        this.handleReset();\n\n\n    }\n\n    handleLeftShift = () => {\n        this.setState({\n            cellStart: this.state.cellStart + 1,\n            cellEnd: this.state.cellEnd + 1,\n            midCell: this.state.midCell + 1\n        });\n    }\n    handleRightShift = () => {\n        // console.log('aaaaaaa')\n        this.setState({\n            cellStart: this.state.cellStart - 1,\n            cellEnd: this.state.cellEnd - 1,\n            midCell: this.state.midCell - 1\n        });\n    }\n\n    handleSet = () => {\n        this.handleReset();\n        let string = this.state.inputString1;\n        let strip = [...this.state.strip];\n        for (let i = 0; i < string.length; i++) {\n            strip[50 + i] = {\n                ...strip[50 + i],\n                val: string[i]\n            }\n        }\n        this.setState({strip});\n    }\n    handleReset = () => {\n        const width = window.innerWidth;\n        let cellCount = Math.floor(width / 50);\n        if (cellCount % 2 === 0) cellCount--;\n        let strip = [...this.state.strip];\n        if (strip.length === 0) strip = getInitialGrid(cellCount);\n        for (let i = 0; i < strip.length; i++)\n            strip[i].val = 'B';\n\n        this.setState({strip, midCell: 50});\n        let cellStart, cellEnd;\n        cellStart = 50 + (1 - cellCount) / 2;\n        cellEnd = 50 + (cellCount - 1) / 2;\n        this.setState({cellStart, cellEnd,state:-1});\n    }\n\n    handleStart = () => {\n        // this.handleReset();\n        this.handleSet();\n        this.handleAlgo();\n    }\n\n    handleAlgo = async () => {\n        await sleep(500);\n        let state = 'q0';\n\n        while (state !== 'qe') {\n\n            let read = this.state.strip[this.state.midCell].val;\n            read = read.toString();\n            let [nextState, write, dir, rowIdx] = getNextStep(state, read, this.state.algo);\n            this.setState({state: rowIdx});\n            let strip = [...this.state.strip];\n            strip[this.state.midCell].val = write;\n            document.getElementById('stepsText').innerText = 'Reads ' + read + ' on strip';\n            // await sleep(500);\n\n            await sleep(1000);\n\n            document.getElementById('stepsText').innerText = 'writes ' + write + ' on strip';\n\n            this.setState({strip});\n            await sleep(500);\n            if (dir === 'R') this.handleLeftShift();\n            else this.handleRightShift();\n\n            state = nextState;\n        }\n    }\n\n    setInput1 = (event) => {\n        let input = event.target.value;\n        const filtered = [...input].filter((item) => item === \"0\" || item === \"1\").slice(0, 8).join(\"\");\n        this.setState({inputString1: filtered});\n    }\n    setInput2 = (event) => {\n        let input = event.target.value;\n        const filtered = [...input].filter((item) => item === \"0\" || item === \"1\").slice(0, 8).join(\"\");\n        this.setState({inputString2: filtered});\n    }\n    setAlgo = (pos, val) => {\n        if (pos === 0) {\n            // console.log(\"sup 0\");\n            this.setState({algo: val});\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar/>\n                <Menu\n                    visualize={this.handleStart}\n                    onAlgoChanged={this.setAlgo}\n                    onReset={this.handleReset}\n                    setInput1={this.setInput1}\n                    setInput2={this.setInput2}\n                />\n\n                {/*<div className='row'>*/}\n                {/*    <div className=\"input-group mt-2 col-3\">*/}\n                {/*        <input type=\"text\" id='inputText1' className=\"form-control\" placeholder=\"Input Binary\"*/}\n                {/*               aria-label=\"Username\"*/}\n                {/*               aria-describedby=\"basic-addon1\"*/}\n                {/*               onChange={this.setInput1}*/}\n                {/*        />*/}\n                {/*    </div>*/}\n                {/*    <div className=\"input-group mt-2 col-3\">*/}\n                {/*        <input type=\"text\" id='inputText1' className=\"form-control\" placeholder=\"Input Binary 2\"*/}\n                {/*               aria-label=\"Username\"*/}\n                {/*               aria-describedby=\"basic-addon1\"/>*/}\n                {/*    </div>*/}\n                {/*</div>*/}\n\n                <center>\n                    <br/>\n                    <div className='bg-info'>\n                        {/*<h3>Turing Machine</h3>*/}\n                        <Ribbon\n                            strip={this.state.strip}\n                            midCell={this.state.midCell}\n                            cellCount={this.state.cellCount}\n                            cellStart={this.state.cellStart}\n                            cellEnd={this.state.cellEnd}\n                        ></Ribbon>\n                        <button\n                            className='btn btn-warning m-3'\n                            onClick={this.handleLeftShift}\n                        >\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\n                                 className=\"bi bi-caret-left-square-fill\" viewBox=\"0 0 16 16\">\n                                <path\n                                    d=\"M0 2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2zm10.5 10V4a.5.5 0 0 0-.832-.374l-4.5 4a.5.5 0 0 0 0 .748l4.5 4A.5.5 0 0 0 10.5 12z\"/>\n                            </svg>\n                        </button>\n                        <button\n                            className='btn btn-warning m-3'\n                            onClick={this.handleRightShift}\n                        >\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\n                                 className=\"bi bi-caret-right-square-fill\" viewBox=\"0 0 16 16\">\n                                <path\n                                    d=\"M0 2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2zm5.5 10a.5.5 0 0 0 .832.374l4.5-4a.5.5 0 0 0 0-.748l-4.5-4A.5.5 0 0 0 5.5 4v8z\"/>\n                            </svg>\n\n                        </button>\n                    </div>\n                    <br/>\n\n                    <div className='row'>\n                        <div className='col-4'>\n                            <Table\n                                data={getTable(this.state.algo)}\n                                state={this.state.state}\n                            />\n                        </div>\n                        <div className='col-4'>\n                            <span className='bg-light p-2 font-weight-bold text-lg-center rounded-3' id='stepsText'>\n                                 Details goes here\n                            </span>\n                        </div>\n                        <div className='col-4'>\n                            {/*<textarea disabled className=\"form-control\" id=\"Textarea1\" rows=\"3\">*/}\n\n                            {/*</textarea>*/}\n                        </div>\n                    </div>\n                </center>\n            </div>\n        );\n    }\n}\n\nconst getInitialGrid = () => {\n    const strip = [];\n    for (let cell = 0; cell <= 100; cell++) {\n        let currentCell = {\n            id: cell,\n            val: 'B'\n        }\n        strip.push(currentCell);\n    }\n    return strip;\n}\n\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport default TuringMachine;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}