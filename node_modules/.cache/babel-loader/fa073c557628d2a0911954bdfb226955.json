{"ast":null,"code":"export function randomMaze(board,row,col){let newBoard=board.slice();const pairs=[];for(let i=0;i<row;i++){for(let j=0;j<col;j++){const random=Math.floor(Math.random()*100)+10;if(random%4===0){newBoard[i][j].isWall=true;pairs.push({xx:i,yy:j});}}}return pairs;}","map":{"version":3,"names":["randomMaze","board","row","col","newBoard","slice","pairs","i","j","random","Math","floor","isWall","push","xx","yy"],"sources":["/Users/amit/Desktop/Algoverse-main/src/algorithms/randomMaze.js"],"sourcesContent":["export function randomMaze(board,row,col){\n    let newBoard = board.slice();\n    const pairs = [];\n    for(let i = 0;i<row;i++){\n        for( let j = 0;j <col;j++){\n            const random = Math.floor(Math.random()*100)+10;\n            if( random%4 === 0 ){\n                newBoard[i][j].isWall = true;\n                pairs.push({\n                    xx:i,\n                    yy:j\n                });\n            }\n        }\n    }\n    return pairs;\n}"],"mappings":"AAAA,MAAO,SAAS,CAAAA,UAAUA,CAACC,KAAK,CAACC,GAAG,CAACC,GAAG,CAAC,CACrC,GAAI,CAAAC,QAAQ,CAAGH,KAAK,CAACI,KAAK,CAAC,CAAC,CAC5B,KAAM,CAAAC,KAAK,CAAG,EAAE,CAChB,IAAI,GAAI,CAAAC,CAAC,CAAG,CAAC,CAACA,CAAC,CAACL,GAAG,CAACK,CAAC,EAAE,CAAC,CACpB,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAACA,CAAC,CAAEL,GAAG,CAACK,CAAC,EAAE,CAAC,CACtB,KAAM,CAAAC,MAAM,CAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACD,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAC/C,GAAIA,MAAM,CAAC,CAAC,GAAK,CAAC,CAAE,CAChBL,QAAQ,CAACG,CAAC,CAAC,CAACC,CAAC,CAAC,CAACI,MAAM,CAAG,IAAI,CAC5BN,KAAK,CAACO,IAAI,CAAC,CACPC,EAAE,CAACP,CAAC,CACJQ,EAAE,CAACP,CACP,CAAC,CAAC,CACN,CACJ,CACJ,CACA,MAAO,CAAAF,KAAK,CAChB","ignoreList":[]},"metadata":{},"sourceType":"module"}