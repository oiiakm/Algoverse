{"ast":null,"code":"var _jsxFileName = \"/Users/amit/Learning/Algoverse/src/15puzzleComponents/puzzle.jsx\";\nimport React, { Component } from 'react';\nimport Navbar from \"./navbar\";\nimport FlipMove from 'react-flip-move';\nimport SvgLines from 'react-mt-svg-lines';\nimport '../helpers/array_helpers';\nimport './style.css';\nimport { times } from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FLIP_DURATION = 750;\nclass Puzzle extends Component {\n  constructor() {\n    super();\n    this.balsal = async () => {\n      for (let i = 0; i < 15; i++) {\n        this.setState({\n          squares: this.state.squares.slice().swap(i, i + 1)\n        });\n        await sleep(500);\n      }\n    };\n    this.state = {\n      squares: times(16, i => ({\n        value: i\n      }))\n    };\n  }\n  render() {\n    let classNames;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"#57407c\"\n      },\n      className: 'full-height',\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'justify-content-around ',\n        style: {\n          textAlign: \"Center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"center\",\n            height: \"440px\",\n            width: \"440px\",\n            margin: 'auto'\n          },\n          className: \"m-5\",\n          children: [/*#__PURE__*/_jsxDEV(FlipMove, {\n            duration: FLIP_DURATION,\n            easing: \"cubic-bezier(.12,.36,.14,1.2)\",\n            children: [this.state.squares.map(stt => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: stt.value === 0 ? \"square \" : stt.value % 2 === 0 ? 'square shadow correct pt-1' : 'square shadow painted pt-1',\n              children: stt.value === 0 ? \"\" : stt.value\n            }, stt.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            onClick: this.balsal,\n            children: \"Animate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n}\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\nexport default Puzzle;","map":{"version":3,"names":["React","Component","Navbar","FlipMove","SvgLines","times","jsxDEV","_jsxDEV","FLIP_DURATION","Puzzle","constructor","balsal","i","setState","squares","state","slice","swap","sleep","value","render","classNames","style","backgroundColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","height","width","margin","duration","easing","map","stt","onClick","ms","Promise","resolve","setTimeout"],"sources":["/Users/amit/Learning/Algoverse/src/15puzzleComponents/puzzle.jsx"],"sourcesContent":["import React, {Component} from 'react';\nimport Navbar from \"./navbar\";\nimport FlipMove from 'react-flip-move';\nimport SvgLines from 'react-mt-svg-lines';\nimport '../helpers/array_helpers';\nimport './style.css';\nimport {times} from 'lodash';\n\nconst FLIP_DURATION = 750;\n\nclass Puzzle extends Component {\n    constructor() {\n        super();\n        this.state = {\n            squares: times(16, i => ({\n                value: i\n            })),\n        };\n    }\n\n    balsal = async () => {\n        for (let i = 0; i < 15; i++) {\n            this.setState({\n                squares: this.state.squares.slice().swap(i, i + 1)\n            });\n            await sleep(500);\n        }\n\n    }\n\n    render() {\n        let classNames;\n        return (\n\n            <div style={{backgroundColor: \"#57407c\"}}\n                 className={'full-height'}\n            >\n                <Navbar/>\n                <div className={'justify-content-around '}\n                     style={{textAlign: \"Center\"}}>\n                    <div style={{textAlign: \"center\", height: \"440px\", width: \"440px\", margin: 'auto'}}\n                         className={\"m-5\"}>\n                        <FlipMove\n                            duration={FLIP_DURATION}\n                            easing=\"cubic-bezier(.12,.36,.14,1.2)\"\n                        >\n                            {this.state.squares.map((stt) =>\n                                <div key={stt.value}\n                                     className={stt.value === 0 ? \"square \" : stt.value % 2 === 0 ? 'square shadow correct pt-1' : 'square shadow painted pt-1'}\n                                >\n                                    {stt.value === 0 ? \"\" : stt.value}\n                                </div>\n                            )}\n                            <br/>\n                        </FlipMove>\n                        <button className={\"btn btn-secondary\"} onClick={this.balsal}>Animate</button>\n                    </div>\n\n                    {/*<FlipMove*/}\n                    {/*    duration={FLIP_DURATION}*/}\n                    {/*          easing=\"cubic-bezier(.12,.36,.14,1.2)\" >*/}\n                    {/*    <line key={5464} style={{strokeWidth: \"3px\", stroke: '#999'}} x2={299} y2={186}*/}\n                    {/*          x1={(this.state.squares[0].value + 1) * 50}*/}\n                    {/*          y1={(this.state.squares[0].value + 1) * 50}></line>*/}\n                    {/*    <div key={this.state.squares[0].value}*/}\n                    {/*         className={'square shadow correct pt-1'}>*/}\n                    {/*        {this.state.squares[0].value}*/}\n                    {/*    </div>*/}\n                    {/*    <div key={this.state.squares[1].value}*/}\n                    {/*         className={'square shadow correct pt-1'}>*/}\n                    {/*        {this.state.squares[1].value}*/}\n                    {/*    </div>*/}\n                    {/*</FlipMove>*/}\n                    {/*/!*<SvgLines animate={true} duration={1000}>*!/*/}\n                    {/*/!*    <svg viewBox=\"0 0 960 500\">*!/*/}\n                    {/*/!*        <line key={5464} style={{strokeWidth: \"3px\", stroke: '#999'}} x2={299} y2={186}*!/*/}\n                    {/*/!*              x1={(this.state.squares[0].value + 1) * 50}*!/*/}\n                    {/*/!*              y1={(this.state.squares[0].value + 1) * 50}></line>*!/*/}\n                    {/*/!*    </svg>*!/*/}\n                    {/*/!*</SvgLines>*!/*/}\n                </div>\n\n            </div>\n\n        );\n    }\n}\n\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport default Puzzle;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}