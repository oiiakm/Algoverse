{"ast":null,"code":"import React,{Component}from'react';import Cells from\"./cells\";import Navbar from\"./navbar\";import Menu from\"./menu\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";class Queen extends Component{constructor(){super(...arguments);this.state={board:[],number:4,speed:490,isRunning:false};this.handleStop=()=>{this.setState({isRunning:false});};this.handleSpeedChange=val=>{const speed=(100-val)*10;this.setState({speed});};this.handleQueenChange=number=>{this.setState({number});const board=getBoard(this.state.number);this.setState({board});};this.handleClear=()=>{const board=getBoard(this.state.number);this.setState({board});};this.handleTurnOff=()=>{const newBoard=turnOffAttack(this.state.board,this.state.number);this.setState({board:newBoard});};this.startAlgo=async()=>{this.setState({isRunning:true});const newBoard=this.state.board.slice();await this.queensAlgo(newBoard,0);const newBoard2=turnOffAttack(this.state.board,this.state.number);this.setState({board:newBoard2,isRunning:false});};this.queensAlgo=async(board,col)=>{if(col>=this.state.number){return true;}let newBoard=board.slice();for(let i=0;i<this.state.number;i++){newBoard=turnOffAttack(newBoard,this.state.number);const result=getChecked(newBoard,i,col,this.state.number);newBoard=result[0];this.setState({board:newBoard});await sleep(this.state.speed);if(result[1]){const res=await this.queensAlgo(newBoard,col+1);if(res===true){return true;}newBoard[i][col]={...newBoard[i][col],isPresent:true,isCurrent:true};this.setState({board:newBoard});await sleep(this.state.speed);newBoard[i][col]={...newBoard[i][col],isPresent:false,isCurrent:false};this.setState({board:newBoard});}newBoard[i][col]={...newBoard[i][col],isPresent:false,isCurrent:false};newBoard=turnOffAttack(newBoard,this.state.number);this.setState({board:newBoard});await sleep(this.state.speed);}return false;};}componentDidMount(){const board=getBoard(this.state.number);// board[3][3].isPresent = true;\nthis.setState({board});}render(){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(Menu,{onSpeedChange:this.handleSpeedChange,onCountChange:this.handleQueenChange,onViusalize:this.startAlgo,disable:this.state.isRunning,onClear:this.handleClear,onStop:this.handleStop}),/*#__PURE__*/_jsx(\"div\",{style:{textAlign:\"Center\"},children:/*#__PURE__*/_jsx(Cells,{board:this.state.board})})]});}}export default Queen;function sleep(ms){return new Promise(resolve=>setTimeout(resolve,ms));}const turnOffAttack=(board,N)=>{const newBoard=board.slice();for(let i=0;i<N;i++){for(let j=0;j<N;j++){newBoard[i][j]={...newBoard[i][j],isChecked:false,isAttacked:false,isCurrent:false};}}return newBoard;};const getChecked=(board,row,col,N)=>{const newBoard=board.slice();let pos=true;// same col\nfor(let i=0;i<N;i++){if(newBoard[row][i].isPresent){newBoard[row][i]={...newBoard[row][i],isAttacked:true};pos=false;}else{newBoard[row][i]={...newBoard[row][i],isChecked:true};}}// same row\nfor(let i=0;i<N;i++){if(newBoard[i][col].isPresent){newBoard[i][col]={...newBoard[i][col],isAttacked:true};pos=false;}else{newBoard[i][col]={...newBoard[i][col],isChecked:true};}}for(let i=row,j=col;i>=0&&j>=0;i--,j--){if(newBoard[i][j].isPresent){newBoard[i][j]={...newBoard[i][j],isAttacked:true};pos=false;}else{newBoard[i][j]={...newBoard[i][j],isChecked:true};}}for(let i=row,j=col;i<N&&j>=0;i++,j--){if(newBoard[i][j].isPresent){newBoard[i][j]={...newBoard[i][j],isAttacked:true};pos=false;}else{newBoard[i][j]={...newBoard[i][j],isChecked:true};}}for(let i=row,j=col;i<N&&j<N;i++,j++){if(newBoard[i][j].isPresent){newBoard[i][j]={...newBoard[i][j],isAttacked:true};pos=false;}else{newBoard[i][j]={...newBoard[i][j],isChecked:true};}}for(let i=row,j=col;i>=0&&j<N;i--,j++){if(newBoard[i][j].isPresent){newBoard[i][j]={...newBoard[i][j],isAttacked:true};pos=false;}else{newBoard[i][j]={...newBoard[i][j],isChecked:true};}}newBoard[row][col]={...newBoard[row][col],isPresent:true,isCurrent:true};return[newBoard,pos];};const getBoard=N=>{const rows=[];for(let i=0;i<N;i++){const cols=[];for(let j=0;j<N;j++){cols.push(getCell(i,j));}rows.push(cols);}return rows;};const getCell=(row,col)=>{return{row,col,isPresent:false,isChecked:false,isAttacked:false,isCurrent:false};};","map":{"version":3,"names":["React","Component","Cells","Navbar","Menu","jsx","_jsx","jsxs","_jsxs","Queen","constructor","arguments","state","board","number","speed","isRunning","handleStop","setState","handleSpeedChange","val","handleQueenChange","getBoard","handleClear","handleTurnOff","newBoard","turnOffAttack","startAlgo","slice","queensAlgo","newBoard2","col","i","result","getChecked","sleep","res","isPresent","isCurrent","componentDidMount","render","children","onSpeedChange","onCountChange","onViusalize","disable","onClear","onStop","style","textAlign","ms","Promise","resolve","setTimeout","N","j","isChecked","isAttacked","row","pos","rows","cols","push","getCell"],"sources":["/Users/amit/Desktop/Algoverse-main/src/queenComponents/queen.jsx"],"sourcesContent":["import React, {Component} from 'react';\nimport Cells from \"./cells\";\nimport Navbar from \"./navbar\";\nimport Menu from \"./menu\";\n\nclass Queen extends Component {\n    state={\n        board:[],\n        number:4,\n        speed:490,\n        isRunning:false\n    }\n\n    componentDidMount() {\n        const board = getBoard(this.state.number);\n       // board[3][3].isPresent = true;\n        this.setState({board});\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar/>\n                <Menu\n                    onSpeedChange={this.handleSpeedChange}\n                    onCountChange={this.handleQueenChange}\n                    onViusalize={this.startAlgo}\n                    disable={this.state.isRunning}\n                    onClear={this.handleClear}\n                    onStop={this.handleStop}\n                />\n                <div style={{textAlign:\"Center\"}}>\n                    <Cells\n                        board={this.state.board}\n                    />\n                </div>\n            </div>\n        );\n    }\n\n    handleStop =() =>{\n        this.setState({isRunning:false});\n    }\n\n    handleSpeedChange = (val)=>{\n        const speed = (100-val)*10;\n        this.setState({speed});\n    }\n    handleQueenChange = (number)=>{\n        this.setState({number});\n        const board = getBoard(this.state.number);\n        this.setState({board});\n    }\n    handleClear = () => {\n        const board = getBoard(this.state.number);\n        this.setState({board});\n    }\n    handleTurnOff =  () => {\n        const newBoard = turnOffAttack(this.state.board,this.state.number);\n        this.setState({board:newBoard});\n    }\n    startAlgo = async ()=>{\n        this.setState({isRunning:true});\n        const newBoard = this.state.board.slice();\n        await this.queensAlgo(newBoard,0);\n        const newBoard2 = turnOffAttack(this.state.board,this.state.number);\n        this.setState({board:newBoard2,isRunning:false});\n    }\n    queensAlgo =  async (board,col) => {\n\n        if( col>=this.state.number ){\n            return true;\n        }\n\n        let newBoard = board.slice();\n        for( let i = 0; i < this.state.number;i++ ){\n\n\n            newBoard = turnOffAttack(newBoard,this.state.number);\n            const result = getChecked(newBoard,i,col,this.state.number);\n            newBoard = result[0];\n\n            this.setState({board:newBoard});\n            await sleep(this.state.speed);\n            if( result[1] ){\n                const res = await this.queensAlgo(newBoard,col+1)\n                if( res === true){\n                    return true;\n                }\n                newBoard[i][col] = {...newBoard[i][col],isPresent:true,isCurrent:true};\n                this.setState({board:newBoard});\n                await sleep(this.state.speed);\n                newBoard[i][col] = {...newBoard[i][col],isPresent:false,isCurrent:false};\n                this.setState({board:newBoard});\n\n            }\n            newBoard[i][col] = {...newBoard[i][col],isPresent:false,isCurrent:false};\n            newBoard = turnOffAttack(newBoard,this.state.number);\n            this.setState({board:newBoard});\n            await sleep(this.state.speed);\n        }\n        return false;\n    }\n\n}\n\nexport default Queen;\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\nconst turnOffAttack = (board,N) =>{\n    const newBoard = board.slice();\n    for( let i = 0;i<N; i++ ){\n        for( let j = 0;j<N;j++ ){\n            newBoard[i][j] = {...newBoard[i][j],isChecked:false, isAttacked:false,isCurrent:false};\n        }\n    }\n    return newBoard;\n}\n\nconst getChecked = (board,row,col,N) =>{\n    const newBoard = board.slice();\n    let pos = true;\n    // same col\n    for( let i = 0;i < N;i++ ){\n        if( newBoard[row][i].isPresent ){\n            newBoard[row][i] = {...newBoard[row][i],isAttacked:true};\n            pos = false;\n        } else{\n            newBoard[row][i] = {...newBoard[row][i],isChecked:true};\n        }\n    }\n    // same row\n    for( let i = 0;i < N;i++ ){\n        if( newBoard[i][col].isPresent ){\n            newBoard[i][col] = {...newBoard[i][col],isAttacked:true};\n            pos = false;\n        } else{\n            newBoard[i][col] = {...newBoard[i][col],isChecked:true};\n        }\n    }\n    for( let i = row,j = col; i >= 0 && j >= 0; i--, j--){\n        if( newBoard[i][j].isPresent ){\n            newBoard[i][j] = {...newBoard[i][j],isAttacked:true};\n            pos = false;\n        } else{\n            newBoard[i][j] = {...newBoard[i][j],isChecked:true};\n        }\n    }\n    for( let i = row,j = col; i <N && j >= 0; i++, j--){\n        if( newBoard[i][j].isPresent ){\n            newBoard[i][j] = {...newBoard[i][j],isAttacked:true};\n            pos = false;\n        } else{\n            newBoard[i][j] = {...newBoard[i][j],isChecked:true};\n        }\n    }\n    for( let i = row,j = col; i <N && j < N; i++, j++){\n        if( newBoard[i][j].isPresent ){\n            newBoard[i][j] = {...newBoard[i][j],isAttacked:true};\n            pos = false;\n        } else{\n            newBoard[i][j] = {...newBoard[i][j],isChecked:true};\n        }\n    }\n    for( let i = row,j = col; i>=0 && j < N; i--, j++){\n        if( newBoard[i][j].isPresent ){\n            newBoard[i][j] = {...newBoard[i][j],isAttacked:true};\n            pos = false;\n        } else{\n            newBoard[i][j] = {...newBoard[i][j],isChecked:true};\n        }\n    }\n\n    newBoard[row][col] = {...newBoard[row][col],isPresent:true,isCurrent:true};\n\n    return [newBoard,pos];\n}\nconst getBoard = (N) =>{\n    const rows = [];\n    for( let i = 0;i<N;i++ ){\n        const cols = [];\n        for(let j =0;j<N;j++){\n            cols.push(getCell(i,j));\n        }\n        rows.push(cols);\n    }\n    return rows;\n}\n\nconst getCell = (row,col)=>{\n    return{\n        row,\n        col,\n        isPresent:false,\n        isChecked:false,\n        isAttacked:false,\n        isCurrent:false\n    }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}