{"ast":null,"code":"let values=[];export default function mergeSort(rects2){let rects=rects2.slice();values=[];let sz=rects2.length;// console.log( \"fdsfsd\",sz );\nsz=sz-1;mergeS(rects,0,sz);return values;}function merge(rects,l,m,r){//  console.log(l,\" \",r);\nlet n1=m-l+1;let n2=r-m;const L=rects.slice(l,m+1);const R=rects.slice(m+1,r+1);let i=0;let j=0;let k=l;while(i<n1&&j<n2){if(L[i].width<=R[j].width){rects[k]=L[i];i++;}else{rects[k]=R[j];j++;}k++;}while(i<n1){rects[k]=L[i];i++;k++;}while(j<n2){rects[k]=R[j];j++;k++;}}function mergeS(rects,l,r){if(l>=r)return;let m=l+(r-l)/2;m=Math.floor(m);// console.log(\"iiiiiiiiiiiiiiiiiiiiiiiii \",m);\nmergeS(rects,l,m);mergeS(rects,m+1,r);merge(rects,l,m,r);let rectsCopy=rects.slice(l,r+1);let value={left:l,right:r,mid:m,val:rectsCopy};values.push(value);}","map":{"version":3,"names":["values","mergeSort","rects2","rects","slice","sz","length","mergeS","merge","l","m","r","n1","n2","L","R","i","j","k","width","Math","floor","rectsCopy","value","left","right","mid","val","push"],"sources":["/Users/amit/Desktop/Algoverse-main/src/algorithms/mergeSort.js"],"sourcesContent":["let values = [];\nexport default function mergeSort(rects2){\n    let rects = rects2.slice();\n    values = [];\n    let sz = rects2.length;\n   // console.log( \"fdsfsd\",sz );\n    sz = sz-1;\n    mergeS(rects,0,sz);\n    return values;\n}\n\nfunction merge(rects, l, m, r){\n  //  console.log(l,\" \",r);\n    let n1 = m-l+1;\n    let n2 = r-m;\n\n    const L = rects.slice(l, m+1);\n    const R = rects.slice(m+1,r+1);\n    let i = 0;\n    let j = 0;\n    let k = l;\n    while(i<n1 && j<n2){\n        if( L[i].width <= R[j].width ){\n            rects[k] = L[i];\n            i++;\n        } else{\n            rects[k] = R[j];\n            j++;\n        }\n        k++;\n    }\n    while (i < n1) {\n        rects[k] = L[i];\n        i++;\n        k++;\n    }\n    while (j < n2) {\n        rects[k] = R[j];\n        j++;\n        k++;\n    }\n\n}\n\nfunction mergeS(rects,l,r){\n\n    if( l>=r ) return;\n    let m = l+ (r-l)/2;\n    m = Math.floor(m);\n   // console.log(\"iiiiiiiiiiiiiiiiiiiiiiiii \",m);\n    mergeS(rects,l,m);\n    mergeS(rects,m+1,r);\n    merge(rects,l,m,r);\n    let rectsCopy = rects.slice(l,r+1);\n    let value = {\n        left:l,\n        right:r,\n        mid:m,\n        val:rectsCopy\n    }\n    values.push(value);\n}"],"mappings":"AAAA,GAAI,CAAAA,MAAM,CAAG,EAAE,CACf,cAAe,SAAS,CAAAC,SAASA,CAACC,MAAM,CAAC,CACrC,GAAI,CAAAC,KAAK,CAAGD,MAAM,CAACE,KAAK,CAAC,CAAC,CAC1BJ,MAAM,CAAG,EAAE,CACX,GAAI,CAAAK,EAAE,CAAGH,MAAM,CAACI,MAAM,CACvB;AACCD,EAAE,CAAGA,EAAE,CAAC,CAAC,CACTE,MAAM,CAACJ,KAAK,CAAC,CAAC,CAACE,EAAE,CAAC,CAClB,MAAO,CAAAL,MAAM,CACjB,CAEA,QAAS,CAAAQ,KAAKA,CAACL,KAAK,CAAEM,CAAC,CAAEC,CAAC,CAAEC,CAAC,CAAC,CAC5B;AACE,GAAI,CAAAC,EAAE,CAAGF,CAAC,CAACD,CAAC,CAAC,CAAC,CACd,GAAI,CAAAI,EAAE,CAAGF,CAAC,CAACD,CAAC,CAEZ,KAAM,CAAAI,CAAC,CAAGX,KAAK,CAACC,KAAK,CAACK,CAAC,CAAEC,CAAC,CAAC,CAAC,CAAC,CAC7B,KAAM,CAAAK,CAAC,CAAGZ,KAAK,CAACC,KAAK,CAACM,CAAC,CAAC,CAAC,CAACC,CAAC,CAAC,CAAC,CAAC,CAC9B,GAAI,CAAAK,CAAC,CAAG,CAAC,CACT,GAAI,CAAAC,CAAC,CAAG,CAAC,CACT,GAAI,CAAAC,CAAC,CAAGT,CAAC,CACT,MAAMO,CAAC,CAACJ,EAAE,EAAIK,CAAC,CAACJ,EAAE,CAAC,CACf,GAAIC,CAAC,CAACE,CAAC,CAAC,CAACG,KAAK,EAAIJ,CAAC,CAACE,CAAC,CAAC,CAACE,KAAK,CAAE,CAC1BhB,KAAK,CAACe,CAAC,CAAC,CAAGJ,CAAC,CAACE,CAAC,CAAC,CACfA,CAAC,EAAE,CACP,CAAC,IAAK,CACFb,KAAK,CAACe,CAAC,CAAC,CAAGH,CAAC,CAACE,CAAC,CAAC,CACfA,CAAC,EAAE,CACP,CACAC,CAAC,EAAE,CACP,CACA,MAAOF,CAAC,CAAGJ,EAAE,CAAE,CACXT,KAAK,CAACe,CAAC,CAAC,CAAGJ,CAAC,CAACE,CAAC,CAAC,CACfA,CAAC,EAAE,CACHE,CAAC,EAAE,CACP,CACA,MAAOD,CAAC,CAAGJ,EAAE,CAAE,CACXV,KAAK,CAACe,CAAC,CAAC,CAAGH,CAAC,CAACE,CAAC,CAAC,CACfA,CAAC,EAAE,CACHC,CAAC,EAAE,CACP,CAEJ,CAEA,QAAS,CAAAX,MAAMA,CAACJ,KAAK,CAACM,CAAC,CAACE,CAAC,CAAC,CAEtB,GAAIF,CAAC,EAAEE,CAAC,CAAG,OACX,GAAI,CAAAD,CAAC,CAAGD,CAAC,CAAE,CAACE,CAAC,CAACF,CAAC,EAAE,CAAC,CAClBC,CAAC,CAAGU,IAAI,CAACC,KAAK,CAACX,CAAC,CAAC,CAClB;AACCH,MAAM,CAACJ,KAAK,CAACM,CAAC,CAACC,CAAC,CAAC,CACjBH,MAAM,CAACJ,KAAK,CAACO,CAAC,CAAC,CAAC,CAACC,CAAC,CAAC,CACnBH,KAAK,CAACL,KAAK,CAACM,CAAC,CAACC,CAAC,CAACC,CAAC,CAAC,CAClB,GAAI,CAAAW,SAAS,CAAGnB,KAAK,CAACC,KAAK,CAACK,CAAC,CAACE,CAAC,CAAC,CAAC,CAAC,CAClC,GAAI,CAAAY,KAAK,CAAG,CACRC,IAAI,CAACf,CAAC,CACNgB,KAAK,CAACd,CAAC,CACPe,GAAG,CAAChB,CAAC,CACLiB,GAAG,CAACL,SACR,CAAC,CACDtB,MAAM,CAAC4B,IAAI,CAACL,KAAK,CAAC,CACtB","ignoreList":[]},"metadata":{},"sourceType":"module"}