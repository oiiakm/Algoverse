{"ast":null,"code":"import React,{Component}from'react';import Ribbon from\"./ribbon\";import{getNextStep,getTable}from'../algorithms/turing';import Menu from\"./menu\";import Navbar from\"./navbar\";import Table from\"./table\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";class TuringMachine extends Component{constructor(){super();this.handleLeftShift=()=>{this.setState({cellStart:this.state.cellStart+1,cellEnd:this.state.cellEnd+1,midCell:this.state.midCell+1});};this.handleRightShift=()=>{// console.log('aaaaaaa')\nthis.setState({cellStart:this.state.cellStart-1,cellEnd:this.state.cellEnd-1,midCell:this.state.midCell-1});};this.handleSet=()=>{this.handleReset();let string=this.state.inputString1;let strip=[...this.state.strip];for(let i=0;i<string.length;i++){strip[50+i]={...strip[50+i],val:string[i]};}this.setState({strip});};this.handleReset=()=>{const width=window.innerWidth;let cellCount=Math.floor(width/50);if(cellCount%2===0)cellCount--;let strip=[...this.state.strip];if(strip.length===0)strip=getInitialGrid(cellCount);for(let i=0;i<strip.length;i++)strip[i].val='B';this.setState({strip,midCell:50});let cellStart,cellEnd;cellStart=50+(1-cellCount)/2;cellEnd=50+(cellCount-1)/2;this.setState({cellStart,cellEnd,state:-1});};this.handleStart=()=>{// this.handleReset();\nthis.handleSet();this.handleAlgo();};this.handleAlgo=async()=>{await sleep(500);let state='q0';while(state!=='qe'){let read=this.state.strip[this.state.midCell].val;read=read.toString();let[nextState,write,dir,rowIdx]=getNextStep(state,read,this.state.algo);this.setState({state:rowIdx});let strip=[...this.state.strip];strip[this.state.midCell].val=write;document.getElementById('stepsText').innerText='Reads '+read+' on strip';// await sleep(500);\nawait sleep(1000);document.getElementById('stepsText').innerText='writes '+write+' on strip';this.setState({strip});await sleep(500);if(dir==='R')this.handleLeftShift();else this.handleRightShift();state=nextState;}};this.setInput1=event=>{let input=event.target.value;const filtered=[...input].filter(item=>item===\"0\"||item===\"1\").slice(0,8).join(\"\");this.setState({inputString1:filtered});};this.setInput2=event=>{let input=event.target.value;const filtered=[...input].filter(item=>item===\"0\"||item===\"1\").slice(0,8).join(\"\");this.setState({inputString2:filtered});};this.setAlgo=(pos,val)=>{if(pos===0){// console.log(\"sup 0\");\nthis.setState({algo:val});}};this.state={cellCount:0,cellStart:0,cellEnd:0,midCell:0,strip:[],inputString1:\"\",inputString2:\"\",table:[],algo:0,state:-1};}componentDidMount(){getNextStep('100');this.handleReset();}render(){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(Menu,{visualize:this.handleStart,onAlgoChanged:this.setAlgo,onReset:this.handleReset,setInput1:this.setInput1,setInput2:this.setInput2}),/*#__PURE__*/_jsxs(\"center\",{children:[/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-info\",children:[/*#__PURE__*/_jsx(Ribbon,{strip:this.state.strip,midCell:this.state.midCell,cellCount:this.state.cellCount,cellStart:this.state.cellStart,cellEnd:this.state.cellEnd}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-warning m-3\",onClick:this.handleLeftShift,children:/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",width:\"16\",height:\"16\",fill:\"currentColor\",className:\"bi bi-caret-left-square-fill\",viewBox:\"0 0 16 16\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M0 2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2zm10.5 10V4a.5.5 0 0 0-.832-.374l-4.5 4a.5.5 0 0 0 0 .748l4.5 4A.5.5 0 0 0 10.5 12z\"})})}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-warning m-3\",onClick:this.handleRightShift,children:/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",width:\"16\",height:\"16\",fill:\"currentColor\",className:\"bi bi-caret-right-square-fill\",viewBox:\"0 0 16 16\",children:/*#__PURE__*/_jsx(\"path\",{d:\"M0 2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2zm5.5 10a.5.5 0 0 0 .832.374l4.5-4a.5.5 0 0 0 0-.748l-4.5-4A.5.5 0 0 0 5.5 4v8z\"})})})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-4\",children:/*#__PURE__*/_jsx(Table,{data:getTable(this.state.algo),state:this.state.state})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-4\",children:/*#__PURE__*/_jsx(\"span\",{className:\"bg-light p-2 font-weight-bold text-lg-center rounded-3\",id:\"stepsText\",children:\"Details goes here\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-4\"})]})]})]});}}const getInitialGrid=()=>{const strip=[];for(let cell=0;cell<=100;cell++){let currentCell={id:cell,val:'B'};strip.push(currentCell);}return strip;};function sleep(ms){return new Promise(resolve=>setTimeout(resolve,ms));}export default TuringMachine;","map":{"version":3,"names":["React","Component","Ribbon","getNextStep","getTable","Menu","Navbar","Table","jsx","_jsx","jsxs","_jsxs","TuringMachine","constructor","handleLeftShift","setState","cellStart","state","cellEnd","midCell","handleRightShift","handleSet","handleReset","string","inputString1","strip","i","length","val","width","window","innerWidth","cellCount","Math","floor","getInitialGrid","handleStart","handleAlgo","sleep","read","toString","nextState","write","dir","rowIdx","algo","document","getElementById","innerText","setInput1","event","input","target","value","filtered","filter","item","slice","join","setInput2","inputString2","setAlgo","pos","table","componentDidMount","render","children","visualize","onAlgoChanged","onReset","className","onClick","xmlns","height","fill","viewBox","d","data","id","cell","currentCell","push","ms","Promise","resolve","setTimeout"],"sources":["/Users/amit/Desktop/Algoverse-main/src/Turing Machine/turingMachine.jsx"],"sourcesContent":["import React, {Component} from 'react';\nimport Ribbon from \"./ribbon\";\n\nimport {getNextStep, getTable} from '../algorithms/turing';\nimport Menu from \"./menu\";\nimport Navbar from \"./navbar\";\nimport Table from \"./table\";\n\nclass TuringMachine extends Component {\n    constructor() {\n        super();\n        this.state = {\n            cellCount: 0,\n            cellStart: 0,\n            cellEnd: 0,\n            midCell: 0,\n            strip: [],\n            inputString1: \"\",\n            inputString2: \"\",\n            table: [],\n            algo: 0,\n            state: -1\n        }\n    }\n\n    componentDidMount() {\n        getNextStep('100');\n        this.handleReset();\n\n\n    }\n\n    handleLeftShift = () => {\n        this.setState({\n            cellStart: this.state.cellStart + 1,\n            cellEnd: this.state.cellEnd + 1,\n            midCell: this.state.midCell + 1\n        });\n    }\n    handleRightShift = () => {\n        // console.log('aaaaaaa')\n        this.setState({\n            cellStart: this.state.cellStart - 1,\n            cellEnd: this.state.cellEnd - 1,\n            midCell: this.state.midCell - 1\n        });\n    }\n\n    handleSet = () => {\n        this.handleReset();\n        let string = this.state.inputString1;\n        let strip = [...this.state.strip];\n        for (let i = 0; i < string.length; i++) {\n            strip[50 + i] = {\n                ...strip[50 + i],\n                val: string[i]\n            }\n        }\n        this.setState({strip});\n    }\n    handleReset = () => {\n        const width = window.innerWidth;\n        let cellCount = Math.floor(width / 50);\n        if (cellCount % 2 === 0) cellCount--;\n        let strip = [...this.state.strip];\n        if (strip.length === 0) strip = getInitialGrid(cellCount);\n        for (let i = 0; i < strip.length; i++)\n            strip[i].val = 'B';\n\n        this.setState({strip, midCell: 50});\n        let cellStart, cellEnd;\n        cellStart = 50 + (1 - cellCount) / 2;\n        cellEnd = 50 + (cellCount - 1) / 2;\n        this.setState({cellStart, cellEnd,state:-1});\n    }\n\n    handleStart = () => {\n        // this.handleReset();\n        this.handleSet();\n        this.handleAlgo();\n    }\n\n    handleAlgo = async () => {\n        await sleep(500);\n        let state = 'q0';\n\n        while (state !== 'qe') {\n\n            let read = this.state.strip[this.state.midCell].val;\n            read = read.toString();\n            let [nextState, write, dir, rowIdx] = getNextStep(state, read, this.state.algo);\n            this.setState({state: rowIdx});\n            let strip = [...this.state.strip];\n            strip[this.state.midCell].val = write;\n            document.getElementById('stepsText').innerText = 'Reads ' + read + ' on strip';\n            // await sleep(500);\n\n            await sleep(1000);\n\n            document.getElementById('stepsText').innerText = 'writes ' + write + ' on strip';\n\n            this.setState({strip});\n            await sleep(500);\n            if (dir === 'R') this.handleLeftShift();\n            else this.handleRightShift();\n\n            state = nextState;\n        }\n    }\n\n    setInput1 = (event) => {\n        let input = event.target.value;\n        const filtered = [...input].filter((item) => item === \"0\" || item === \"1\").slice(0, 8).join(\"\");\n        this.setState({inputString1: filtered});\n    }\n    setInput2 = (event) => {\n        let input = event.target.value;\n        const filtered = [...input].filter((item) => item === \"0\" || item === \"1\").slice(0, 8).join(\"\");\n        this.setState({inputString2: filtered});\n    }\n    setAlgo = (pos, val) => {\n        if (pos === 0) {\n            // console.log(\"sup 0\");\n            this.setState({algo: val});\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar/>\n                <Menu\n                    visualize={this.handleStart}\n                    onAlgoChanged={this.setAlgo}\n                    onReset={this.handleReset}\n                    setInput1={this.setInput1}\n                    setInput2={this.setInput2}\n                />\n\n                {/*<div className='row'>*/}\n                {/*    <div className=\"input-group mt-2 col-3\">*/}\n                {/*        <input type=\"text\" id='inputText1' className=\"form-control\" placeholder=\"Input Binary\"*/}\n                {/*               aria-label=\"Username\"*/}\n                {/*               aria-describedby=\"basic-addon1\"*/}\n                {/*               onChange={this.setInput1}*/}\n                {/*        />*/}\n                {/*    </div>*/}\n                {/*    <div className=\"input-group mt-2 col-3\">*/}\n                {/*        <input type=\"text\" id='inputText1' className=\"form-control\" placeholder=\"Input Binary 2\"*/}\n                {/*               aria-label=\"Username\"*/}\n                {/*               aria-describedby=\"basic-addon1\"/>*/}\n                {/*    </div>*/}\n                {/*</div>*/}\n\n                <center>\n                    <br/>\n                    <div className='bg-info'>\n                        {/*<h3>Turing Machine</h3>*/}\n                        <Ribbon\n                            strip={this.state.strip}\n                            midCell={this.state.midCell}\n                            cellCount={this.state.cellCount}\n                            cellStart={this.state.cellStart}\n                            cellEnd={this.state.cellEnd}\n                        ></Ribbon>\n                        <button\n                            className='btn btn-warning m-3'\n                            onClick={this.handleLeftShift}\n                        >\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\n                                 className=\"bi bi-caret-left-square-fill\" viewBox=\"0 0 16 16\">\n                                <path\n                                    d=\"M0 2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2zm10.5 10V4a.5.5 0 0 0-.832-.374l-4.5 4a.5.5 0 0 0 0 .748l4.5 4A.5.5 0 0 0 10.5 12z\"/>\n                            </svg>\n                        </button>\n                        <button\n                            className='btn btn-warning m-3'\n                            onClick={this.handleRightShift}\n                        >\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\n                                 className=\"bi bi-caret-right-square-fill\" viewBox=\"0 0 16 16\">\n                                <path\n                                    d=\"M0 2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2zm5.5 10a.5.5 0 0 0 .832.374l4.5-4a.5.5 0 0 0 0-.748l-4.5-4A.5.5 0 0 0 5.5 4v8z\"/>\n                            </svg>\n\n                        </button>\n                    </div>\n                    <br/>\n\n                    <div className='row'>\n                        <div className='col-4'>\n                            <Table\n                                data={getTable(this.state.algo)}\n                                state={this.state.state}\n                            />\n                        </div>\n                        <div className='col-4'>\n                            <span className='bg-light p-2 font-weight-bold text-lg-center rounded-3' id='stepsText'>\n                                 Details goes here\n                            </span>\n                        </div>\n                        <div className='col-4'>\n                            {/*<textarea disabled className=\"form-control\" id=\"Textarea1\" rows=\"3\">*/}\n\n                            {/*</textarea>*/}\n                        </div>\n                    </div>\n                </center>\n            </div>\n        );\n    }\n}\n\nconst getInitialGrid = () => {\n    const strip = [];\n    for (let cell = 0; cell <= 100; cell++) {\n        let currentCell = {\n            id: cell,\n            val: 'B'\n        }\n        strip.push(currentCell);\n    }\n    return strip;\n}\n\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport default TuringMachine;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}