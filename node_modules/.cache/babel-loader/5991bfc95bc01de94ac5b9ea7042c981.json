{"ast":null,"code":"import React,{Component}from'react';import'./style.css';import queen from'./queen.png';import{jsx as _jsx}from\"react/jsx-runtime\";class Cell extends Component{constructor(){super(...arguments);this.getClassName=()=>{if(this.props.cell.isAttacked){return\"boardCell attacked\";}else if(this.props.cell.isCurrent){return\"boardCell current\";}else if(this.props.cell.isPresent){return\"boardCell present\";}else if(this.props.cell.isChecked){return\"boardCell checked\";}else{return\"boardCell\";}};this.getStyled=()=>{if((this.props.cell.row+this.props.cell.col)%2===0){return{backgroundColor:\"white\"};}else{return{backgroundColor:\"grey\"};}};}render(){return/*#__PURE__*/_jsx(\"div\",{className:this.getClassName(),style:this.getStyled(),children:this.props.cell.isPresent&&/*#__PURE__*/_jsx(\"img\",{src:queen,alt:\"queen\",height:\"100px\",style:{padding:\"25px\"}})});}}export default Cell;","map":{"version":3,"names":["React","Component","queen","jsx","_jsx","Cell","constructor","arguments","getClassName","props","cell","isAttacked","isCurrent","isPresent","isChecked","getStyled","row","col","backgroundColor","render","className","style","children","src","alt","height","padding"],"sources":["/Users/amit/Desktop/Algoverse-main/src/queenComponents/cell.jsx"],"sourcesContent":["import React, {Component} from 'react';\nimport './style.css'\nimport queen from './queen.png';\nclass Cell extends Component {\n    render() {\n        return (\n            <div className={this.getClassName()} style={this.getStyled()}>\n                { this.props.cell.isPresent && <img src={queen} alt=\"queen\" height='100px' style={{padding:\"25px\"}}/> }\n            </div>\n        );\n    }\n    getClassName = ()=>{\n        if(this.props.cell.isAttacked){\n            return \"boardCell attacked\";\n        } else if(this.props.cell.isCurrent){\n            return \"boardCell current\";\n        }else if(this.props.cell.isPresent){\n            return \"boardCell present\";\n        }else if(this.props.cell.isChecked){\n            return \"boardCell checked\";\n        } else{\n            return \"boardCell\";\n        }\n    }\n    getStyled = () =>{\n        if( (this.props.cell.row+this.props.cell.col)%2 === 0 ){\n            return {\n                backgroundColor:\"white\"\n            }\n        }else{\n            return {\n                backgroundColor:\"grey\"\n            }\n        }\n    }\n}\n\nexport default Cell;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAGC,SAAS,KAAO,OAAO,CACtC,MAAO,aAAa,CACpB,MAAO,CAAAC,KAAK,KAAM,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAChC,KAAM,CAAAC,IAAI,QAAS,CAAAJ,SAAU,CAAAK,YAAA,WAAAC,SAAA,OAQzBC,YAAY,CAAG,IAAI,CACf,GAAG,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,UAAU,CAAC,CAC1B,MAAO,oBAAoB,CAC/B,CAAC,IAAM,IAAG,IAAI,CAACF,KAAK,CAACC,IAAI,CAACE,SAAS,CAAC,CAChC,MAAO,mBAAmB,CAC9B,CAAC,IAAK,IAAG,IAAI,CAACH,KAAK,CAACC,IAAI,CAACG,SAAS,CAAC,CAC/B,MAAO,mBAAmB,CAC9B,CAAC,IAAK,IAAG,IAAI,CAACJ,KAAK,CAACC,IAAI,CAACI,SAAS,CAAC,CAC/B,MAAO,mBAAmB,CAC9B,CAAC,IAAK,CACF,MAAO,WAAW,CACtB,CACJ,CAAC,MACDC,SAAS,CAAG,IAAK,CACb,GAAI,CAAC,IAAI,CAACN,KAAK,CAACC,IAAI,CAACM,GAAG,CAAC,IAAI,CAACP,KAAK,CAACC,IAAI,CAACO,GAAG,EAAE,CAAC,GAAK,CAAC,CAAE,CACnD,MAAO,CACHC,eAAe,CAAC,OACpB,CAAC,CACL,CAAC,IAAI,CACD,MAAO,CACHA,eAAe,CAAC,MACpB,CAAC,CACL,CACJ,CAAC,EA9BDC,MAAMA,CAAA,CAAG,CACL,mBACIf,IAAA,QAAKgB,SAAS,CAAE,IAAI,CAACZ,YAAY,CAAC,CAAE,CAACa,KAAK,CAAE,IAAI,CAACN,SAAS,CAAC,CAAE,CAAAO,QAAA,CACvD,IAAI,CAACb,KAAK,CAACC,IAAI,CAACG,SAAS,eAAIT,IAAA,QAAKmB,GAAG,CAAErB,KAAM,CAACsB,GAAG,CAAC,OAAO,CAACC,MAAM,CAAC,OAAO,CAACJ,KAAK,CAAE,CAACK,OAAO,CAAC,MAAM,CAAE,CAAC,CAAC,CACpG,CAAC,CAEd,CAyBJ,CAEA,cAAe,CAAArB,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module"}