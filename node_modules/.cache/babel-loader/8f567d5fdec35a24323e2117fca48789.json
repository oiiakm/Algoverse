{"ast":null,"code":"var _jsxFileName = \"/Users/amit/Desktop/AlgorithmVisualizer-master/src/queenComponents/queen.jsx\";\nimport React, { Component } from 'react';\nimport Cells from \"./cells\";\nimport Navbar from \"./navbar\";\nimport Menu from \"./menu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Queen extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      board: [],\n      number: 4,\n      speed: 490,\n      isRunning: false\n    };\n    this.handleStop = () => {\n      this.setState({\n        isRunning: false\n      });\n    };\n    this.handleSpeedChange = val => {\n      const speed = (100 - val) * 10;\n      this.setState({\n        speed\n      });\n    };\n    this.handleQueenChange = number => {\n      this.setState({\n        number\n      });\n      const board = getBoard(this.state.number);\n      this.setState({\n        board\n      });\n    };\n    this.handleClear = () => {\n      const board = getBoard(this.state.number);\n      this.setState({\n        board\n      });\n    };\n    this.handleTurnOff = () => {\n      const newBoard = turnOffAttack(this.state.board, this.state.number);\n      this.setState({\n        board: newBoard\n      });\n    };\n    this.startAlgo = async () => {\n      this.setState({\n        isRunning: true\n      });\n      const newBoard = this.state.board.slice();\n      await this.queensAlgo(newBoard, 0);\n      const newBoard2 = turnOffAttack(this.state.board, this.state.number);\n      this.setState({\n        board: newBoard2,\n        isRunning: false\n      });\n    };\n    this.queensAlgo = async (board, col) => {\n      if (col >= this.state.number) {\n        return true;\n      }\n      let newBoard = board.slice();\n      for (let i = 0; i < this.state.number; i++) {\n        newBoard = turnOffAttack(newBoard, this.state.number);\n        const result = getChecked(newBoard, i, col, this.state.number);\n        newBoard = result[0];\n        this.setState({\n          board: newBoard\n        });\n        await sleep(this.state.speed);\n        if (result[1]) {\n          const res = await this.queensAlgo(newBoard, col + 1);\n          if (res === true) {\n            return true;\n          }\n          newBoard[i][col] = {\n            ...newBoard[i][col],\n            isPresent: true,\n            isCurrent: true\n          };\n          this.setState({\n            board: newBoard\n          });\n          await sleep(this.state.speed);\n          newBoard[i][col] = {\n            ...newBoard[i][col],\n            isPresent: false,\n            isCurrent: false\n          };\n          this.setState({\n            board: newBoard\n          });\n        }\n        newBoard[i][col] = {\n          ...newBoard[i][col],\n          isPresent: false,\n          isCurrent: false\n        };\n        newBoard = turnOffAttack(newBoard, this.state.number);\n        this.setState({\n          board: newBoard\n        });\n        await sleep(this.state.speed);\n      }\n      return false;\n    };\n  }\n  componentDidMount() {\n    const board = getBoard(this.state.number);\n    // board[3][3].isPresent = true;\n    this.setState({\n      board\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Menu, {\n        onSpeedChange: this.handleSpeedChange,\n        onCountChange: this.handleQueenChange,\n        onViusalize: this.startAlgo,\n        disable: this.state.isRunning,\n        onClear: this.handleClear,\n        onStop: this.handleStop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"Center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Cells, {\n          board: this.state.board\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Queen;\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\nconst turnOffAttack = (board, N) => {\n  const newBoard = board.slice();\n  for (let i = 0; i < N; i++) {\n    for (let j = 0; j < N; j++) {\n      newBoard[i][j] = {\n        ...newBoard[i][j],\n        isChecked: false,\n        isAttacked: false,\n        isCurrent: false\n      };\n    }\n  }\n  return newBoard;\n};\nconst getChecked = (board, row, col, N) => {\n  const newBoard = board.slice();\n  let pos = true;\n  // same col\n  for (let i = 0; i < N; i++) {\n    if (newBoard[row][i].isPresent) {\n      newBoard[row][i] = {\n        ...newBoard[row][i],\n        isAttacked: true\n      };\n      pos = false;\n    } else {\n      newBoard[row][i] = {\n        ...newBoard[row][i],\n        isChecked: true\n      };\n    }\n  }\n  // same row\n  for (let i = 0; i < N; i++) {\n    if (newBoard[i][col].isPresent) {\n      newBoard[i][col] = {\n        ...newBoard[i][col],\n        isAttacked: true\n      };\n      pos = false;\n    } else {\n      newBoard[i][col] = {\n        ...newBoard[i][col],\n        isChecked: true\n      };\n    }\n  }\n  for (let i = row, j = col; i >= 0 && j >= 0; i--, j--) {\n    if (newBoard[i][j].isPresent) {\n      newBoard[i][j] = {\n        ...newBoard[i][j],\n        isAttacked: true\n      };\n      pos = false;\n    } else {\n      newBoard[i][j] = {\n        ...newBoard[i][j],\n        isChecked: true\n      };\n    }\n  }\n  for (let i = row, j = col; i < N && j >= 0; i++, j--) {\n    if (newBoard[i][j].isPresent) {\n      newBoard[i][j] = {\n        ...newBoard[i][j],\n        isAttacked: true\n      };\n      pos = false;\n    } else {\n      newBoard[i][j] = {\n        ...newBoard[i][j],\n        isChecked: true\n      };\n    }\n  }\n  for (let i = row, j = col; i < N && j < N; i++, j++) {\n    if (newBoard[i][j].isPresent) {\n      newBoard[i][j] = {\n        ...newBoard[i][j],\n        isAttacked: true\n      };\n      pos = false;\n    } else {\n      newBoard[i][j] = {\n        ...newBoard[i][j],\n        isChecked: true\n      };\n    }\n  }\n  for (let i = row, j = col; i >= 0 && j < N; i--, j++) {\n    if (newBoard[i][j].isPresent) {\n      newBoard[i][j] = {\n        ...newBoard[i][j],\n        isAttacked: true\n      };\n      pos = false;\n    } else {\n      newBoard[i][j] = {\n        ...newBoard[i][j],\n        isChecked: true\n      };\n    }\n  }\n  newBoard[row][col] = {\n    ...newBoard[row][col],\n    isPresent: true,\n    isCurrent: true\n  };\n  return [newBoard, pos];\n};\nconst getBoard = N => {\n  const rows = [];\n  for (let i = 0; i < N; i++) {\n    const cols = [];\n    for (let j = 0; j < N; j++) {\n      cols.push(getCell(i, j));\n    }\n    rows.push(cols);\n  }\n  return rows;\n};\nconst getCell = (row, col) => {\n  return {\n    row,\n    col,\n    isPresent: false,\n    isChecked: false,\n    isAttacked: false,\n    isCurrent: false\n  };\n};","map":{"version":3,"names":["React","Component","Cells","Navbar","Menu","jsxDEV","_jsxDEV","Queen","constructor","props","state","board","number","speed","isRunning","handleStop","setState","handleSpeedChange","val","handleQueenChange","getBoard","handleClear","handleTurnOff","newBoard","turnOffAttack","startAlgo","slice","queensAlgo","newBoard2","col","i","result","getChecked","sleep","res","isPresent","isCurrent","componentDidMount","render","children","fileName","_jsxFileName","lineNumber","columnNumber","onSpeedChange","onCountChange","onViusalize","disable","onClear","onStop","style","textAlign","ms","Promise","resolve","setTimeout","N","j","isChecked","isAttacked","row","pos","rows","cols","push","getCell"],"sources":["/Users/amit/Desktop/AlgorithmVisualizer-master/src/queenComponents/queen.jsx"],"sourcesContent":["import React, {Component} from 'react';\nimport Cells from \"./cells\";\nimport Navbar from \"./navbar\";\nimport Menu from \"./menu\";\n\nclass Queen extends Component {\n    state={\n        board:[],\n        number:4,\n        speed:490,\n        isRunning:false\n    }\n\n    constructor(props) {\n        super(props);\n    }\n    componentDidMount() {\n        const board = getBoard(this.state.number);\n       // board[3][3].isPresent = true;\n        this.setState({board});\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar/>\n                <Menu\n                    onSpeedChange={this.handleSpeedChange}\n                    onCountChange={this.handleQueenChange}\n                    onViusalize={this.startAlgo}\n                    disable={this.state.isRunning}\n                    onClear={this.handleClear}\n                    onStop={this.handleStop}\n                />\n                <div style={{textAlign:\"Center\"}}>\n                    <Cells\n                        board={this.state.board}\n                    />\n                </div>\n            </div>\n        );\n    }\n\n    handleStop =() =>{\n        this.setState({isRunning:false});\n    }\n\n    handleSpeedChange = (val)=>{\n        const speed = (100-val)*10;\n        this.setState({speed});\n    }\n    handleQueenChange = (number)=>{\n        this.setState({number});\n        const board = getBoard(this.state.number);\n        this.setState({board});\n    }\n    handleClear = () => {\n        const board = getBoard(this.state.number);\n        this.setState({board});\n    }\n    handleTurnOff =  () => {\n        const newBoard = turnOffAttack(this.state.board,this.state.number);\n        this.setState({board:newBoard});\n    }\n    startAlgo = async ()=>{\n        this.setState({isRunning:true});\n        const newBoard = this.state.board.slice();\n        await this.queensAlgo(newBoard,0);\n        const newBoard2 = turnOffAttack(this.state.board,this.state.number);\n        this.setState({board:newBoard2,isRunning:false});\n    }\n    queensAlgo =  async (board,col) => {\n\n        if( col>=this.state.number ){\n            return true;\n        }\n\n        let newBoard = board.slice();\n        for( let i = 0; i < this.state.number;i++ ){\n\n\n            newBoard = turnOffAttack(newBoard,this.state.number);\n            const result = getChecked(newBoard,i,col,this.state.number);\n            newBoard = result[0];\n\n            this.setState({board:newBoard});\n            await sleep(this.state.speed);\n            if( result[1] ){\n                const res = await this.queensAlgo(newBoard,col+1)\n                if( res === true){\n                    return true;\n                }\n                newBoard[i][col] = {...newBoard[i][col],isPresent:true,isCurrent:true};\n                this.setState({board:newBoard});\n                await sleep(this.state.speed);\n                newBoard[i][col] = {...newBoard[i][col],isPresent:false,isCurrent:false};\n                this.setState({board:newBoard});\n\n            }\n            newBoard[i][col] = {...newBoard[i][col],isPresent:false,isCurrent:false};\n            newBoard = turnOffAttack(newBoard,this.state.number);\n            this.setState({board:newBoard});\n            await sleep(this.state.speed);\n        }\n        return false;\n    }\n\n}\n\nexport default Queen;\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\nconst turnOffAttack = (board,N) =>{\n    const newBoard = board.slice();\n    for( let i = 0;i<N; i++ ){\n        for( let j = 0;j<N;j++ ){\n            newBoard[i][j] = {...newBoard[i][j],isChecked:false, isAttacked:false,isCurrent:false};\n        }\n    }\n    return newBoard;\n}\n\nconst getChecked = (board,row,col,N) =>{\n    const newBoard = board.slice();\n    let pos = true;\n    // same col\n    for( let i = 0;i < N;i++ ){\n        if( newBoard[row][i].isPresent ){\n            newBoard[row][i] = {...newBoard[row][i],isAttacked:true};\n            pos = false;\n        } else{\n            newBoard[row][i] = {...newBoard[row][i],isChecked:true};\n        }\n    }\n    // same row\n    for( let i = 0;i < N;i++ ){\n        if( newBoard[i][col].isPresent ){\n            newBoard[i][col] = {...newBoard[i][col],isAttacked:true};\n            pos = false;\n        } else{\n            newBoard[i][col] = {...newBoard[i][col],isChecked:true};\n        }\n    }\n    for( let i = row,j = col; i >= 0 && j >= 0; i--, j--){\n        if( newBoard[i][j].isPresent ){\n            newBoard[i][j] = {...newBoard[i][j],isAttacked:true};\n            pos = false;\n        } else{\n            newBoard[i][j] = {...newBoard[i][j],isChecked:true};\n        }\n    }\n    for( let i = row,j = col; i <N && j >= 0; i++, j--){\n        if( newBoard[i][j].isPresent ){\n            newBoard[i][j] = {...newBoard[i][j],isAttacked:true};\n            pos = false;\n        } else{\n            newBoard[i][j] = {...newBoard[i][j],isChecked:true};\n        }\n    }\n    for( let i = row,j = col; i <N && j < N; i++, j++){\n        if( newBoard[i][j].isPresent ){\n            newBoard[i][j] = {...newBoard[i][j],isAttacked:true};\n            pos = false;\n        } else{\n            newBoard[i][j] = {...newBoard[i][j],isChecked:true};\n        }\n    }\n    for( let i = row,j = col; i>=0 && j < N; i--, j++){\n        if( newBoard[i][j].isPresent ){\n            newBoard[i][j] = {...newBoard[i][j],isAttacked:true};\n            pos = false;\n        } else{\n            newBoard[i][j] = {...newBoard[i][j],isChecked:true};\n        }\n    }\n\n    newBoard[row][col] = {...newBoard[row][col],isPresent:true,isCurrent:true};\n\n    return [newBoard,pos];\n}\nconst getBoard = (N) =>{\n    const rows = [];\n    for( let i = 0;i<N;i++ ){\n        const cols = [];\n        for(let j =0;j<N;j++){\n            cols.push(getCell(i,j));\n        }\n        rows.push(cols);\n    }\n    return rows;\n}\n\nconst getCell = (row,col)=>{\n    return{\n        row,\n        col,\n        isPresent:false,\n        isChecked:false,\n        isAttacked:false,\n        isCurrent:false\n    }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}