{"version":3,"sources":["helpers/array_helpers.js","pathfinderComponents/node.jsx","pathfinderComponents/grid.jsx","pathfinderComponents/navbar.jsx","pathfinderComponents/simpleSelect.jsx","pathfinderComponents/menu.jsx","algorithms/dijkstra.js","algorithms/recursiveMaze.js","algorithms/bfs.jsx","algorithms/Astar.js","pathfinderComponents/pathfinder.jsx","algorithms/randomMaze.js","homeComponents/navbar.jsx","homeComponents/greet.jsx","homeComponents/typewriter.jsx","homeComponents/images/graph.png","homeComponents/card2.jsx","homeComponents/images/primes.jpg","homeComponents/sort.png","homeComponents/images/queen.PNG","homeComponents/images/binaryTree.png","homeComponents/images/15puzzle.PNG","homeComponents/images/turing.jpg","homeComponents/cards.jsx","homeComponents/cardDetails.js","homeComponents/home.jsx","primeComponents/cell.jsx","primeComponents/cells.jsx","primeComponents/navbar.jsx","primeComponents/slider.jsx","primeComponents/simpleSelect.jsx","primeComponents/menu.jsx","primeComponents/spiral.jsx","primeComponents/seive.jsx","algorithms/prime.js","sortComponents/rect.jsx","sortComponents/rects.jsx","algorithms/sortingAlgorithms.js","algorithms/quickSort.js","sortComponents/navbar.jsx","sortComponents/slider.jsx","sortComponents/simpleSelect.jsx","sortComponents/doubleSlider.jsx","sortComponents/formControlLabel.jsx","sortComponents/menu.jsx","sortComponents/sort.js","queenComponents/queen.png","queenComponents/cell.jsx","queenComponents/cells.jsx","queenComponents/navbar.jsx","queenComponents/slider.jsx","queenComponents/menu.jsx","queenComponents/queen.jsx","algorithms/grahamScan.js","convexHullComponents/canvas.jsx","convexHullComponents/navbar.jsx","convexHullComponents/slider.jsx","convexHullComponents/menu.jsx","convexHullComponents/convexHull.jsx","binarySearchComponent/entryPoint.jsx","binarySearchComponent/doubleSlider.jsx","binarySearchComponent/guess.jsx","binarySearchComponent/result.jsx","binarySearchComponent/search.jsx","binarySearchComponent/navbar.jsx","binarySearchComponent/binarySearch.jsx","recursiveSortComponents/rect.jsx","recursiveSortComponents/rects.jsx","algorithms/mergeSort.js","algorithms/heapSort.js","algorithms/quickSortRecursive.js","recursiveSortComponents/navbar.jsx","recursiveSortComponents/slider.jsx","recursiveSortComponents/simpleSelect.jsx","recursiveSortComponents/doubleSlider.jsx","recursiveSortComponents/menu.jsx","recursiveSortComponents/recursiveSort.js","15puzzleComponents/navbar.jsx","15puzzleComponents/puzzle.jsx","Turing Machine/cell.jsx","Turing Machine/ribbon.jsx","algorithms/turing.js","Turing Machine/simpleSelect.jsx","Turing Machine/menu.jsx","Turing Machine/navbar.jsx","Turing Machine/table.jsx","Turing Machine/turingMachine.jsx","Graph/vertex.jsx","Graph/edge.jsx","Graph/canvasSVG.jsx","Graph/Tree.js","Graph/fib.jsx","Graph/simpleSelect.jsx","Graph/menu.jsx","Graph/navbar.jsx","Graph/details.jsx","Graph/graph.jsx","App.js","reportWebVitals.js","index.js"],"names":["Array","prototype","swap","a","b","this","length","temp","range","n","from","x","i","matrix","y","rows","columns","map","row","slice","Node","Component","constructor","arguments","static","props","col","render","onMouseDown","onMouseEnter","onMouseUp","_jsx","id","className","getClassName","node","isWall","isStartNode","isEndNode","ispathNode","isVisited","Grid","state","grid","children","rowidx","nodeidx","visitedNode","Navbar","_jsxs","type","Link","to","style","color","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","SimpleSelect","classes","age","setAge","React","useState","FormControl","InputLabel","Select","labelId","value","onChange","event","target","onAlgoChanged","items","item","itemidx","MenuItem","Menu","algorithms","onClick","onVisualize","onClearBoard","sortNodesByDistance","unvisitedNodes","sort","nodeA","nodeB","distance","updateUnvisitedNeighbors","unvisitedNeighbors","neighbors","push","filter","neighbor","getUnvisitedNeighbors","previousNode","decideMaze","pairs","board","startRow","endRow","startCol","endCol","mid","Math","floor","random","start","end","xx","yy","recursiveMazeVertical","recursiveMazeHorizontal","bfsdfs","startNode","endNode","algo","list","nodesInOrder","currentNode","shift","pop","nodesToPush","getNeighbours","finishNode","abs","Pathfinder","super","handleMouseDown","newGrid","getNewGridWithWallToggled","setState","mouseIsPressed","handleMouseEnter","handleMouseUp","handleAlgoChanged","val","handleMazeChanged","maze","handleCreateMaze","newBoard","j","randomMaze","getMaze","setTimeout","document","getElementById","handleClearBoard","clearBoard","handleClearPath","clearPath","handleClick","visualizeDijkstra","mazes","componentDidMount","width","window","innerWidth","height","innerHeight","max","getInitialGrid","Fragment","onMazeChanged","onCreateMaze","onClearPath","textAlign","visitedNodesInOrder","nodes","getAllNodes","closestNode","Infinity","dijkstra","aStar","nodesInShortestPathOrder","unshift","getNodesInShortestPathOrder","animateDijkstra","sleep","animateShortestPath","newNode","totRow","totCol","currentRow","createNode","ms","Promise","resolve","backgroundColor","padding","boxShadow","fontSize","fontWeight","background","border","cursor","Greet","TypeWriterC","Typewriter","options","strings","autoStart","loop","card","maxWidth","minHeight","borderRadius","media","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","actionArea","ImgMediaCard2","expanded","setExpanded","CardActionArea","m","Card","route","CardMedia","component","alt","title","src","img","CardHeader","action","IconButton","clsx","handleExpandClick","ExpandMoreIcon","Collapse","in","timeout","unmountOnExit","CardContent","Typography","description","Cards","cards","getData","e","console","log","graph","queen","turing","primes","binSearch","puzzle","TextField","label","toLowerCase","includes","Home","Cell","getClass","isVisiting","isChecking","isPrime","cell","Cells","cells","cellidx","root","valuetext","DiscreteSlider","gutterBottom","Slider","defaultValue","default","getAriaValueText","valueLabelDisplay","onChangeCommitted","innerText","num","parseInt","step","marks","min","disabled","isDisabled","pos","selected","isClickable","onRefresh","setAlgo","onChangeSpeed","onChangeValues","Spiral","Maxwidth","MaxHeight","maxPrime","radius","viewBox","xmlns","cx","cos","cy","sin","r","stroke","fill","Seive","number","isRunning","speed","changeSpeed","handleValueIncease","getCells","handleRefresh","startAlgo","startSeive","startSpiral","async","pprimes","vis","p","q","seive","mod","ceil","prime","changedCells","prevCheck","getNewCellPrimeToggled","getNewCellVisitingToggled","getNewCellCheckToggled","newCells","newCell","createCell","Rect","checkColor","rect","isSorted","isSorting","marg","Rects","rects","FlipMove","rectidx","kk","selectionSort","arr","prevRect","min_idx","changed","recti","rectj","bubbleSort","insertionSort","key","values","quickSort","rects2","sz","quick","left","right","partition","pivot","it","rect1","rect2","getPartition","onCountChange","disable","CSlider","withStyles","track","thumb","RangeSlider","setValue","handleChange","newValue","handleCommit","SwitchLabels","checkedA","FormGroup","FormControlLabel","control","Switch","checked","name","onDoubleChange","onRandomize","onSpeedChange","onViusalize","Sort","count","doubles","isRunning1","isRunning2","algo1","algo2","handleRandomize","getInitialRects","handleDouble","handleCountChange","handleSpeedChanged","handleSort","steps1","steps2","handleFirst","handleSecond","steps","tot","getRect","isAttacked","isCurrent","isPresent","isChecked","getStyled","onClear","Queen","handleStop","handleSpeedChange","handleQueenChange","getBoard","handleClear","handleTurnOff","turnOffAttack","queensAlgo","newBoard2","result","getChecked","onStop","N","cols","getCell","cw","c","ccw","Canvas","dots","lines","canvasWidth","canvasHeight","animateLine","canvas2","canvasLineRef","current","ctx2","getContext","clearRect","fillStyle","strokeStyle","onGoing","beginPath","add","lineWidth","moveTo","arc","PI","closePath","lineTo","onTurnOff","myRef","createRef","redrawDots","componentDidUpdate","prevProps","prevState","snapshot","ref","canvas","ctx","res","points","size","pointStart","pointEnd","up","down","convex_hull","ConvexHull","isALgoLive","handleRefreshDots","handleAlgoStateChanged","isAlgoLive","handleVisualize","getNewDots","handleMoreDot","dot","getDot","rowpos","EntryPoint","error","setUpper","validateNumbers","variant","upper","startGame","lower","useEffect","Guess","getMid","justifyContent","yesButton","noButton","Result","onRestart","Search","BinarySearch","handleStartGame","handleRestart","handleYes","handleNo","handleSetUpper","isLeft","isRight","checkBorder","isRange","mergeSort","mergeS","l","n1","n2","L","R","k","merge","HeapSort","heapify","sorted","heapSort","largest","quickSortRecursive","changedRange","RecursiveSort","handleMerge","handleHeap","handleQuick","hasChanged","ii","Puzzle","balsal","squares","times","easing","stt","Ribbon","d","strip","cellStart","cellEnd","Steps","Maps","invertBitSteps","inverBitMap","Map","set","addOneSteps","addOneMap","twosComplimentSteps","twosComplimentMap","getNextStep","read","undefined","get","placeholder","setInput1","setInput2","onReset","visualize","Table","data","scope","TuringMachine","handleLeftShift","midCell","handleRightShift","handleSet","handleReset","string","inputString1","cellCount","handleStart","handleAlgo","toString","nextState","write","dir","rowIdx","filtered","join","inputString2","table","currentCell","Vertex","beginElement","attributeName","px","dur","repeatCount","py","font","textAnchor","dy","ret","Edge","getPolyPoints","x1","y1","x2","y2","sqrt","getPolyPointsX","getPolyPointsY","refX","refY","markerWidth","markerHeight","orient","strokeWidth","CanvasSvg","increamentXY","vertices","off","offset","edges","edge","vertex","Tree","DrawTree","tree","parent","depth","thread","lbrother","get_lmost_sibling","_lmost_sibling","newTree","ancestor","change","buchheim","dt","firstwalk","second_walk","third_walk","v","default_ancestor","w","apportion","execute_shifts","midpoint","vir","vor","vil","vol","sir","sor","sol","sil","move_subtree","wl","wr","subtrees","getTree","fib","NcR","derangement","bigmod","stirling2","onValueChanged","setN","setR","onStart","Details","Switcherr","Graph","addNumber","recur","verticess","App","Router","basename","Route","path","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.b6fe7e9f.chunk.js","sourcesContent":["/**\n * A set of monkey-patched Array helpers.\n * Probably a bad idea to use these in a real production environment.\n * Monkey-patching is confusing to anyone seeing the project for the first\n * time (or coming back to it after a few weeks).\n * That said, this is a simple demo project, so what the hell, let's break\n * some rules =D\n */\n\n\n/**\n * Array.prototype.swap\n * Rearrange an array to swap the positions of two elements.\n * @param {Number} a - the index of the first element to swap.\n * @param {Number} b - the index of the second element to swap.\n * @returns {Array}\n * @example\n * // returns [ 'a', 'c', 'b' ]\n * [ 'a', 'b', 'c' ].swap(1, 2)\n */\n// eslint-disable-next-line no-extend-native\nArray.prototype.swap = function (a, b) {\n    if ( b >= this.length || b < 0 ) return this;\n\n    // Temporary variable to hold data while we juggle\n    let temp = this[a];\n    this[a] = this[b];\n    this[b] = temp;\n    return this;\n};\n\n/**\n * Array.range\n * Create a new array of length n, where the elements are numbers\n * from 0 to n - 1.\n * @param {Number} n - the desired length of the range.\n * @returns {Array}\n * @example\n * // returns [ 0, 1, 2, 3 ]\n * Array.range(4);\n */\nArray.range = n => Array.from(new Array(n), (x,i) => i);\n\n/**\n * Array.matrix\n * Create a new two-dimensional array, where each element is its own index.\n * @param {Number} x - the desired number of columns (possible x values)\n * @param {Number} y - the desired number of rows (possible y values)\n * @returns {Array}\n * @example\n * // returns [\n * //   [ 0, 1, 2 ],\n * //   [ 0, 1, 2 ]\n * // ]\n * Array.matrix(3, 2);\n */\nArray.matrix = (x, y) => {\n    const rows = Array.range(y);\n    const columns = Array.range(x);\n    return rows.map( (row, i) => columns.slice() );\n}\n","import React, {Component} from 'react';\nimport './node.css'\nclass Node extends Component {\n    static = {\n        row: this.props.row,\n        col: this.props.col\n    }\n    render() {\n        const { row,col,onMouseDown, onMouseEnter,onMouseUp } = this.props;\n        return (\n            <div\n                id = {`node-${this.props.row}-${this.props.col}`}\n                className={this.getClassName()}\n                onMouseDown={() => onMouseDown(row,col)}\n                onMouseEnter={() => onMouseEnter(row,col)}\n                onMouseUp={() => onMouseUp(row,col)}\n            />\n        );\n    }\n    getClassName(){\n        if(this.props.node.isWall === true){\n            return \"node node-wall\";\n        } else if( this.props.node.isStartNode === true ){\n            return \"node  node-start\";\n        } else if( this.props.node.isEndNode === true ){\n            return \"node  node-end\";\n        } else if(this.props.node.ispathNode){\n            return 'node node-shortest-path';\n        }else if( this.props.node.isVisited === true ){\n            return \"node  node-visited\";\n        } else{\n            return \"node\";\n        }\n    }\n}\n\nexport default Node;","import React, {Component} from 'react';\nimport Node from \"./node\";\nimport './grid.css';\nclass Grid extends Component {\n    state = {\n        grid: this.props.grid\n    }\n\n    render() {\n        return (\n            <div className=\"Grid\">\n                {this.props.grid.map((row, rowidx) => {\n                    return (\n                        <div key={rowidx}>\n                            {row.map((node, nodeidx) => {\n                                const {row, col, isWall, visitedNode, } = node;\n                                return (\n                                    <Node\n                                        key={nodeidx}\n                                        row={row}\n                                        col={col}\n                                        node={node}\n                                        isWall={isWall}\n                                        visitedNode={ visitedNode }\n                                        onMouseDown = {this.props.onMouseDown}\n                                        onMouseEnter = {this.props.onMouseEnter}\n                                        onMouseUp = {this.props.onMouseUp}\n                                    />\n                                );\n                            })}\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n\nexport default Grid;","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <span className=\"navbar-brand\">Pathfinder</span>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\n                    <Link to={\"/\"}>\n                        <span style={{color:\"white\"}}>\n                            Home\n                        </span>\n                    </Link>\n                </div>\n\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nconst SimpleSelect = (props) => {\n    const classes = useStyles();\n    const [age, setAge] = React.useState('0');\n\n    const handleChange = (event) => {\n        setAge(event.target.value);\n        props.onAlgoChanged(event.target.value);\n    };\n\n    return (\n        <div>\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-label\">Algorithm</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={age}\n                    onChange={handleChange}\n                >\n                    {props.items.map( (item,itemidx)=>{\n                        return(\n                            <MenuItem\n                                key={itemidx}\n                                value={itemidx}>{item}</MenuItem>\n                        );\n                    } )}\n                </Select>\n            </FormControl>\n        </div>\n    );\n}\n\nexport default SimpleSelect;","import React, {Component} from 'react';\nimport SimpleSelect from \"./simpleSelect\";\n\nclass Menu extends Component {\n    render() {\n        return (\n            <nav className=\"nav alert-dark\" >\n                <SimpleSelect\n                    onAlgoChanged = {this.props.onAlgoChanged}\n                    items={this.props.algorithms}\n                />\n                {/* <SimpleSelect\n                    onAlgoChanged={this.props.onMazeChanged}\n                    items={this.props.mazes}\n                /> */}\n                {/* <button\n                    className='btn btn-lg btn-secondary m-2'\n                    onClick={this.props.onCreateMaze}>\n                    Create Maze\n                </button> */}\n                <button\n                    onClick={this.props.onVisualize}\n                    className=\"btn btn-warning btn-lg\"\n                >Visualize</button>\n                {/* <button\n                    onClick={this.props.onClearPath}\n                    className='btn btn-danger btn-lg m-2'>Clear Path</button> */}\n                <button\n                    onClick={this.props.onClearBoard}\n                    className='btn btn-danger btn-lg m-2'>Clear Board</button>\n            </nav>\n        );\n    }\n}\n\nexport default Menu;","// Performs Dijkstra's algorithm; returns *all* nodes in the order\n// in which they were visited. Also makes nodes point back to their\n// previous node, effectively allowing us to compute the shortest path\n// by backtracking from the finish node.\nexport function dijkstra(grid, startNode, finishNode) {\n  const visitedNodesInOrder = [];\n  startNode.distance = 0;\n  const unvisitedNodes = getAllNodes(grid);\n  while (!!unvisitedNodes.length) {\n    sortNodesByDistance(unvisitedNodes);\n    const closestNode = unvisitedNodes.shift();\n    // If we encounter a wall, we skip it.\n    if (closestNode.isWall) continue;\n    // If the closest node is at a distance of infinity,\n    // we must be trapped and should therefore stop.\n    if (closestNode.distance === Infinity) return visitedNodesInOrder;\n    closestNode.isVisited = true;\n    visitedNodesInOrder.push(closestNode);\n    if (closestNode === finishNode) return visitedNodesInOrder;\n    updateUnvisitedNeighbors(closestNode, grid);\n  }\n}\n\nfunction sortNodesByDistance(unvisitedNodes) {\n  unvisitedNodes.sort((nodeA, nodeB) => nodeA.distance - nodeB.distance);\n}\n\nfunction updateUnvisitedNeighbors(node, grid) {\n  const unvisitedNeighbors = getUnvisitedNeighbors(node, grid);\n  for (const neighbor of unvisitedNeighbors) {\n    neighbor.distance = node.distance + 1;\n    neighbor.previousNode = node;\n  }\n}\n\nfunction getUnvisitedNeighbors(node, grid) {\n  const neighbors = [];\n  const {col, row} = node;\n  if (row > 0) neighbors.push(grid[row - 1][col]);\n  if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\n  if (col > 0) neighbors.push(grid[row][col - 1]);\n  if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\n  return neighbors.filter(neighbor => !neighbor.isVisited);\n}\n\nfunction getAllNodes(grid) {\n  const nodes = [];\n  for (const row of grid) {\n    for (const node of row) {\n      nodes.push(node);\n    }\n  }\n  return nodes;\n}\n\n// Backtracks from the finishNode to find the shortest path.\n// Only works when called *after* the dijkstra method above.\nexport function getNodesInShortestPathOrder(finishNode) {\n  const nodesInShortestPathOrder = [];\n  let currentNode = finishNode;\n  while (currentNode !== null) {\n    nodesInShortestPathOrder.unshift(currentNode);\n    currentNode = currentNode.previousNode;\n  }\n  return nodesInShortestPathOrder;\n}\n","export function getMaze(board,row,col){\n    const pairs = [];\n    let newBoard = board.slice();\n    for( let i = 0;i <col;i++){\n        newBoard[0][i].isWall = true;\n        pairs.push({\n            xx:0,\n            yy:i\n        });\n    }\n    for( let i = 0;i <row;i++){\n        newBoard[i][col-1].isWall = true;\n        pairs.push({\n            xx:i,\n            yy:col-1\n        });\n    }\n    for( let i = col-1;i>=0;i-- ){\n        newBoard[row-1][i].isWall = true;\n        pairs.push({\n            xx:row-1,\n            yy:i\n        });\n    }\n    for(let i = row-1;i>=0;i--){\n        newBoard[i][0].isWall = true;\n        pairs.push({\n            xx:i,\n            yy:0\n        });\n    }\n    decideMaze(pairs,newBoard,1,row-2,1,col-2);\n    //console.log(\"here\");\n    return pairs;\n}\nfunction decideMaze(pairs,board,startRow,endRow,startCol,endCol) {\n    //console.log(\"count\");\n\n    if( ((endRow-startRow) <=1) && ((endCol - startCol) <=1) ){\n        return;\n    }\n\n     if( (endCol - startCol) > (endRow - startRow) ){\n        recursiveMazeVertical(pairs,board,startRow,endRow,startCol,endCol);\n    } else{\n        recursiveMazeHorizontal(pairs,board,startRow,endRow,startCol,endCol);\n    }\n}\nfunction recursiveMazeVertical(pairs,board,startRow,endRow,startCol,endCol){\n    let mid = Math.floor((endCol+startCol)/2);\n    let random = Math.floor(Math.random() * (endRow-startRow+1)) + startRow;\n    //console.log( \"row \",random,\" \",startRow,\" \",endRow );\n    let start = startRow;\n    if( !board[startRow-1][mid].isWall ){\n        random = start;\n        start++;\n    }\n    let end = endRow;\n    if( !board[endRow+1][mid].isWall ){\n        random = end;\n        end--;\n    }\n    for(let i = start;i<=end;i++){\n        if( i!==random ){\n            board[i][mid].isWall = true;\n            pairs.push({\n                xx:i,\n                yy:mid\n            });\n        }\n    }\n    decideMaze(pairs,board,startRow,endRow,startCol,mid-1);\n    decideMaze(pairs,board,startRow,endRow,mid+1,endCol);\n}\nfunction recursiveMazeHorizontal(pairs,board,startRow,endRow,startCol,endCol){\n    let mid = Math.floor((endRow+startRow)/2);\n  //  console.log(\"mid: \",mid);\n    let random = Math.floor(Math.random() * (endCol-startCol+1)) + startCol;\n    let start = startCol;\n    if( !board[mid][startCol-1].isWall ){\n        random = start;\n        start++;\n    }\n    let end = endCol;\n    if( !board[mid][endCol+1].isWall ){\n        random = end;\n        end--;\n    }\n    for(let i = start;i<=end;i++){\n        if( i!==random ){\n            board[mid][i].isWall = true;\n            pairs.push({\n                xx:mid,\n                yy:i\n            });\n        }\n    }\n    decideMaze(pairs,board,startRow,mid-1,startCol,endCol);\n    decideMaze(pairs,board,mid+1,endRow,startCol,endCol);\n\n}","export function bfsdfs(grid,startNode,endNode,algo){\n    var list = [];\n    const nodesInOrder = [];\n    nodesInOrder.push(startNode);\n    list.push(startNode);\n    startNode.isVisited = true;\n    while(!!list.length){\n        const currentNode = (algo === \"bfs\" ? list.shift():list.pop());\n        nodesInOrder.push(currentNode);\n        if( currentNode === endNode ) return nodesInOrder;\n        if( algo === \"dfs\" ) currentNode.isVisited = true;\n        const nodesToPush = getNeighbours(grid,currentNode);\n        for( const node of nodesToPush ){\n            if(algo === \"bfs\"){\n                node.isVisited = true;\n            }\n            node.previousNode = currentNode;\n            list.push(node);\n\n        }\n    }\n    return nodesInOrder;\n}\n\nfunction getNeighbours(grid,node){\n    const neighbors = [];\n    const {col, row} = node;\n   // console.log(node);\n\n    if (col > 0) neighbors.push(grid[row][col - 1]);\n    if (row > 0) neighbors.push(grid[row - 1][col]);\n    if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\n    if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\n    return neighbors.filter(neighbor => (!neighbor.isVisited && !neighbor.isWall ));\n}","// Performs Dijkstra's algorithm; returns *all* nodes in the order\n// in which they were visited. Also makes nodes point back to their\n// previous node, effectively allowing us to compute the shortest path\n// by backtracking from the finish node.\nexport function aStar(grid, startNode, finishNode) {\n  const visitedNodesInOrder = [];\n  startNode.distance = 0;\n  const unvisitedNodes = getAllNodes(grid);\n  while (!!unvisitedNodes.length) {\n    sortNodesByDistance(unvisitedNodes,finishNode);\n    const closestNode = unvisitedNodes.shift();\n    // If we encounter a wall, we skip it.\n    if (closestNode.isWall) continue;\n    // If the closest node is at a distance of infinity,\n    // we must be trapped and should therefore stop.\n    if (closestNode.distance === Infinity) return visitedNodesInOrder;\n    closestNode.isVisited = true;\n    visitedNodesInOrder.push(closestNode);\n    if (closestNode === finishNode) return visitedNodesInOrder;\n    updateUnvisitedNeighbors(closestNode, grid);\n  }\n}\n\nfunction sortNodesByDistance(unvisitedNodes,finishNode) {\n  unvisitedNodes.sort((nodeA, nodeB) => (nodeA.distance+Math.abs(finishNode.row-nodeA.row)+Math.abs(finishNode.col-nodeA.col))\n                                        - (nodeB.distance+Math.abs(finishNode.row-nodeB.row)+Math.abs(finishNode.col-nodeB.col)));\n}\n\nfunction updateUnvisitedNeighbors(node, grid) {\n  const unvisitedNeighbors = getUnvisitedNeighbors(node, grid);\n  for (const neighbor of unvisitedNeighbors) {\n    neighbor.distance = node.distance + 1;\n    neighbor.previousNode = node;\n  }\n}\n\nfunction getUnvisitedNeighbors(node, grid) {\n  const neighbors = [];\n  const {col, row} = node;\n  if (row > 0) neighbors.push(grid[row - 1][col]);\n  if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\n  if (col > 0) neighbors.push(grid[row][col - 1]);\n  if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\n  return neighbors.filter(neighbor => !neighbor.isVisited);\n}\n\nfunction getAllNodes(grid) {\n  const nodes = [];\n  for (const row of grid) {\n    for (const node of row) {\n      nodes.push(node);\n    }\n  }\n  return nodes;\n}\n\n// Backtracks from the finishNode to find the shortest path.\n// Only works when called *after* the dijkstra method above.\nexport function getNodesInShortestPathOrder(finishNode) {\n  const nodesInShortestPathOrder = [];\n  let currentNode = finishNode;\n  while (currentNode !== null) {\n    nodesInShortestPathOrder.unshift(currentNode);\n    currentNode = currentNode.previousNode;\n  }\n  return nodesInShortestPathOrder;\n}\n","import React, {Component, Fragment} from 'react';\nimport Grid from \"./grid\";\nimport Navbar from \"./navbar\";\nimport Menu from \"./menu\";\nimport {dijkstra,getNodesInShortestPathOrder} from \"../algorithms/dijkstra\";\nimport {getMaze} from \"../algorithms/recursiveMaze\";\nimport {bfsdfs} from \"../algorithms/bfs\";\nimport {randomMaze} from \"../algorithms/randomMaze\";\nimport {aStar} from \"../algorithms/Astar\";\n\nclass Pathfinder extends Component {\n    constructor() {\n        super();\n        this.state = {\n            grid:[],\n            mouseIsPressed:false,\n            algorithms:[\n                \"Dijsktra\",\n                \"BFS\",\"DFS\"\n                // \"A star\",\"BFS\",\"DFS\"\n            ],\n            algo:0,\n            mazes:[\n                \"Recursive division\",\n                // \"Random\",\"Recursive Horizontal bias(NA)\",\"Recursive Vertical bias(NA)\"\n            ],\n            maze:0\n        }\n    }\n    componentDidMount() {\n        const width = window.innerWidth;\n        const height = window.innerHeight;\n        const row = Math.max(Math.floor(height/25)-7,10);\n        const col = Math.floor(width/25);\n        const startNode = {\n            row:4,\n            col:4\n        };\n        const endNode = {\n            row: row-5,\n            col: col-5\n        }\n        // console.log( endNode.row );\n        const grid = getInitialGrid(row,col);\n        grid[startNode.row][startNode.col].isStartNode = true;\n        grid[row-5][col-5].isEndNode = true;\n        this.setState({grid,row,col,startNode,endNode});\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <Navbar/>\n\n                <Menu\n                    onAlgoChanged = {this.handleAlgoChanged}\n                    onVisualize = {this.handleClick}\n                    algorithms={this.state.algorithms}\n                    mazes={this.state.mazes}\n                    onMazeChanged={this.handleMazeChanged}\n                    onCreateMaze={this.handleCreateMaze}\n                    onClearBoard={this.handleClearBoard}\n                    onClearPath={this.handleClearPath}\n                />\n                <span style={{margin: 2}}/>\n                <div style={{textAlign:\"center\"}} >\n                    <Grid\n                        grid={this.state.grid}\n                        onMouseDown={this.handleMouseDown}\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseUp={this.handleMouseUp}\n                    />\n                </div>\n            </Fragment>\n        );\n    }\n\n    handleMouseDown = (row, col) => {\n        if((this.state.startNode.row!==row || this.state.startNode.col!==col) && (this.state.endNode.row!==row || this.state.endNode.col!==col) ){\n            const newGrid = getNewGridWithWallToggled(this.state.grid, row, col);\n            this.setState({grid:newGrid});\n        }\n        this.setState({mouseIsPressed: true});\n    }\n\n    handleMouseEnter = (row, col) => {\n        if (this.state.mouseIsPressed === false) return;\n        if((this.state.startNode.row!==row || this.state.startNode.col!==col) && (this.state.endNode.row!==row || this.state.endNode.col!==col) ){\n            const newGrid = getNewGridWithWallToggled(this.state.grid, row, col);\n            this.setState({grid:newGrid});\n        }\n    }\n\n    handleMouseUp = (row,col) => {\n        this.setState({mouseIsPressed: false});\n    }\n\n    handleAlgoChanged = (val) =>{\n        this.setState({algo:val});\n    }\n\n    handleMazeChanged = (val)=>{\n        this.setState({maze:val});\n    }\n\n    handleCreateMaze = () =>{\n        let pairs;\n        switch (this.state.maze){\n            case 1:\n                pairs= randomMaze(this.state.grid,this.state.row,this.state.col);\n                break;\n            default:\n                pairs= getMaze(this.state.grid,this.state.row,this.state.col);\n        }\n        const {startNode,endNode} = this.state;\n        for( let i = 0;i<pairs.length;i++ ){\n            setTimeout(()=>{\n                if( i === pairs.length-1 ){\n                   // this.setState({grid:this.state.grid});\n                    const grid = this.state.grid;\n                    grid[ startNode.row ][startNode.col]={...grid[ startNode.row ][startNode.col],isWall: false};\n                    grid[endNode.row][endNode.col]={...grid[endNode.row][endNode.col],isWall: false};\n                    this.setState({grid});\n                }\n                if((pairs[i].xx!==startNode.row || pairs[i].yy!==startNode.col) && (pairs[i].xx!==endNode.row || pairs[i].yy!==endNode.col) ){\n                    document.getElementById(`node-${pairs[i].xx}-${pairs[i].yy}`).className = \"node node-wall\";\n                }\n            },i*20);\n        }\n    }\n    handleClearBoard = ()=>{\n        const {grid,row,col} = this.state;\n        this.setState({grid:clearBoard(grid,row,col)});\n    }\n    handleClearPath = () =>{\n        const {grid,row,col} = this.state;\n        this.setState({grid:clearPath(grid,row,col)});\n    }\n    handleClick = () =>{\n      /*  for(let i = 0;i<20;i++){\n            for(let j = 0; j<50;j++){\n                document.getElementById(`node-${i}-${j}`).className = \"node\";\n            }\n        }*/\n        this.visualizeDijkstra();\n        /*for(let i = 0;i<this.state.row;i++){\n            for(let j = 0; j<this.state.col;j++){\n                setTimeout(()=>{\n                    const newGrid = toggleVisit(this.state.grid,i,j);\n                    this.setState({grid:newGrid});\n                    //document.getElementById(`node-${i}-${j}`).className = \"node node-visited\";\n                },100*(i+j)+j);\n            }\n        }*/\n    }\n\n    visualizeDijkstra() {\n        const {grid} = this.state;\n        const startNode = grid[this.state.startNode.row][this.state.startNode.col];\n        const finishNode = grid[this.state.endNode.row][this.state.endNode.col];\n        let visitedNodesInOrder;\n        switch (this.state.algo){\n            case 0:\n                visitedNodesInOrder = dijkstra(grid, startNode, finishNode);\n                break;\n            case 1:\n                visitedNodesInOrder = aStar(grid, startNode, finishNode);\n                break;\n            case 2:\n                visitedNodesInOrder = bfsdfs(grid, startNode, finishNode,\"bfs\");\n                break;\n            default:\n                visitedNodesInOrder = bfsdfs(grid, startNode, finishNode,\"dfs\");\n        }\n        const nodesInShortestPathOrder = getNodesInShortestPathOrder(finishNode);\n        this.animateDijkstra(visitedNodesInOrder, nodesInShortestPathOrder);\n    }\n    async animateDijkstra(visitedNodesInOrder, nodesInShortestPathOrder) {\n        for (let i = 0; i <= visitedNodesInOrder.length; i++) {\n\n            if (i === visitedNodesInOrder.length) {\n              //  setTimeout(() => {\n                    await sleep(100);\n                    await this.animateShortestPath(nodesInShortestPathOrder);\n\n              //  }, 10 * (i+10));\n                return;\n            }\n           // setTimeout(() => {\n                const node = visitedNodesInOrder[i];\n                //this.setState({grid:newGrid});\n                document.getElementById(`node-${node.row}-${node.col}`).className =\n                    'node node-visited';\n                await sleep(10);\n           // }, 10 * i);\n        }\n    }\n\n    async animateShortestPath(nodesInShortestPathOrder) {\n        const grid = this.state.grid;\n        const newGrid = grid.slice();\n        for (let i = 0; i < nodesInShortestPathOrder.length; i++) {\n         //   setTimeout(() => {\n\n                const node = nodesInShortestPathOrder[i];\n                const newNode = {...newGrid[node.row][node.col],ispathNode:true};\n                newGrid[node.row][node.col] = newNode;\n                if( i === nodesInShortestPathOrder.length-1 ){\n                    this.setState({grid:newGrid});\n                }\n                document.getElementById(`node-${node.row}-${node.col}`).className =\n                    'node node-shortest-path';\n                await sleep(50);\n            //}, 50 * i);\n        }\n    }\n\n}\n\nconst clearPath = (grid,row,col)=>{\n    const newGrid = grid.slice();\n    for(let i = 0;i < row ; i++){\n        for( let j = 0;j < col; j++){\n            const node = newGrid[i][j];\n            const newNode = {\n                ...node,\n                distance:Infinity,\n                visitedNode: false,\n                isVisited:false,\n                ispathNode:false,\n                previousNode:null\n\n            };\n            newGrid[i][j] = newNode;\n        }\n    }\n    return newGrid;\n}\nconst clearBoard = (grid,row,col)=>{\n    const newGrid = grid.slice();\n    for(let i = 0;i < row ; i++){\n        for( let j = 0;j < col; j++){\n            const node = newGrid[i][j];\n            const newNode = {\n                ...node,\n                isWall: false,\n                distance:Infinity,\n                visitedNode: false,\n                isVisited:false,\n                ispathNode:false,\n                previousNode:null\n\n            };\n            newGrid[i][j] = newNode;\n        }\n    }\n    return newGrid;\n}\n\nconst getNewGridWithWallToggled = (grid, row, col) => {\n    const newGrid = grid.slice();\n    const node = newGrid[row][col];\n    const newNode = {\n        ...node,\n        isWall: true//!node.isWall,\n    };\n    newGrid[row][col] = newNode;\n    return newGrid;\n};\nconst getInitialGrid = (totRow,totCol) => {\n    const grid = [];\n    for (let row = 0; row < totRow; row++) {\n        const currentRow = [];\n        for (let col = 0; col < totCol; col++) {\n            currentRow.push(createNode(row,col));\n        }\n        grid.push(currentRow);\n    }\n    return grid;\n}\n\nconst createNode = (row,col)=>{\n    return {\n        row,\n        col,\n        isWall: false,\n        isStartNode:false,\n        isEndNode:false,\n        distance:Infinity,\n        visitedNode: false,\n        isVisited:false,\n        ispathNode:false,\n        previousNode:null\n    };\n}\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport default Pathfinder;","export function randomMaze(board,row,col){\n    let newBoard = board.slice();\n    const pairs = [];\n    for(let i = 0;i<row;i++){\n        for( let j = 0;j <col;j++){\n            const random = Math.floor(Math.random()*100)+10;\n            if( random%4 === 0 ){\n                newBoard[i][j].isWall = true;\n                pairs.push({\n                    xx:i,\n                    yy:j\n                });\n            }\n        }\n    }\n    return pairs;\n}","import React, { Component } from 'react';\n\nclass Navbar extends Component {\n    render() {\n        const navbarStyles = {\n            backgroundColor: '#343a40',\n            padding: '15px 30px',\n            boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n        };\n\n        const brandStyles = {\n            fontSize: '1.8rem',\n            fontWeight: '600',\n            color: '#ff4e50',\n        };\n\n\n\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark\" style={navbarStyles}>\n                <button className=\"navbar-brand\" style={{ ...brandStyles, background: 'none', border: 'none', padding: 0, cursor: 'pointer' }}>Algoverse</button>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav ml-auto\">\n                        {/* <li className=\"nav-item active\">\n                            <a className=\"nav-link\" href=\"#\" style={{ ...navLinkStyles, ...activeLinkStyles }}>About <span className=\"sr-only\">(current)</span></a>\n                        </li> */}\n                        {/* <li className=\"nav-item\">\n                            <a className=\"nav-link\" href=\"#\" style={navLinkStyles}>Services</a>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" href=\"#\" style={navLinkStyles}>Contact</a>\n                        </li> */}\n                    </ul>\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React, {Component} from 'react';\nimport \"./style.css\"\nclass Greet extends Component {\n    render() {\n        return (\n            <div className=\"greet\">\n                <h1 className=\"display-3\">\n                Welcome to Algoverse\n                </h1>\n                <hr className=\"dropdown-divider\"/>\n                <h1 className=\"display-5\">\n                    Project No: 99\n                </h1>\n            </div>\n        );\n    }\n}\n\nexport default Greet;","import React, {Component} from 'react';\nimport Typewriter from \"typewriter-effect\";\nimport './style.css'\nclass TypeWriterC extends Component {\n    state = {\n\n    }\n    render() {\n        return (\n            <div className=\"type display-3\">\n                <span className=\"badge badge-dark\">\n                <Typewriter\n                    options={{\n                        strings: ['Graph Algorithms', 'Sorting Algorithms',\"8 Queen\"],\n                        autoStart: true,\n                        loop: true,\n                    }}\n                />\n            </span>\n            </div>\n        );\n    }\n}\n\nexport default TypeWriterC;","export default __webpack_public_path__ + \"static/media/graph.6e6849d5.png\";","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from 'clsx';\nimport Collapse from '@material-ui/core/Collapse';\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport IconButton from '@material-ui/core/IconButton';\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport \"./style.css\";\nimport \"./images/graph.png\";\nimport {Link} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        minWidth: 350,\n        maxWidth:350,\n        minHeight:200,\n        borderRadius: 5,\n        '&:hover': {\n            boxShadow: `0 6px 12px 0 #000000\n                .rotate(-12)\n                .darken(0.2)\n                .fade(0.5)}`\n                ,\n        },\n    },\n    media: {\n        height: 100\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    actionArea: {\n        padding:15,\n        transition: '0.2s',\n        '&:hover': {\n            transform: 'scale(1.1)',\n\n        },\n    },\n}));\n\nexport default function ImgMediaCard2(props) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded);\n    };\n\n    return (\n        <CardActionArea className={classes.actionArea} m={20}>\n            <Card\n                className={classes.card}\n                >\n               <Link to={props.card.route}>\n                   <CardMedia\n                       component=\"img\"\n                       alt={props.card.title}\n                       height=\"150\"\n                       src={props.card.img}\n                   />\n               </Link>\n                <CardHeader\n                    title={props.card.title}\n                    style={{backgroundColor:\"whitesmoke\"}}\n                    action={\n                        <IconButton\n                            className={clsx(classes.expand, {\n                                [classes.expandOpen]: expanded,\n                            })}\n                            onClick={handleExpandClick}\n                            aria-expanded={expanded}\n                            aria-label=\"show more\"\n                        >\n                            <ExpandMoreIcon />\n                        </IconButton>\n                    }\n                />\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                    <CardContent\n                        style={{backgroundColor:\"whitesmoke\"}}\n                    >\n                        <Typography>\n                            {props.card.description}\n                        </Typography>\n                    </CardContent>\n                </Collapse>\n            </Card>\n        </CardActionArea>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/primes.72a2f33f.jpg\";","export default __webpack_public_path__ + \"static/media/sort.117e08fc.png\";","export default __webpack_public_path__ + \"static/media/queen.b2332ba3.PNG\";","export default __webpack_public_path__ + \"static/media/binaryTree.6d8ce938.png\";","export default __webpack_public_path__ + \"static/media/15puzzle.5f6e8f37.PNG\";","export default __webpack_public_path__ + \"static/media/turing.ab68ef09.jpg\";","import React, {Component} from 'react';\nimport ImgMediaCard2 from \"./card2\";\nimport \"./style.css\";\nimport {getDetails} from \"./cardDetails\";\nimport TextField from \"@material-ui/core/TextField\";\nclass Cards extends Component {\n\n    state = {\n        cards:[],\n        filter:\"\"\n    }\n\n    componentDidMount() {\n        this.setState({cards:getDetails()});\n    }\n    getData = (e)=>{\n        console.log(e.target.value);\n        this.setState({filter:e.target.value});\n    }\n    render() {\n        return (\n           <React.Fragment>\n               <div className=\"d-flex justify-content-end Cards\">\n                   <TextField\n                       id=\"standard-basic\" label=\"Search\"\n                       color=\"secondary\"\n                       onChange={this.getData}\n                   />\n               </div>\n               <div className=\"d-flex flex-wrap justify-content-center Cards p-lg-5\" >\n                   {\n                       this.state.cards.filter((card) => card.title.toLowerCase().includes(this.state.filter.toLowerCase())||card.description.toLowerCase().includes(this.state.filter.toLowerCase())).map(card=>(\n                           <div>\n                               <ImgMediaCard2\n                                   className=\"d-flex flex-wrap\"\n                                   key={card.id}\n                                   card={card}/>\n                           </div>\n                       ))\n                   }\n\n               </div>\n           </React.Fragment>\n        );\n    }\n}\n\nexport default Cards;\n/*\n<div>\n   <ImgMediaCard2\n       className=\"d-flex flex-wrap\"\n       key={card.id}\n       card={card}/>\n</div>\n */","import graph from \"./images/graph.png\";\nimport primes from \"./images/primes.jpg\";\nimport sort from \"./sort.png\";\nimport queen from \"./images/queen.PNG\";\nimport binSearch from \"./images/binaryTree.png\";\nimport puzzle from './images/15puzzle.PNG';\nimport turing from './images/turing.jpg';\nexport function getDetails(){\n   return [\n       {\n           id:1,\n           title:\"Pathfinder\",\n           description:\"Visualize graph algorithms like dijkstra, BFS, DFS\",\n           route:\"/pathfinder\",\n           img:graph\n       },\n    //    {\n    //        id:2,\n    //        title:\"Recursion Tree\",\n    //        description:\"The process in which a function calls itself directly or indirectly is called recursion. Work in progress\",\n    //        route:\"/graph\",\n    //        img:Recursion\n    //    },\n       {\n           id:3,\n           title:\"Sorting Algorithm\",\n           description:\"Compare different sorting algorithms\",\n           route:\"/sort\",\n           img:sort\n       },\n       {\n           id:4,\n           title:\"Recursive Sorting\",\n           description:\"Compare different recursive sorting algorithms\",\n           route:\"/recursivesort\",\n           img:sort\n       },\n       {\n           id:5,\n           title:\"N Queen\",\n           description:\"The N queens puzzle is the problem of placing N chess queens on an N*N chessboard so that no two queens threaten each other\",\n           route:\"/nqueen\",\n           img:queen\n       },\n       {\n           id:6,\n           title:\"Turing Machine\",\n           description:\"A Turing machine is a mathematical model of computation that defines an abstract machine that manipulates symbols on a strip of tape according to a table of rules\",\n           route:\"/turing\",\n           img:turing\n       },\n       {\n           id:7,\n           title:\"Prime Numbers\",\n           description:\"Visualize how Seive is better than brute force\",\n           route:\"/prime\",\n           img:primes\n       },\n    //    {\n    //        id:8,\n    //        title:\"Convex Hull\",\n    //        description:\"The convex hull of a set of points is the smallest convex polygon that contains all the points of it\",\n    //        route:\"/convexhull\",\n    //        img:convex\n    //    },\n       {\n           id:9,\n           title:\"Binary Search\",\n           description:\"Binary search is an efficient algorithm for finding an item from a sorted list of item\",\n           route:\"/binarysearch\",\n           img:binSearch\n       },\n       {\n           id:10,\n           title:\"15 Puzzle\",\n           description:\"The 15 puzzle is a sliding puzzle having 15 square tiles numbered 1–15 in a frame that is 4 tiles high and 4 tiles wide, leaving one unoccupied tile position\",\n           route:\"/15puzzle\",\n           img:puzzle\n       }\n\n   ]\n}","import React, {Component} from 'react';\nimport Navbar from \"./navbar\";\nimport Greet from \"./greet\";\nimport TypeWriterC from \"./typewriter\";\nimport Cards from \"./cards\";\n\nclass Home extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <Navbar/>\n                <Greet/>\n                <TypeWriterC/>\n                <Cards/>\n                {/* <Footer/> */}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Home;","import React, {Component} from 'react';\nimport './cell.css';\nclass Cell extends Component {\n    render() {\n        return (\n            <div className={this.getClass()}>\n                <span >\n                    {this.props.cell.val}\n                </span>\n            </div>\n        );\n    }\n    getClass = () =>{\n        const { isVisiting,isChecking,isPrime} = this.props.cell;\n        if(isPrime){\n            return \"cell cell-prime bg-success text-light m-2\";\n        }else if( isVisiting ){\n            return \"cell cell-visiting m-2\";\n        } else if( isChecking ){\n            return \"cell cell-check m-2\";\n        } else{\n            return \"cell m-2\";\n        }\n    }\n}\n\nexport default Cell;","import React, {Component} from 'react';\nimport Cell from \"./cell\";\nimport './cells.css'\nclass Cells extends Component {\n\n    render() {\n        return (\n            <div className=\"Cells\">\n                {this.props.cells.map( (cell,cellidx)=>{\n                    return (\n                        <Cell\n                            key={cellidx}\n                            cell={cell}\n                        />\n                    );\n                } )}\n            </div>\n        );\n    }\n}\n\nexport default Cells;","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\n\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <span className=\"navbar-brand\">Sieve</span>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\n                    <Link to={\"/\"}>\n                        <span style={{color:\"white\"}}>\n                            Home\n                        </span>\n                    </Link>\n                </div>\n\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 300,\n    },\n});\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\n\nexport default function DiscreteSlider(props) {\n    const classes = useStyles();\n    const handleChange = (event) =>{\n        if( event.target.innerText === \"\" ){\n            return;\n        }\n        const num = parseInt(event.target.innerText,10);\n        props.onChange(num);\n    }\n    return (\n        <div className={classes.root+\" ml-2 mr-2\"}>\n            <Typography id=\"discrete-slider\" gutterBottom>\n                {props.title}\n            </Typography>\n            <Slider\n                defaultValue={props.default}\n                getAriaValueText={valuetext}\n                aria-labelledby=\"discrete-slider\"\n                valueLabelDisplay=\"auto\"\n                onChangeCommitted={handleChange}\n                step={props.step}\n                marks={props.marks}\n                min={props.min}\n                max={props.max}\n                disabled={props.isDisabled}\n            />\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nconst SimpleSelect = (props) => {\n    const classes = useStyles();\n    const [age, setAge] = React.useState('0');\n    const [state] = React.useState({\n        pos: props.pos,\n    });\n    const handleChange = (event) => {\n\n\n        console.log('aa ',event.target.value);\n        setAge(event.target.value);\n        props.onAlgoChanged(state.pos,event.target.value);\n    };\n\n    return (\n        <div className=\"ml-2 mr-2\">\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-label\">Task</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={age}\n                    onChange={handleChange}\n                >\n                    <MenuItem value={0} style={{selected:true}} >Seive</MenuItem>\n                    {/* <MenuItem value={1} style={{selected:true}} >Archimedes Spiral</MenuItem> */}\n                    {/*<MenuItem value={3} style={{selected:true}} >Bitwise AND</MenuItem>*/}\n                    {/*<MenuItem value={4} style={{selected:true}} >Bitwise OR</MenuItem>*/}\n                </Select>\n            </FormControl>\n        </div>\n    );\n}\n\nexport default SimpleSelect;","import React, {Component} from 'react';\nimport DiscreteSlider from \"./slider\";\nimport SimpleSelect from \"./simpleSelect\";\n\nclass Menu extends Component {\n    render() {\n        return (\n            <nav className=\"nav alert-dark\">\n                <button className=\"btn btn-primary btn-lg m-2\" onClick={this.props.onRefresh} disabled={this.props.isDisabled} style={this.isClickable()}>Refresh</button>\n                <SimpleSelect\n                    pos={0}\n                    onAlgoChanged={this.props.setAlgo}\n                />\n                <DiscreteSlider\n                    onChange={this.props.onChangeSpeed}\n                    title=\"speed\"\n                    marks={false}\n                    default={10}\n                    step={1}\n                    min={10}\n                    max={50}\n                    isDisabled={false}\n                />\n                <DiscreteSlider\n                    onChange={this.props.onChangeValues}\n                    title=\"Total Number\"\n                    marks={false}\n                    default={100}\n                    step={1}\n                    min={10}\n                    max={500}\n                    isDisabled={this.props.isDisabled}\n                />\n                <button className=\"btn btn-warning btn-lg m-2\" onClick={this.props.onVisualize} disabled={this.props.isDisabled} style={this.isClickable()}>Visualize</button>\n\n\n            </nav>\n        );\n    }\n    isClickable = () =>{\n        if( this.props.isDisabled ){\n            return {cursor: \"not-allowed\"};\n        } else{\n            return {};\n        }\n    }\n}\n\nexport default Menu;","import React, {Component} from 'react';\n\nclass Spiral extends Component {\n\n    render() {\n        let Maxwidth = window.innerWidth;\n        let MaxHeight = window.innerHeight;\n\n        let width,height;\n        let maxPrime = this.props.maxPrime;\n        if( Maxwidth>MaxHeight ){\n            let ratio = Maxwidth/MaxHeight;\n            height = maxPrime;\n            width = ratio*height;\n        }else{\n            let ratio = MaxHeight/Maxwidth;\n            width = maxPrime;\n            height = ratio*width;\n\n        }\n\n        // console.log(width,height);\n        let radius = (Math.min(width,height))/300;\n        return (\n            <div className={'bg-dark'}>\n                {/*sdfsdfsdfsdfsdfsdf*/}\n                <svg viewBox={\"0 0 \"+2*width+\" \"+2*height} xmlns=\"http://www.w3.org/2000/svg\">\n                    {this.props.primes.map( (cell,cellidx)=>{\n                        return (\n                            <circle\n                                id={cellidx}\n                                cx={cell*Math.cos(cell)+width}\n                                cy={cell*Math.sin(cell)+height}\n                                r={radius}\n                                stroke=\"black\" stroke-width=\"0.5\" fill='#51c4b5'\n\n                            />\n                        );\n                    } )}\n                </svg>\n            </div>\n        );\n    }\n}\n\nexport default Spiral;","import React, {Component} from 'react';\nimport Cells from \"./cells\";\nimport Navbar from \"./navbar\";\nimport Menu from \"./menu\";\nimport {seive} from \"../algorithms/prime\";\nimport Spiral from \"./spiral\";\n\nclass Seive extends Component {\n    state = {\n        number: 100,\n        cells:[],\n        isRunning:false,\n        speed:500,\n        primes:[],\n        maxPrime:0,\n        algo:0\n    }\n\n    componentDidMount() {\n        const cells = getCells(this.state.number);\n        this.setState({cells});\n    }\n    setAlgo = (pos, val) => {\n        if (pos === 0) {\n\n            this.setState({algo: val});\n            // console.log(this.state.algo);\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar/>\n                <Menu\n                    onChangeSpeed={this.changeSpeed}\n                    onChangeValues={this.handleValueIncease}\n                    onVisualize = {this.startAlgo}\n                    onRefresh = {this.handleRefresh}\n                    isDisabled = {this.state.isRunning}\n                    setAlgo={this.setAlgo}\n                />\n                {this.state.algo === 0 &&\n                    <Cells\n                        num={this.state.number}\n                        cells={this.state.cells}\n                    />\n                }\n                {this.state.algo === 1 &&\n                    <Spiral\n                        num={this.state.number}\n                        primes={this.state.primes}\n                        maxPrime={this.state.maxPrime}\n                    />\n                }\n\n            </div>\n        );\n    }\n\n    changeSpeed = (speed) => {\n        //console.log(typeof speed);\n        this.setState({speed:600-speed*10});\n    }\n    handleValueIncease = (value) => {\n        this.setState({number:value});\n        if( this.state.algo === 0 ){\n            this.setState({cells:getCells(value),isRunning:false});\n\n        }\n        // console.log(value);\n    }\n    handleRefresh = () => {\n        this.setState({cells:getCells(this.state.number),isRunning:false});\n    }\n\n    startAlgo = () =>{\n        console.log(this.state.algo);\n        if( this.state.algo === 0 ){\n            this.startSeive();\n        }else if( this.state.algo === 1 ){\n            this.startSpiral();\n        }\n    }\n    startSpiral = async () =>{\n        let pprimes = seive(this.state.number*100);\n        let primes = [];\n        this.setState({primes:[],maxPrime:pprimes[pprimes.length-1]});\n        let mod = Math.ceil(this.state.number/10);\n        for(let i=0;i<pprimes.length;i++){\n            primes.push(pprimes[i]);\n\n            if( i%mod === 0 ){\n                this.setState({primes});\n                await sleep(10);\n            }\n        }\n        console.log('done');\n    }\n    startSeive = async () => {\n        this.setState({isRunning:true});\n        const prime = [];\n        for(let i = 0;i<=this.state.number;i++){\n            prime.push(1);\n        }\n        prime[0] = prime[1] = 0;\n        let changedCells = this.state.cells;\n        let prevCheck = -1;\n        // let counter = 0;\n        for( let i = 2; i<=this.state.number;i++){\n            if( prime[i] === 1 ){\n             //   setTimeout(()=>{\n                    changedCells = getNewCellPrimeToggled(changedCells,i-1);\n                    this.setState({cells:changedCells});\n                //},counter*speed);\n                await sleep(this.state.speed);\n                // counter++;\n                for(let j = i*i;j<=this.state.number;j+=i){\n                    //setTimeout(()=>{\n                        if( prevCheck!==-1 ){\n                            changedCells = getNewCellVisitingToggled(changedCells,prevCheck);\n                        }\n                        prevCheck = j-1;\n                        changedCells = getNewCellCheckToggled(changedCells,j-1);\n                        changedCells = getNewCellVisitingToggled(changedCells,prevCheck);\n                        this.setState({cells:changedCells});\n                  //  },counter*speed);\n                    await sleep(this.state.speed);\n                    // counter++;\n                    prime[j] = 0;\n                }\n            }\n        }\n      //  setTimeout(()=>{\n            changedCells = getNewCellVisitingToggled(changedCells,prevCheck);\n            this.setState({cells:changedCells,isRunning:false});\n       // },counter*speed);\n    }\n}\n\nconst getNewCellPrimeToggled = (cells,pos) =>{\n    const newCells = cells.slice();\n    const cell = newCells[pos];\n    const newCell = {\n        ...cell,\n        isPrime:true\n    }\n    newCells[pos] = newCell;\n    return newCells;\n}\n\nconst getNewCellVisitingToggled = (cells,pos)=>{\n    const newCells = cells.slice();\n    const cell = newCells[pos];\n    const newCell = {\n        ...cell,\n        isVisiting:!cell.isVisiting\n    }\n    newCells[pos] = newCell;\n    return newCells;\n}\n\nconst getNewCellCheckToggled = (cells,pos) =>{\n    const newCells = cells.slice();\n    const cell = newCells[pos];\n    const newCell = {\n        ...cell,\n        isChecking:true\n    }\n    newCells[pos] = newCell;\n    return newCells;\n}\n\nconst getCells = (rows)=>{\n    const cells = [];\n    for(let cell = 1;cell<=rows;cell++){\n        cells.push(createCell(cell))\n    }\n    return cells;\n}\nconst createCell = (val)=>{\n    return {\n        val,\n        isChecking:false,\n        isVisiting:false,\n        isPrime:false\n    };\n}\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\nexport default Seive;","export function seive(n){\n    let vis = new Array(n+5).fill(0);\n\n    let primes = [];\n    for(let p = 2;p<=n;p++){\n        if( vis[p] === 0 ){\n            primes.push(p);\n            for(let q = p*p;q<=n;q+=p)\n                vis[q] = 1;\n        }\n    }\n    return primes;\n}","import React, {Component} from 'react';\nimport './style.css';\nclass Rect extends Component {\n\n    render() {\n        return (\n            <div\n                className='rect'\n                style={{height:this.props.rect.width,\n                    background:this.checkColor(),\n                    margin:this.props.marg,\n                    // float:'left',\n                    'vertical-align': 'middle'\n                }}\n            >\n                \n            </div>\n        );\n    }\n    checkColor = () => {\n        if( this.props.rect.isSorted ){\n            return \"green\";\n        } else if( this.props.rect.isSorting ){\n            return \"red\";\n        } else{\n            return \"black\"\n        }\n    }\n}\n\nexport default Rect;","import React, {Component} from 'react';\nimport Rect from \"./rect\";\nimport FlipMove from 'react-flip-move';\n\nclass Rects extends Component {\n    render() {\n        let margin = 5;\n        if( this.props.rects.length>50 ){\n            margin=1;\n        }\n        return (\n            <div>\n                <FlipMove\n                    className=\"d-flex justify-content-center align-items-end\"\n                    duration={this.props.speed}\n                    // easing=\"cubic-bezier(.12,.36,.14,1.2)\"\n                >\n                {this.props.rects.map( (rect,rectidx)=>{\n                    return (\n                        <Rect\n                            marg={margin}\n                            key={rect.kk}\n                            rect={rect}\n                        />\n                    );\n                } )}\n                </FlipMove>\n            </div>\n        );\n    }\n}\n\nexport default Rects;","export function bubbleSort2(rects ){\n    const pairs = [];\n    const num  = rects.length;\n    const prevRect = rects.slice();\n\n    for( let i = 0; i<num; i++ ){\n        for( let j = i+1;j<num;j++ ){\n            if( prevRect[i].width>prevRect[j].width ){\n                const recti = {...prevRect[i]};\n                const rectj = {...prevRect[j]};\n                prevRect[j] = recti;\n                prevRect[i] = rectj;\n                pairs.push( {\n                    xx:i,\n                    yy:j,\n                    changed:true\n                } );\n            } else{\n                pairs.push( {\n                    xx:i,\n                    yy:j,\n                    changed:false\n                });\n            }\n            if( j === num-1 ){\n                pairs.push( {\n                    xx:i,\n                    yy:i,\n                    changed:false\n                });\n            }\n        }\n    }\n    return pairs;\n}\n\nexport function selectionSort(arr) {\n    const pairs = [];\n    let n = arr.length;\n    const prevRect = arr.slice();\n    // One by one move boundary of unsorted subarray\n    for (let i = 0; i < n-1; i++)\n    {\n        let min_idx = i;\n        for (let j = i+1; j < n; j++){\n            pairs.push( {\n                xx:min_idx,\n                yy:j,\n                changed:false\n            } );\n            if (prevRect[j].width < prevRect[min_idx].width){\n                min_idx = j;\n            }\n        }\n\n        // Swap the found minimum element with the first\n        // element\n        const recti = {...prevRect[i]};\n        const rectj = {...prevRect[min_idx]};\n        prevRect[min_idx] = recti;\n        prevRect[i] = rectj;\n        pairs.push( {\n            xx:min_idx,\n            yy:i,\n            changed:true\n        } );\n        pairs.push( {\n            xx:i,\n            yy:i,\n            changed:false\n        });\n    }\n    pairs.push({\n            xx:n-1,\n            yy:n-1,\n            changed:false\n        }\n    )\n    return pairs;\n}\n\nexport function bubbleSort(arr){\n    const pairs= [];\n    let n = arr.length;\n    const prevRect = arr.slice();\n    for (let i = 0; i < n-1; i++){\n        for (let j = 0; j < n-i-1; j++){\n            if (prevRect[j].width > prevRect[j+1].width) {\n                // swap arr[j+1] and arr[j]\n                const recti = {...prevRect[j]};\n                const rectj = {...prevRect[j+1]};\n                prevRect[j+1] = recti;\n                prevRect[j] = rectj;\n                pairs.push( {\n                    xx:j,\n                    yy:j+1,\n                    changed:true\n                } );\n            } else{\n                pairs.push( {\n                    xx:j,\n                    yy:j+1,\n                    changed:false\n                } );\n            }\n            if( j === n-i-2 ){\n                pairs.push( {\n                    xx:n-i-1,\n                    yy:n-i-1,\n                    changed:false\n                } );\n            }\n        }\n    }\n    pairs.push({\n            xx:0,\n            yy:0,\n            changed:false\n        }\n    )\n    return pairs;\n}\n\nexport function insertionSort(arr){\n    const pairs = [];\n    let n = arr.length;\n    const prevRect = arr.slice();\n    for (let i = 1; i < n; ++i) {\n        let key = prevRect[i].width;\n        let j = i - 1;\n\n        while (j >= 0 && prevRect[j].width > key) {\n            const recti = {...prevRect[j]};\n            const rectj = {...prevRect[j+1]};\n            prevRect[j+1] = recti;\n            prevRect[j] = rectj;\n            pairs.push( {\n                xx:j,\n                yy:j+1,\n                changed:true\n            } );\n            j = j - 1;\n        }\n       // arr[j + 1] = arr[i];\n    }\n    for(let i=0;i<n;i++){\n        pairs.push({\n            xx:i,\n            yy:i,\n            changed:true\n        })\n    }\n    return pairs;\n}","let values = [];\n\nexport function quickSort(rects2){\n    let rects = rects2.slice();\n    values = [];\n    let sz = rects2.length;\n    // console.log( \"fdsfsd\",sz );\n    sz = sz-1;\n    quick(rects,0,sz);\n    for(var i=0;i<=sz;i++){\n        values.push({\n            xx:i,\n            yy:i,\n            changed:true\n        })\n    }\n    return values;\n}\n\n\nfunction getPartition(rects, left, right){\n    let pivot = rects[right].width\n    let it = left-1;\n    for(var j=left;j<=right-1;j++){\n        if( rects[j].width< pivot){\n            it++;\n            if( it!==j ){\n                // swap(rects[it],rects[j];\n                const rect1 = {...rects[it]};\n                const rect2 = {...rects[j]};\n                rects[it] = rect2;\n                rects[j] = rect1;\n                values.push({\n                    xx:it,\n                    yy:j,\n                    changed:true\n                })\n            }\n        }\n    }\n    if( it+1!==right ){\n        const rect1 = {...rects[it+1]};\n        const rect2 = {...rects[right]};\n        rects[it+1] = rect2;\n        rects[right] = rect1;\n        values.push({\n            xx:it+1,\n            yy:right,\n            changed:true\n        })\n    }\n    return it+1;\n}\nfunction quick(rects,left,right){\n    if( left>=right ) return ;\n    const partition = getPartition(rects,left,right);\n    quick(rects,left,partition-1);\n    quick(rects,partition+1,right);\n}","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <span className=\"navbar-brand\">Sorting Visualizer</span>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\n                    <Link to={\"/\"}>\n                            <span style={{color:\"white\"}}>\n                                Home\n                            </span>\n                    </Link>\n                </div>\n\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 200,\n    },\n});\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\n\nexport default function DiscreteSlider(props) {\n    const classes = useStyles();\n    const handleChange = (event) =>{\n        if( event.target.innerText === \"\" ){\n            return;\n        }\n        const num = parseInt(event.target.innerText,10);\n        props.onCountChange(num);\n    }\n    return (\n        <div className={classes.root+\" ml-2 mr-2\"}>\n\n            <Slider\n                defaultValue={props.default}\n                getAriaValueText={valuetext}\n                aria-labelledby=\"discrete-slider\"\n                valueLabelDisplay=\"auto\"\n                onChangeCommitted={handleChange}\n                step={props.step}\n               // marks={props.marks}\n                min={props.min}\n                max={props.max}\n                disabled={props.disable}\n            />\n            <Typography id=\"discrete-slider\" gutterBottom>\n                {props.title}\n            </Typography>\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nconst SimpleSelect = (props) => {\n    const classes = useStyles();\n    const [age, setAge] = React.useState('0');\n    const [state] = React.useState({\n        pos: props.pos,\n    });\n    const handleChange = (event) => {\n        console.log(state.pos);\n        setAge(event.target.value);\n        props.onAlgoChanged(state.pos,event.target.value);\n    };\n\n    return (\n        <div className=\"ml-2 mr-2\">\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-label\">Algorithm</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={age}\n                    onChange={handleChange}\n                >\n                    <MenuItem value={0} style={{selected:true}} >Bubble Sort</MenuItem>\n                    <MenuItem value={1}>Selection Sort</MenuItem>\n                    <MenuItem value={2}>Insertion Sort</MenuItem>\n                    <MenuItem value={3}>Quick Sort</MenuItem>\n                </Select>\n            </FormControl>\n        </div>\n    );\n}\n\nexport default SimpleSelect;","import React from 'react';\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 200,\n    },\n});\n\n\nconst CSlider = withStyles({\n    root: {\n       // color: \"#ffffff\",\n        height: 3,\n        padding: \"13px 0\",\n    },\n    track: {\n        height: 4,\n        borderRadius: 2,\n    },\n    thumb: {\n        backgroundColor: \"#fff\",\n        //color: \"#fff\",\n    },\n})(Slider);\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\n\n\nexport default function RangeSlider(props) {\n    const classes = useStyles();\n    const [value, setValue] = React.useState([20, 37]);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n\n    };\n    const handleCommit = (event, newValue) => {\n        console.log(newValue);\n    };\n\n    return (\n        <div className={classes.root}>\n            <CSlider\n                disabled={props.disable}\n                value={value}\n                onChange={handleChange}\n                onChangeCommitted={handleCommit}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                getAriaValueText={valuetext}\n            />\n            <Typography id=\"range-slider\" gutterBottom>\n                Value range\n            </Typography>\n        </div>\n    );\n}\n","import React from 'react';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nexport default function SwitchLabels(props) {\n    const [state, setState] = React.useState({\n        checkedA: false,\n    });\n\n    const handleChange = (event) => {\n        setState({ ...state, [event.target.name]: event.target.checked });\n        props.onDoubleChange(event.target.checked);\n    };\n\n    return (\n        <FormGroup row>\n            <FormControlLabel\n                control={<Switch checked={state.checkedA} onChange={handleChange} name=\"checkedA\" />}\n                label=\"Duo\"\n                disabled={props.disable}\n            />\n\n        </FormGroup>\n    );\n}\n","import React, {Component} from 'react';\nimport DiscreteSlider from \"./slider\";\nimport SimpleSelect from \"./simpleSelect\";\nimport RangeSlider from \"./doubleSlider\";\nimport SwitchLabels from \"./formControlLabel\";\n\n\nclass Menu extends Component {\n    render() {\n        return (\n            <nav className=\"nav alert-dark\">\n                <button\n                    className='btn btn-secondary m-2'\n                    onClick={this.props.onRandomize}\n                    disabled={this.props.disable}\n                    style={this.isClickable()}\n                >\n                    Randomize\n                </button>\n\n                <RangeSlider\n                    disable={this.props.disable}\n                />\n                <DiscreteSlider\n                    default={20}\n                    min={10}\n                    max={100}\n                    step={10}\n                    title=\"Numbers\"\n                    onCountChange={this.props.onCountChange}\n                    disable={this.props.disable}\n                />\n                <DiscreteSlider\n                    default={50}\n                    min={10}\n                    max={100}\n                    step={1}\n                    title=\"Speed\"\n                    onCountChange={this.props.onSpeedChange}\n                    disable={false}\n                />\n                <SimpleSelect\n                    pos={0}\n                    onAlgoChanged={this.props.onAlgoChanged}\n                />\n                <SwitchLabels\n                    disable={this.props.disable}\n                    onDoubleChange={this.props.onDoubleChange}\n                />\n                <SimpleSelect\n                    pos={1}\n                    onAlgoChanged={this.props.onAlgoChanged}\n                />\n                <button\n                    className='btn btn-warning btn-lg '\n                    onClick={this.props.onViusalize}\n                    disabled={this.props.disable}\n                    style={this.isClickable()}\n                >\n                    Visualize\n                </button>\n\n            </nav>\n        );\n    }\n    isClickable = () =>{\n        if( this.props.disable ){\n            return {cursor: \"not-allowed\"};\n        } else{\n            return {};\n        }\n    }\n}\n\n\nexport default Menu;","import React, {Component} from 'react';\n\nimport Rects from \"./rects\";\nimport {bubbleSort,selectionSort,insertionSort} from \"../algorithms/sortingAlgorithms\";\nimport {quickSort} from \"../algorithms/quickSort\";\nimport Navbar from \"./navbar\";\nimport Menu from \"./menu\";\n\nclass Sort extends Component {\n  state = {\n      count:20,\n      rects: [],\n      rects2: [],\n      doubles:false,\n      speed:50,\n      isRunning:false,\n      isRunning1:false,\n      isRunning2:false,\n      algo1:0,\n      algo2:0\n  }\n\n  componentDidMount() {\n      const rect = getInitialRects(this.state.count);\n      const rect2 = rect.slice();\n      this.setState({rects:rect,rects2:rect2});\n  }\n\n    render() {\n    return (\n        <React.Fragment>\n            <Navbar/>\n            <Menu\n                disable={this.state.isRunning}\n                onDoubleChange={this.handleDouble}\n                onViusalize={this.handleSort}\n                onRandomize={this.handleRandomize}\n                onRefresh={this.handleRefresh}\n                onCountChange={this.handleCountChange}\n                onAlgoChanged={this.handleAlgoChanged}\n                onSpeedChange={this.handleSpeedChanged}\n            />\n            <div className=' justify-content-center'>\n\n                <Rects\n                    speed={this.state.speed}\n                    rects={this.state.rects}\n                />\n                { this.state.doubles && <hr style={{width:\"90%\"}}/>}\n                { this.state.doubles &&\n                <Rects\n                    rects={this.state.rects2}\n                /> }\n            </div>\n        </React.Fragment>\n    );\n  }\n  handleRandomize = () => {\n      const rect = getInitialRects(this.state.count);\n      const rect2 = rect.slice();\n      this.setState({rects:rect,rects2:rect2});\n  }\n  handleRefresh = () =>{\n      const rects = this.state.rects;\n      for(let i=0;i<rects.length;i++){\n          const rect = {...rects[i],isSorted:false, isSorting:false}\n          rects[i] = rect;\n      }\n      const rects2 = rects.slice();\n      this.setState({rects,rects2});\n  }\n\n  handleDouble = (val) =>{\n      this.setState({doubles:val});\n  }\n  handleCountChange = (val) => {\n      this.setState({count:val});\n      this.handleRandomize();\n  }\n  handleAlgoChanged = (pos,val) =>{\n      if( pos === 0 ){\n          this.setState({algo1:val});\n      } else{\n          this.setState({algo2:val});\n      }\n  }\n  handleSpeedChanged = (val) =>{\n    const speed = (760-val*7.5);\n    this.setState({speed});\n  }\n  handleSort = () =>{\n\n      this.setState({isRunning:true});\n      let steps1;\n      switch (this.state.algo1){\n          case 0:\n              steps1 = bubbleSort(this.state.rects);\n              break;\n          case 1:\n              steps1 = selectionSort(this.state.rects);\n              break;\n          case 2:\n              steps1 = insertionSort(this.state.rects);\n              break;\n          case 3:\n              steps1 = quickSort(this.state.rects2);\n              console.log(steps1)\n              break;\n          default:\n              steps1 = bubbleSort(this.state.rects);\n              break;\n      }\n      let steps2;\n      if( this.state.doubles ){\n\n          switch (this.state.algo2){\n              case 0:\n                  steps2 = bubbleSort(this.state.rects2);\n                  break;\n              case 1:\n                  steps2 = selectionSort(this.state.rects2);\n                  break;\n              case 2:\n                  steps2 = insertionSort(this.state.rects2);\n                  break;\n              case 3:\n                  steps2 = quickSort(this.state.rects2);\n                  break;\n              default:\n                  steps2 = bubbleSort(this.state.rects2);\n                  break;\n          }\n\n      }\n      this.handleFirst(steps1);\n      if( this.state.doubles ) this.handleSecond(steps2);\n  }\n  handleFirst = async (steps) =>{\n     // console.log(\"fsdfsdfsdfasdf\");\n      this.setState({isRunning1:true});\n\n     // const steps = bubbleSort(this.state.rects);\n    //  console.log(steps.length);\n      const prevRect = this.state.rects;\n      for(let i = 0;i<steps.length;i++){\n       //   setTimeout(()=>{\n              if( i!==0 ){\n                  prevRect[steps[i-1].xx] = { ...prevRect[steps[i-1].xx],isSorting:false };\n                  prevRect[steps[i-1].yy] = { ...prevRect[steps[i-1].yy],isSorting:false };\n              }\n              if(steps[i].xx===steps[i].yy){\n                  prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorted:true,isSorting:false};\n              }else if( steps[i].changed ){\n                  const recti = {...prevRect[steps[i].xx],isSorting:true};\n                  const rectj = {...prevRect[steps[i].yy],isSorting:true};\n                  prevRect[steps[i].yy] = recti;\n                  prevRect[steps[i].xx] = rectj;\n              } else{\n                  prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorting:true};\n                  prevRect[steps[i].yy] = {...prevRect[steps[i].yy],isSorting:true};\n              }\n              if(i === steps.length-1){\n                  this.setState({isRunning1:false});\n                  if( this.state.isRunning2 === false ){\n                      this.setState({isRunning:false});\n                  }\n              }\n             /* if( i === (steps.length)-2 ){\n                  this.setState({isRunning1:false});\n                  if( this.state.isRunning2 === false ){\n                      this.setState({isRunning:false});\n                  }\n                  prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorting:false,isSorted:true};\n                  prevRect[steps[i].yy] = {...prevRect[steps[i].yy],isSorting:false,isSorted:true};\n              }*/\n              this.setState({rects:prevRect});\n              await sleep(this.state.speed);\n         // },i*speed);\n      }\n  }\n    handleSecond = async (steps) =>{\n        this.setState({isRunning2:true});\n        const prevRect = this.state.rects2;\n        for(let i = 0;i<steps.length;i++){\n         //   setTimeout(()=>{\n                if( i!==0 ){\n                    prevRect[steps[i-1].xx] = { ...prevRect[steps[i-1].xx],isSorting:false };\n                    prevRect[steps[i-1].yy] = { ...prevRect[steps[i-1].yy],isSorting:false };\n                }\n                if(steps[i].xx===steps[i].yy){\n                    prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorted:true,isSorting:false};\n                }else if( steps[i].changed ){\n                    const recti = {...prevRect[steps[i].xx],isSorting:true};\n                    const rectj = {...prevRect[steps[i].yy],isSorting:true};\n                    prevRect[steps[i].yy] = recti;\n                    prevRect[steps[i].xx] = rectj;\n                } else{\n                    prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorting:true};\n                    prevRect[steps[i].yy] = {...prevRect[steps[i].yy],isSorting:true};\n                }\n                if( i === steps.length-1 ){\n                    this.setState({isRunning2:false});\n                    if( this.state.isRunning1 === false ){\n                        this.setState({isRunning:false});\n                    }\n                }\n               /* if( i === (steps.length)-2 ){\n                    prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorting:false,isSorted:true};\n                    prevRect[steps[i].yy] = {...prevRect[steps[i].yy],isSorting:false,isSorted:true};\n                    this.setState({isRunning2:false});\n                    if( this.state.isRunning1 === false ){\n                        this.setState({isRunning:false});\n                    }\n                }*/\n                this.setState({rects2:prevRect});\n                await sleep(this.state.speed);\n           // },i*speed);\n        }\n    }\n\n\n}\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\nconst getInitialRects = (tot) => {\n    const rects = [];\n    for(let i = 0;i<tot;i++){\n        rects.push(getRect(i));\n    }\n    return rects;\n}\nconst getRect = (kk) => {\n  return {\n      width: Math.floor(Math.random() * 200)+50,\n      isSorted:false,\n      isSorting:false,\n      kk:kk\n  }\n}\nexport default Sort;\n","export default __webpack_public_path__ + \"static/media/queen.a967028b.png\";","import React, {Component} from 'react';\nimport './style.css'\nimport queen from './queen.png';\nclass Cell extends Component {\n    render() {\n        return (\n            <div className={this.getClassName()} style={this.getStyled()}>\n                { this.props.cell.isPresent && <img src={queen} alt=\"queen\" height='100px' style={{padding:\"25px\"}}/> }\n            </div>\n        );\n    }\n    getClassName = ()=>{\n        if(this.props.cell.isAttacked){\n            return \"boardCell attacked\";\n        } else if(this.props.cell.isCurrent){\n            return \"boardCell current\";\n        }else if(this.props.cell.isPresent){\n            return \"boardCell present\";\n        }else if(this.props.cell.isChecked){\n            return \"boardCell checked\";\n        } else{\n            return \"boardCell\";\n        }\n    }\n    getStyled = () =>{\n        if( (this.props.cell.row+this.props.cell.col)%2 === 0 ){\n            return {\n                backgroundColor:\"white\"\n            }\n        }else{\n            return {\n                backgroundColor:\"grey\"\n            }\n        }\n    }\n}\n\nexport default Cell;","import React, {Component} from 'react';\nimport Cell from \"./cell\";\nimport './style.css';\nclass Cells extends Component {\n    render() {\n        return (\n            <div className='booard m-5' >\n                {this.props.board.map( (row,rowidx)=>{\n                    return(\n                        <div key={rowidx}>\n                            {row.map( (cell,cellidx)=>{\n                                return(\n                                    <Cell\n                                        key={cellidx}\n                                        cell={cell}/>\n                                );\n                            } )}\n                        </div>\n                    );\n                } )}\n            </div>\n        );\n    }\n}\n\nexport default Cells;","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <span className=\"navbar-brand\">N Queen</span>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\n                    <Link to={\"/\"}>\n                            <span style={{color:\"white\"}}>\n                                Home\n                            </span>\n                    </Link>\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 200,\n    },\n});\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\n\nexport default function DiscreteSlider(props) {\n    const classes = useStyles();\n    const handleChange = (event) =>{\n        if( event.target.innerText === \"\" ){\n            return;\n        }\n        const num = parseInt(event.target.innerText,10);\n        props.onCountChange(num);\n    }\n    return (\n        <div className={classes.root+\" ml-2 mr-2\"}>\n\n            <Slider\n                defaultValue={props.default}\n                getAriaValueText={valuetext}\n                aria-labelledby=\"discrete-slider\"\n                valueLabelDisplay=\"auto\"\n                onChangeCommitted={handleChange}\n                step={props.step}\n               // marks={props.marks}\n                min={props.min}\n                max={props.max}\n                disabled={props.disable}\n            />\n            <Typography id=\"discrete-slider\" gutterBottom>\n                {props.title}\n            </Typography>\n        </div>\n    );\n}\n","import React, {Component} from 'react';\nimport DiscreteSlider from \"./slider\";\n\n\n\nclass Menu extends Component {\n    render() {\n        return (\n            <nav className=\"nav alert-dark\">\n                <button\n                    className='btn btn-secondary m-2'\n                    onClick={this.props.onClear}\n                    disabled={this.props.disable}\n                    style={this.isClickable()}\n                >\n                    Clear Board\n                </button>\n\n                <DiscreteSlider\n                    default={4}\n                    min={1}\n                    max={8}\n                    step={1}\n                    title=\"Grid size\"\n                    onCountChange={this.props.onCountChange}\n                    disable={this.props.disable}\n                />\n                <DiscreteSlider\n                    default={50}\n                    min={1}\n                    max={100}\n                    step={1}\n                    title=\"Speed\"\n                    onCountChange={this.props.onSpeedChange}\n                />\n\n                <button\n                    className='btn btn-warning btn-lg '\n                    onClick={this.props.onViusalize}\n                    disabled={this.props.disable}\n                    style={this.isClickable()}\n                >\n                    Visualize\n                </button>\n\n            </nav>\n        );\n    }\n    isClickable = () =>{\n        if( this.props.disable ){\n            return {cursor: \"not-allowed\"};\n        } else{\n            return {};\n        }\n    }\n}\n\n\nexport default Menu;","import React, {Component} from 'react';\nimport Cells from \"./cells\";\nimport Navbar from \"./navbar\";\nimport Menu from \"./menu\";\n\nclass Queen extends Component {\n    state={\n        board:[],\n        number:4,\n        speed:490,\n        isRunning:false\n    }\n\n    componentDidMount() {\n        const board = getBoard(this.state.number);\n       // board[3][3].isPresent = true;\n        this.setState({board});\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar/>\n                <Menu\n                    onSpeedChange={this.handleSpeedChange}\n                    onCountChange={this.handleQueenChange}\n                    onViusalize={this.startAlgo}\n                    disable={this.state.isRunning}\n                    onClear={this.handleClear}\n                    onStop={this.handleStop}\n                />\n                <div style={{textAlign:\"Center\"}}>\n                    <Cells\n                        board={this.state.board}\n                    />\n                </div>\n            </div>\n        );\n    }\n\n    handleStop =() =>{\n        this.setState({isRunning:false});\n    }\n\n    handleSpeedChange = (val)=>{\n        const speed = (100-val)*10;\n        this.setState({speed});\n    }\n    handleQueenChange = (number)=>{\n        this.setState({number});\n        const board = getBoard(this.state.number);\n        this.setState({board});\n    }\n    handleClear = () => {\n        const board = getBoard(this.state.number);\n        this.setState({board});\n    }\n    handleTurnOff =  () => {\n        const newBoard = turnOffAttack(this.state.board,this.state.number);\n        this.setState({board:newBoard});\n    }\n    startAlgo = async ()=>{\n        this.setState({isRunning:true});\n        const newBoard = this.state.board.slice();\n        await this.queensAlgo(newBoard,0);\n        const newBoard2 = turnOffAttack(this.state.board,this.state.number);\n        this.setState({board:newBoard2,isRunning:false});\n    }\n    queensAlgo =  async (board,col) => {\n\n        if( col>=this.state.number ){\n            return true;\n        }\n\n        let newBoard = board.slice();\n        for( let i = 0; i < this.state.number;i++ ){\n\n\n            newBoard = turnOffAttack(newBoard,this.state.number);\n            const result = getChecked(newBoard,i,col,this.state.number);\n            newBoard = result[0];\n\n            this.setState({board:newBoard});\n            await sleep(this.state.speed);\n            if( result[1] ){\n                const res = await this.queensAlgo(newBoard,col+1)\n                if( res === true){\n                    return true;\n                }\n                newBoard[i][col] = {...newBoard[i][col],isPresent:true,isCurrent:true};\n                this.setState({board:newBoard});\n                await sleep(this.state.speed);\n                newBoard[i][col] = {...newBoard[i][col],isPresent:false,isCurrent:false};\n                this.setState({board:newBoard});\n\n            }\n            newBoard[i][col] = {...newBoard[i][col],isPresent:false,isCurrent:false};\n            newBoard = turnOffAttack(newBoard,this.state.number);\n            this.setState({board:newBoard});\n            await sleep(this.state.speed);\n        }\n        return false;\n    }\n\n}\n\nexport default Queen;\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\nconst turnOffAttack = (board,N) =>{\n    const newBoard = board.slice();\n    for( let i = 0;i<N; i++ ){\n        for( let j = 0;j<N;j++ ){\n            newBoard[i][j] = {...newBoard[i][j],isChecked:false, isAttacked:false,isCurrent:false};\n        }\n    }\n    return newBoard;\n}\n\nconst getChecked = (board,row,col,N) =>{\n    const newBoard = board.slice();\n    let pos = true;\n    // same col\n    for( let i = 0;i < N;i++ ){\n        if( newBoard[row][i].isPresent ){\n            newBoard[row][i] = {...newBoard[row][i],isAttacked:true};\n            pos = false;\n        } else{\n            newBoard[row][i] = {...newBoard[row][i],isChecked:true};\n        }\n    }\n    // same row\n    for( let i = 0;i < N;i++ ){\n        if( newBoard[i][col].isPresent ){\n            newBoard[i][col] = {...newBoard[i][col],isAttacked:true};\n            pos = false;\n        } else{\n            newBoard[i][col] = {...newBoard[i][col],isChecked:true};\n        }\n    }\n    for( let i = row,j = col; i >= 0 && j >= 0; i--, j--){\n        if( newBoard[i][j].isPresent ){\n            newBoard[i][j] = {...newBoard[i][j],isAttacked:true};\n            pos = false;\n        } else{\n            newBoard[i][j] = {...newBoard[i][j],isChecked:true};\n        }\n    }\n    for( let i = row,j = col; i <N && j >= 0; i++, j--){\n        if( newBoard[i][j].isPresent ){\n            newBoard[i][j] = {...newBoard[i][j],isAttacked:true};\n            pos = false;\n        } else{\n            newBoard[i][j] = {...newBoard[i][j],isChecked:true};\n        }\n    }\n    for( let i = row,j = col; i <N && j < N; i++, j++){\n        if( newBoard[i][j].isPresent ){\n            newBoard[i][j] = {...newBoard[i][j],isAttacked:true};\n            pos = false;\n        } else{\n            newBoard[i][j] = {...newBoard[i][j],isChecked:true};\n        }\n    }\n    for( let i = row,j = col; i>=0 && j < N; i--, j++){\n        if( newBoard[i][j].isPresent ){\n            newBoard[i][j] = {...newBoard[i][j],isAttacked:true};\n            pos = false;\n        } else{\n            newBoard[i][j] = {...newBoard[i][j],isChecked:true};\n        }\n    }\n\n    newBoard[row][col] = {...newBoard[row][col],isPresent:true,isCurrent:true};\n\n    return [newBoard,pos];\n}\nconst getBoard = (N) =>{\n    const rows = [];\n    for( let i = 0;i<N;i++ ){\n        const cols = [];\n        for(let j =0;j<N;j++){\n            cols.push(getCell(i,j));\n        }\n        rows.push(cols);\n    }\n    return rows;\n}\n\nconst getCell = (row,col)=>{\n    return{\n        row,\n        col,\n        isPresent:false,\n        isChecked:false,\n        isAttacked:false,\n        isCurrent:false\n    }\n}","export function convex_hull(points){\n    if( points.size === 1 ){\n        return;\n    }\n    const pointStart = points[0];\n    const pointEnd = points[ points.length-1 ];\n    const up = [], down = [];\n    const pairs = [];\n    const lines=[];\n    up.push( pointStart);\n    down.push(pointStart);\n    for( let i = 1; i< points.length ;i++ ){\n        if( (i === (points.length - 1)) || cw( pointStart,points[i],pointEnd ) ){\n            while( up.length >=2 && !cw(up[up.length-2],up[up.length-1],points[i] ) ){\n                lines.push({\n                    from:up[up.length-2],\n                    to:up[up.length-1],\n                    add:false\n                });\n                up.pop();\n            }\n            up.push( points[i] );\n            lines.push({\n                from:up[up.length-2],\n                to:up[up.length-1],\n                add:true\n            })\n        }\n\n    }\n    for(let i = 0; i< points.length;i++){\n        if( (i === (points.length - 1)) || ccw( pointStart,points[i],pointEnd ) ){\n            while( down.length >=2 && !ccw(down[down.length-2],down[down.length-1],points[i] ) ){\n                lines.push({\n                    from:down[down.length-2],\n                    to:down[down.length-1],\n                    add:false\n                });\n                down.pop();\n            }\n            down.push( points[i] );\n            lines.push({\n                from:down[down.length-2],\n                to:down[down.length-1],\n                add:true\n            })\n        }\n    }\n\n    for (let i = 0; i < up.length; i++){\n        pairs.push(up[i]);\n    }\n    for (let i = down.length - 2; i > 0; i--) {\n        pairs.push(down[i]);\n    }\n    return [pairs,lines];\n}\n\nfunction cw(a, b, c) {\n    if( a.xx*(b.yy-c.yy)+b.xx*(c.yy-a.yy)+c.xx*(a.yy-b.yy) < 0 ){\n        return true;\n    } else{\n        return false;\n    }\n\n}\n\nfunction ccw(a, b, c){\n    if( a.xx * (b.yy - c.yy) + b.xx * (c.yy - a.yy) + c.xx * (a.yy - b.yy) > 0 ){\n        return true;\n    } else {\n        return false;\n    }\n\n}","import React, {Component} from 'react';\nimport './style.css';\nimport {convex_hull} from \"../algorithms/grahamScan\";\nclass Canvas extends Component {\n    state={\n        dots:[],\n        lines:[],\n        canvasWidth:300,\n        canvasHeight:100\n    }\n    constructor(props) {\n        super(props);\n        this.setState({canvasWidth:window.innerWidth});\n        this.setState({canvasHeight:window.innerHeight-10});\n        console.log(window.innerWidth);\n        this.myRef = React.createRef();\n        this.canvasLineRef = React.createRef();\n    }\n    componentDidMount() {\n        this.redrawDots();\n       // console.log(this.state.canvasWidth);\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n        if( this.props.dots!==prevProps.dots ){\n            this.setState({dots:this.props.dots});\n            this.redrawDots();\n        }\n        if( this.props.onGoing!==prevProps.onGoing ){\n            if( this.props.onGoing === true ){\n                this.animateLine();\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div style={{textAlign:\"center\"}}>\n                <div className=\"containerz\">\n                    <canvas\n                        className='canvas'\n                        id='canvas1'\n                        style={{backgroundColor:\"whitesmoke\"}}\n                        ref={this.canvasLineRef} width={window.innerWidth} height={window.innerHeight-200} />\n                    <canvas\n                        className='canvas'\n                        id='canvas2'\n                        // style={{backgroundColor:\"grey\"}}\n                        ref={this.myRef} width={window.innerWidth} height={window.innerHeight-200}\n                    />\n\n                </div>\n            </div>\n        );\n    }\n\n    redrawDots(){\n        const canvas = this.myRef.current;\n        const ctx = canvas.getContext(\"2d\");\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n        ctx.fillStyle = 'lightgrey';\n        ctx.strokeStyle = 'black';\n        for( let i = 0; i<this.props.dots.length;i++ ){\n            ctx.beginPath();\n           // ctx.moveTo(this.props.dots[i].xx, this.props.dots[i].yy)\n            ctx.arc(this.props.dots[i].xx, this.props.dots[i].yy, 10, 0, 2*Math.PI);\n            ctx.fill();\n            ctx.lineWidth = 2;\n            ctx.stroke();\n            ctx.closePath();\n\n        }\n        ctx.closePath();\n        const res = convex_hull(this.props.dots);\n\n        const cansvas2 = this.canvasLineRef.current;\n        const ctx2 = cansvas2.getContext('2d');\n        ctx2.clearRect(0, 0, canvas.width, canvas.height);\n        this.setState({lines:res[1]});\n\n    }\n\n    animateLine = async () => {\n        const {lines} = this.state;\n        const canvas2 = this.canvasLineRef.current;\n        const ctx2 = canvas2.getContext('2d');\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n        ctx2.fillStyle = '#ffffff';\n        ctx2.strokeStyle = '#ffffff';\n        for( let i = 0; i<lines.length;i++ ){\n            if( !this.props.onGoing ){\n                ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n                return;\n            }\n            ctx2.beginPath();\n            if( lines[i].add ){\n                ctx2.beginPath();\n                ctx2.lineWidth = 2;\n                ctx2.fillStyle = 'black';\n                ctx2.moveTo(lines[i].from.xx, lines[i].from.yy)\n                ctx2.arc(lines[i].from.xx, lines[i].from.yy, 14, 0, 2*Math.PI);\n                ctx2.fill();\n                ctx2.closePath();\n\n                ctx2.beginPath();\n                ctx2.fillStyle = 'red';\n                ctx2.moveTo(lines[i].to.xx, lines[i].to.yy)\n                ctx2.arc(lines[i].to.xx, lines[i].to.yy, 14, 0, 2*Math.PI);\n                ctx2.fill();\n                ctx2.closePath();\n\n                ctx2.beginPath();\n                ctx2.lineWidth = 2;\n                ctx2.strokeStyle = '#000000';\n            } else{\n                ctx2.beginPath();\n                ctx2.fillStyle = 'whitesmoke';\n                ctx2.moveTo(lines[i].from.xx, lines[i].from.yy)\n                ctx2.arc(lines[i].from.xx, lines[i].from.yy, 15, 0, 2*Math.PI);\n                ctx2.fill();\n                ctx2.closePath();\n\n                ctx2.beginPath();\n                ctx2.fillStyle = 'whitesmoke';\n                ctx2.moveTo(lines[i].to.xx, lines[i].to.yy)\n                ctx2.arc(lines[i].to.xx, lines[i].to.yy, 15, 0, 2*Math.PI);\n                ctx2.fill();\n                ctx2.closePath();\n\n                ctx2.lineWidth = 4;\n                ctx2.strokeStyle = 'whitesmoke';\n            }\n\n            ctx2.moveTo(lines[i].from.xx, lines[i].from.yy);\n            ctx2.lineTo(lines[i].to.xx, lines[i].to.yy);\n            ctx2.stroke();\n            ctx2.closePath();\n            if( i === lines.length - 1 ){\n                this.props.onTurnOff();\n            }\n            await sleep(this.props.speed);\n        }\n    }\n\n}\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\nexport default Canvas;","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\n\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <span className=\"navbar-brand\">Convex Hull</span>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\n                    <Link to={\"/\"}>\n                        <span style={{color:\"white\"}}>\n                            Home\n                        </span>\n                    </Link>\n                </div>\n\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 300,\n    },\n});\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\n\nexport default function DiscreteSlider(props) {\n    const classes = useStyles();\n    const handleChange = (event) =>{\n        if( event.target.innerText === \"\" ){\n            return;\n        }\n        const num = parseInt(event.target.innerText,10);\n        props.onChange(num);\n    }\n    return (\n        <div className={classes.root+\" ml-2 mr-2\"}>\n            <Typography id=\"discrete-slider\" gutterBottom>\n                {props.title}\n            </Typography>\n            <Slider\n                defaultValue={props.default}\n                getAriaValueText={valuetext}\n                aria-labelledby=\"discrete-slider\"\n                valueLabelDisplay=\"auto\"\n                onChangeCommitted={handleChange}\n                step={props.step}\n                marks={props.marks}\n                min={props.min}\n                max={props.max}\n                disabled={props.isDisabled}\n            />\n        </div>\n    );\n}\n","import React, {Component} from 'react';\nimport DiscreteSlider from \"./slider\";\nclass Menu extends Component {\n    render() {\n        return (\n            <nav className=\"nav alert-dark\">\n                <button className=\"btn btn-primary btn-lg m-2\" onClick={this.props.onRefresh} disabled={this.props.isDisabled} style={this.isClickable()}>Refresh</button>\n                <DiscreteSlider\n                    onChange={this.props.onChangeSpeed}\n                    title=\"speed\"\n                    marks={false}\n                    default={10}\n                    step={1}\n                    min={10}\n                    max={50}\n                    isDisabled={false}\n                />\n                <DiscreteSlider\n                    onChange={this.props.onChangeValues}\n                    title=\"Total Number\"\n                    marks={false}\n                    default={50}\n                    step={1}\n                    min={10}\n                    max={200}\n                    isDisabled={this.props.isDisabled}\n                />\n                <button\n                    className=\"btn btn-warning btn-lg m-2\"\n                    onClick={this.props.onVisualize}\n                    disabled={this.props.isDisabled}\n                    style={this.isClickable()}\n                >\n                    Visualize Graham Scan\n                </button>\n\n            </nav>\n        );\n    }\n    isClickable = () =>{\n        if( this.props.isDisabled ){\n            return {cursor: \"not-allowed\"};\n        } else{\n            return {};\n        }\n    }\n}\n\nexport default Menu;","import React, {Component} from 'react';\nimport Canvas from \"./canvas\";\nimport Navbar from \"./navbar\";\nimport Menu from \"./menu\";\nclass ConvexHull extends Component {\n    state={\n        dots:[],\n        lines:[],\n        isALgoLive:false,\n        width:100,\n        height:100,\n        isRunning:false,\n        speed:100,\n        number:50\n\n    }\n    constructor() {\n        super();\n        this.setState({width:window.innerWidth,height:window.innerHeight-200});\n    }\n    componentDidMount() {\n        this.setState({width:window.innerWidth,height:window.innerHeight-100});\n    }\n    render() {\n        return (\n            <div>\n                <Navbar/>\n                <Menu\n                    onRefresh={this.handleRefreshDots}\n                    onVisualize={this.handleVisualize}\n                    onChangeSpeed={this.changeSpeed}\n                    onChangeValues={this.handleValueIncease}\n                />\n                <Canvas\n                    width={this.state.width}\n                    height={this.state.height}\n                    dots={this.state.dots}\n                    onTurnOff={this.handleTurnOff}\n                    onGoing={this.state.isRunning}\n                    speed={this.state.speed}\n                />\n            </div>\n        );\n    }\n    handleValueIncease = (value) => {\n        this.setState({number:value});\n        this.handleRefreshDots();\n    }\n    changeSpeed = (speed) => {\n        //console.log(typeof speed);\n        this.setState({speed:600-speed*10});\n    }\n    handleAlgoStateChanged = (val) => {\n        this.setState({isAlgoLive:val});\n    }\n    handleVisualize = () =>{\n        this.setState({isRunning:true});\n    }\n    handleTurnOff = () =>{\n        this.setState({onGoing:false});\n    }\n    handleRefreshDots = () =>{\n        this.setState({isRunning:false});\n        this.setState({dots:getNewDots(this.state.number)});\n    }\n\n    handleMoreDot = () =>{\n        const row = Math.floor(Math.random()*400)+10;\n        const col = Math.floor(Math.random()*400)+10;\n        const dot = {\n            row:row,\n            col:col\n        }\n        const dots = this.state.dots;\n        dots.push(dot);\n        this.setState(dots);\n    }\n}\nfunction getNewDots(number){\n    const dots= [];\n    for(let  i = 0; i<number;i++){\n        dots.push(getDot());\n    }\n    dots.sort( (a,b) => {\n       if( a.xx!==b.xx ){\n           return a.xx-b.xx;\n       } else{\n           return a.yy - b.yy;\n       }\n    } );\n    return dots;\n}\nfunction getDot(){\n    const width = window.innerWidth-50;\n    const height = window.innerHeight-250;\n    const rowpos = Math.floor( Math.random()*height )+25;\n    const colpos = Math.floor(Math.random()*width)+25;\n    return {\n        xx:colpos,\n        yy:rowpos,\n    }\n}\nexport default ConvexHull;","import React, {Component} from 'react';\nimport TextField from '@material-ui/core/TextField';\n\n\nclass EntryPoint extends Component {\n    state={\n        error:false\n    }\n    render() {\n        return (\n            <div>\n                <TextField\n                    error={this.state.error}\n                    id=\"standard-error-helper-text\"\n                    label=\"Upper Number\"\n                    type=\"number\"\n                    variant=\"outlined\"\n                    onChange={this.getData}\n                /> <br /><br />\n                <h1>\n                    Guess a number between 0 and {this.props.upper}\n                </h1>\n                <br />\n                <button\n                    className='btn btn-warning btn-lg'\n                    onClick={this.props.startGame}\n                >\n                    Start the game\n                </button>\n            </div>\n        );\n    }\n    getData = (e)=>{\n        if( e.target.value!== \"\" ){\n            console.log(e.target.value);\n            this.props.setUpper(e.target.value);\n        }\n        else{\n            this.props.setUpper(100)\n        }\n    }\n    validateNumbers = () =>{\n\n    }\n}\n\nexport default EntryPoint;","import React, {useEffect} from 'react';\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 400,\n    },\n});\n\n\nconst CSlider = withStyles({\n    root: {\n       // color: \"#ffffff\",\n        height: 3,\n        width: 400,\n        padding: \"13px 0\",\n    },\n    track: {\n        height: 4,\n        borderRadius: 2,\n    },\n    thumb: {\n        backgroundColor: \"#fff\",\n        //color: \"#fff\",\n    },\n})(Slider);\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\n\n\nexport default function RangeSlider(props) {\n    const classes = useStyles();\n    const [value, setValue] = React.useState([props.lower, props.upper]);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n\n    };\n    const handleCommit = (event, newValue) => {\n        console.log(newValue);\n    };\n    useEffect(()=>{\n        setValue([props.lower,props.upper]);\n    },[props.lower,props.upper])\n    return (\n        <div className={classes.root}>\n            <CSlider\n                disabled\n                value={value}\n                onChange={handleChange}\n                onChangeCommitted={handleCommit}\n                aria-labelledby=\"range-slider\"\n                getAriaValueText={valuetext}\n                valueLabelDisplay=\"on\"\n                max={props.max}\n            />\n            <Typography id=\"range-slider\" gutterBottom>\n                Binary Search\n            </Typography>\n        </div>\n    );\n}\n","import React, {Component} from 'react';\nimport RangeSlider from \"./doubleSlider\";\n\nclass Guess extends Component {\n    render() {\n        return (\n            <div >\n\n                <p>\n\n                    <button className=\"btn btn-secondary btn-lg\" type=\"button\" data-toggle=\"collapse\"\n                            data-target=\"#collapseExample\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\n                        Toggle Range\n                    </button>\n                </p>\n                <div className=\"collapse\" id=\"collapseExample\">\n                    <div className=\"card card-body\">\n                        <center style={{justifyContent:\"center\"}}>\n                            <RangeSlider\n                                upper={this.props.upper}\n                                lower={this.props.lower}\n                                max={this.props.max}\n                            />\n                        </center>\n                    </div>\n                </div>\n\n               <h1>\n                    Is you number greater than {this.getMid()}?\n                </h1> <br />\n                <button\n                    className='btn btn-lg btn-success m-2'\n                    onClick={this.props.yesButton}\n                >Yes</button>\n                <button\n                    className='btn btn-lg btn-danger m-2'\n                    onClick={this.props.noButton}\n                >No</button> <br/>\n            </div>\n        );\n    }\n    getMid = () => {\n        const mid = Math.floor( (this.props.upper+this.props.lower)/2);\n        return mid;\n    }\n}\n\nexport default Guess;","import React, {Component} from 'react';\n\nclass Result extends Component {\n    render() {\n        return (\n            <div>\n                <span className='display-3'>\n                    Your number is {this.props.res}\n                </span> <br />\n                <button\n                    className='btn btn-warning btn-lg'\n                    onClick={this.props.onRestart}\n                >\n                    Restart\n                </button>\n            </div>\n        );\n    }\n}\n\nexport default Result;","import React, {Component} from 'react';\nimport Guess from \"./guess\";\nimport Result from \"./result\";\n\nclass Search extends Component {\n    render() {\n        return (\n            <div>\n                {this.props.upper !== this.props.lower &&\n                <Guess\n                    yesButton={this.props.yesButton}\n                    noButton={this.props.noButton}\n                    upper={this.props.upper}\n                    lower={this.props.lower}\n                    max={this.props.max}\n                />\n                }\n                {this.props.upper === this.props.lower &&\n                   <Result\n                       res={this.props.upper}\n                       onRestart={this.props.onRestart}\n                   />\n                }\n            </div>\n        );\n    }\n\n}\n\nexport default Search;","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <span className=\"navbar-brand\">Binary Search Game</span>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\n                    <Link to={\"/\"}>\n                        <span style={{color:\"white\"}}>\n                            Home\n                        </span>\n                    </Link>\n                </div>\n\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React, {Component} from 'react';\nimport EntryPoint from \"./entryPoint\";\nimport Search from \"./search\";\nimport Navbar from \"./navbar\";\n\nclass BinarySearch extends Component {\n    state={\n        upper:100,\n        lower:0,\n        max:100,\n        isRunning:false\n    }\n    render() {\n        return (\n            <div>\n                <Navbar/>\n                <br />\n                <br />\n                <br />\n            <center>\n                {!this.state.isRunning &&\n                <EntryPoint\n                    startGame={this.handleStartGame}\n                    upper={this.state.upper}\n                    setUpper={this.handleSetUpper}\n                /> }\n                {this.state.isRunning &&\n                <Search\n                    yesButton={this.handleYes}\n                    noButton={this.handleNo}\n                    upper={this.state.upper}\n                    lower={this.state.lower}\n                    max={this.state.max}\n                    onRestart={this.handleRestart}\n                />\n                }\n            </center>\n            </div>\n        );\n    }\n    handleStartGame = () =>{\n        this.setState({isRunning:true});\n    }\n    handleRestart = () =>{\n        this.setState({isRunning:false,upper:100,lower:0});\n    }\n    handleYes = () =>{\n        const mid = Math.floor( (this.state.upper+this.state.lower)/2);\n        this.setState({lower:mid+1});\n    }\n    handleNo = () =>{\n        const mid = Math.floor( (this.state.upper+this.state.lower)/2);\n        this.setState({upper:mid});\n    }\n    handleSetUpper = (up) =>{\n        let val = parseInt(up);\n        if( val<=0 ){\n            val = 100;\n        }\n        this.setState({upper:val,max:val});\n    }\n}\n\nexport default BinarySearch;","import React, {Component} from 'react';\nimport './style.css';\nclass Rect extends Component {\n\n    render() {\n        return (\n            <div\n                className='rect'\n                style={{height:this.props.rect.width,\n                    border: this.checkBorder(),\n                    background:this.checkColor(),\n                    margin:this.props.marg\n\n\n                }}\n            >\n                \n            </div>\n        );\n    }\n    checkColor = () => {\n        if( this.props.rect.isSorted ){\n            return \"green\";\n        } else if( this.props.rect.isSorting ){\n            return \"orange\";\n        } else if( this.props.rect.isLeft ){\n            return \"red\";\n        } else if(this.props.rect.isRight){\n            return \"purple\";\n        }else{\n            return \"#ADD8E6\";\n        }\n    }\n    checkBorder = () =>{\n        if( this.props.rect.isRange ){\n            return \"0px solid black\";\n        } else{\n            return \"0px\"\n        }\n    }\n}\n\nexport default Rect;","import React, {Component} from 'react';\nimport Rect from \"./rect\";\n\nclass Rects extends Component {\n    render() {\n        let margin = 5;\n        if( this.props.rects.length>50 ){\n            margin=1;\n        }\n        return (\n            <div className=\"d-flex justify-content-center align-items-end\">\n                {this.props.rects.map( (rect,rectidx)=>{\n                    return (\n                        <Rect\n                            marg={margin}\n                            key={rectidx}\n                            rect={rect}\n                        />\n                    );\n                } )}\n            </div>\n        );\n    }\n}\n\nexport default Rects;","let values = [];\nexport default function mergeSort(rects2){\n    let rects = rects2.slice();\n    values = [];\n    let sz = rects2.length;\n   // console.log( \"fdsfsd\",sz );\n    sz = sz-1;\n    mergeS(rects,0,sz);\n    return values;\n}\n\nfunction merge(rects, l, m, r){\n  //  console.log(l,\" \",r);\n    let n1 = m-l+1;\n    let n2 = r-m;\n\n    const L = rects.slice(l, m+1);\n    const R = rects.slice(m+1,r+1);\n    let i = 0;\n    let j = 0;\n    let k = l;\n    while(i<n1 && j<n2){\n        if( L[i].width <= R[j].width ){\n            rects[k] = L[i];\n            i++;\n        } else{\n            rects[k] = R[j];\n            j++;\n        }\n        k++;\n    }\n    while (i < n1) {\n        rects[k] = L[i];\n        i++;\n        k++;\n    }\n    while (j < n2) {\n        rects[k] = R[j];\n        j++;\n        k++;\n    }\n\n}\n\nfunction mergeS(rects,l,r){\n\n    if( l>=r ) return;\n    let m = l+ (r-l)/2;\n    m = Math.floor(m);\n   // console.log(\"iiiiiiiiiiiiiiiiiiiiiiiii \",m);\n    mergeS(rects,l,m);\n    mergeS(rects,m+1,r);\n    merge(rects,l,m,r);\n    let rectsCopy = rects.slice(l,r+1);\n    let value = {\n        left:l,\n        right:r,\n        mid:m,\n        val:rectsCopy\n    }\n    values.push(value);\n}","let values = [];\nexport default function HeapSort(rects2){\n    let rects = rects2.slice();\n    values = [];\n    let sz = rects2.length;\n   // sz = sz-1;\n    heapSort(rects,sz);\n    return values;\n}\nfunction heapify(rects,n,i){\n    let largest = i; // Initialize largest as root\n    let l = 2 * i + 1; // left = 2*i + 1\n    let r = 2 * i + 2; // right = 2*i + 2\n\n    // If left child is larger than root\n    if (l < n && rects[l].width > rects[largest].width)\n        largest = l;\n\n    // If right child is larger than largest so far\n    if (r < n && rects[r].width > rects[largest].width)\n        largest = r;\n\n    // If largest is not root\n    if (largest !== i) {\n        let temp = rects[i];\n        rects[i] = rects[largest];\n        rects[largest] = temp;\n        let value = {\n            left:i,\n            right:largest,\n            sorted: false\n        }\n        values.push(value);\n        // Recursively heapify the affected sub-tree\n        heapify(rects, n, largest);\n    }\n}\nfunction heapSort(rects,n){\n    for(let i = Math.floor(n/2)-1;i>=0;i--){\n      //  console.log(\"heap \",n,\" \",i);\n        heapify(rects,n,i);\n    }\n    for (let i = n-1 ; i > 0; i--) {\n        // Move current root to end\n        let temp = rects[i];\n        rects[i] = rects[0];\n        rects[0] = temp;\n        let value = {\n            left:i,\n            right:0,\n            sorted:true\n        }\n        values.push(value);\n        // call max heapify on the reduced heap\n        heapify(rects, i, 0);\n    }\n}\n","let values = [];\n\nexport function quickSortRecursive(rects2){\n    let rects = rects2.slice();\n    values = [];\n    let sz = rects2.length;\n    // console.log( \"fdsfsd\",sz );\n    sz = sz-1;\n    quick(rects,0,sz);\n    return values;\n}\n\n\nfunction getPartition(rects, left, right){\n    values.push({\n        left,\n        right,\n        swap:false,\n        changedRange:true,\n    })\n    let pivot = rects[right].width\n    let it = left-1;\n    for(var j=left;j<=right-1;j++){\n        if( rects[j].width< pivot){\n            it++;\n            if( it!==j ){\n                // swap(rects[it],rects[j];\n                const rect1 = {...rects[it]};\n                const rect2 = {...rects[j]};\n                rects[it] = rect2;\n                rects[j] = rect1;\n                values.push({\n                    left:it,\n                    right:j,\n                    swap:true,\n                    changedRange:false,\n                })\n            }\n        }\n    }\n    if( it+1!==right ){\n        const rect1 = {...rects[it+1]};\n        const rect2 = {...rects[right]};\n        rects[it+1] = rect2;\n        rects[right] = rect1;\n        values.push({\n            left:it+1,\n            right:right,\n            swap:true,\n            changedRange:false,\n        })\n    }\n    return it+1;\n}\nfunction quick(rects,left,right){\n    if( left>=right ) return ;\n    const partition = getPartition(rects,left,right);\n    quick(rects,left,partition-1);\n    quick(rects,partition+1,right);\n}","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <span className=\"navbar-brand\">Recursive Sorting Visualizer</span>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\n                    <Link to={\"/\"}>\n                            <span style={{color:\"white\"}}>\n                                Home\n                            </span>\n                    </Link>\n                </div>\n\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 200,\n    },\n});\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\n\nexport default function DiscreteSlider(props) {\n    const classes = useStyles();\n    const handleChange = (event) =>{\n        if( event.target.innerText === \"\" ){\n            return;\n        }\n        const num = parseInt(event.target.innerText,10);\n        props.onCountChange(num);\n    }\n    return (\n        <div className={classes.root+\" ml-2 mr-2\"}>\n\n            <Slider\n                defaultValue={props.default}\n                getAriaValueText={valuetext}\n                aria-labelledby=\"discrete-slider\"\n                valueLabelDisplay=\"auto\"\n                onChangeCommitted={handleChange}\n                step={props.step}\n               // marks={props.marks}\n                min={props.min}\n                max={props.max}\n                disabled={props.disable}\n            />\n            <Typography id=\"discrete-slider\" gutterBottom>\n                {props.title}\n            </Typography>\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nconst SimpleSelect = (props) => {\n    const classes = useStyles();\n    const [age, setAge] = React.useState('0');\n    const [state] = React.useState({\n        pos: props.pos,\n    });\n    const handleChange = (event) => {\n        console.log(state.pos);\n        setAge(event.target.value);\n        props.onAlgoChanged(state.pos,event.target.value);\n    };\n\n    return (\n        <div className=\"ml-2 mr-2\">\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-label\">Algorithm</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={age}\n                    onChange={handleChange}\n                >\n                    <MenuItem value={0} style={{selected:true}} >Merge Sort</MenuItem>\n                    <MenuItem value={1} style={{selected:true}} >Heap Sort</MenuItem>\n                    <MenuItem value={2} style={{selected:true}} >Quick Sort</MenuItem>\n                </Select>\n            </FormControl>\n        </div>\n    );\n}\n\nexport default SimpleSelect;","import React from 'react';\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 200,\n    },\n});\n\n\nconst CSlider = withStyles({\n    root: {\n       // color: \"#ffffff\",\n        height: 3,\n        padding: \"13px 0\",\n    },\n    track: {\n        height: 4,\n        borderRadius: 2,\n    },\n    thumb: {\n        backgroundColor: \"#fff\",\n        //color: \"#fff\",\n    },\n})(Slider);\n\nfunction valuetext(value) {\n    return `${value}`;\n}\n\n\n\nexport default function RangeSlider(props) {\n    const classes = useStyles();\n    const [value, setValue] = React.useState([20, 37]);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n\n    };\n    const handleCommit = (event, newValue) => {\n        console.log(newValue);\n    };\n\n    return (\n        <div className={classes.root}>\n            <CSlider\n                disabled={props.disable}\n                value={value}\n                onChange={handleChange}\n                onChangeCommitted={handleCommit}\n                valueLabelDisplay=\"auto\"\n                aria-labelledby=\"range-slider\"\n                getAriaValueText={valuetext}\n            />\n            <Typography id=\"range-slider\" gutterBottom>\n                Value range\n            </Typography>\n        </div>\n    );\n}\n","import React, {Component} from 'react';\nimport DiscreteSlider from \"./slider\";\nimport SimpleSelect from \"./simpleSelect\";\nimport RangeSlider from \"./doubleSlider\";\n\n\nclass Menu extends Component {\n    render() {\n        return (\n            <nav className=\"nav alert-dark\">\n                <button\n                    className='btn btn-secondary m-2'\n                    onClick={this.props.onRandomize}\n                    disabled={this.props.disable}\n                    style={this.isClickable()}\n                >\n                    Randomize\n                </button>\n\n                <RangeSlider\n                    disable={this.props.disable}\n                />\n                <DiscreteSlider\n                    default={20}\n                    min={10}\n                    max={100}\n                    step={10}\n                    title=\"Numbers\"\n                    onCountChange={this.props.onCountChange}\n                    disable={this.props.disable}\n                />\n                <DiscreteSlider\n                    default={50}\n                    min={10}\n                    max={100}\n                    step={1}\n                    title=\"Speed\"\n                    onCountChange={this.props.onSpeedChange}\n                    disable={false}\n                />\n                <SimpleSelect\n                    pos={0}\n                    onAlgoChanged={this.props.onAlgoChanged}\n                />\n                <button\n                    className='btn btn-warning btn-lg '\n                    onClick={this.props.onViusalize}\n                    disabled={this.props.disable}\n                    style={this.isClickable()}\n                >\n                    Visualize\n                </button>\n\n            </nav>\n        );\n    }\n    isClickable = () =>{\n        if( this.props.disable ){\n            return {cursor: \"not-allowed\"};\n        } else{\n            return {};\n        }\n    }\n}\n\n\nexport default Menu;","import React, {Component} from 'react';\nimport Rects from \"./rects\";\nimport mergeSort from '../algorithms/mergeSort';\nimport heapSort from \"../algorithms/heapSort\";\nimport {quickSortRecursive} from \"../algorithms/quickSortRecursive\";\nimport Navbar from \"./navbar\";\nimport Menu from \"./menu\";\n\nclass RecursiveSort extends Component {\n    state = {\n        count: 20,\n        rects: [],\n        speed: 50,\n        isRunning: false,\n        algo: 0\n    }\n\n\n    componentDidMount() {\n        var rects = getInitialRects(this.state.count);\n        this.setState({rects});\n        /* var rects2 = rects.slice();\n         console.log(rects2);\n         rects = mergeSort(rects);\n         console.log(rects);*/\n\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Navbar/>\n                <Menu\n                    disable={this.state.isRunning}\n                    onViusalize={this.handleSort}\n                    onRandomize={this.handleRandomize}\n                    onRefresh={this.handleRefresh}\n                    onCountChange={this.handleCountChange}\n                    onAlgoChanged={this.handleAlgoChanged}\n                    onSpeedChange={this.handleSpeedChanged}\n                />\n                <div className=' justify-content-center'>\n                    <Rects\n                        rects={this.state.rects}\n                    />\n\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    handleRandomize = () => {\n        const rect = getInitialRects(this.state.count);\n        this.setState({rects: rect});\n    }\n    handleRefresh = () => {\n        const rects = this.state.rects;\n        for (let i = 0; i < rects.length; i++) {\n            const rect = {...rects[i], isSorted: false, isSorting: false}\n            rects[i] = rect;\n        }\n        this.setState({rects});\n    }\n    handleCountChange = (val) => {\n        this.setState({count: val});\n        this.handleRandomize();\n    }\n    handleAlgoChanged = (pos, val) => {\n        if (pos === 0) {\n            // console.log(\"sup 0\");\n            this.setState({algo: val});\n        }\n    }\n    handleSpeedChanged = (val) => {\n        const speed = (110 - val);\n        this.setState({speed});\n    }\n\n    handleSort = () => {\n\n        this.setState({isRunning: true});\n        let steps;\n        let rects2;\n        switch (this.state.algo) {\n\n            case 0:\n                steps = mergeSort(this.state.rects);\n                this.handleMerge(steps);\n                break;\n            case 1:\n                rects2 = this.state.rects.slice();\n                steps = heapSort(rects2);\n                this.handleHeap(steps);\n                break;\n            case 2:\n                rects2 = this.state.rects.slice();\n                steps = quickSortRecursive(rects2);\n                this.handleQuick(steps);\n                break;\n            default:\n        }\n\n\n    }\n\n    handleQuick = async (steps) =>{\n        this.setState({isRunning: true});\n        let prevRect = this.state.rects;\n        for (let j = 0; j < this.state.count; j++) {\n            prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isRange:false,isSorted: false};\n        }\n        this.setState({rects: prevRect});\n        let hasChanged = -1;\n        let changed;\n        for(let i=0;i<steps.length;i++){\n            let step = steps[i];\n            if( hasChanged!==-1 ){\n                let {left,right} = changed;\n                prevRect[left] = {...prevRect[left], isLeft: false,isSorting: false,isRight:false,isRange:false};\n                prevRect[right] = {...prevRect[right], isLeft: false,isSorting: false,isRight:false,isRange:false};\n            }\n            if( step.changedRange ){\n                await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);\n                let {left,right} = step;\n                for (let j = 0; j < this.state.count; j++) {\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isRange:false};\n                }\n                for (let j = left; j <=right; j++) {\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:true,isRange:true};\n                }\n                this.setState({rects: prevRect});\n                await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);\n                for (let j = 0; j < this.state.count; j++) {\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false};\n                }\n            }else if(step.swap){\n                let {left,right} = step;\n                prevRect[left] = {...prevRect[left], isLeft: false,isSorting: true,isRight:false,isRange:false};\n                prevRect[right] = {...prevRect[right], isLeft: true,isSorting: false,isRight:false,isRange:false};\n                let temp = prevRect[left];\n                prevRect[left] = prevRect[right];\n                prevRect[right] = temp;\n                hasChanged = 1;\n                changed = step;\n            }\n            this.setState({rects: prevRect});\n            await sleep(this.state.speed);\n            if (i === steps.length - 1) {\n                for (let j = 0; j < this.state.count; j++) {\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isSorted: false,isRange:false};\n                }\n                this.setState({rects: prevRect});\n                for (let j = 0; j < this.state.count; j++) {\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isSorted: true,isRange:false};\n                    this.setState({rects: prevRect});\n                    await sleep(10);\n                }\n                this.setState({isRunning: false,rects: prevRect});\n            }\n        }\n    }\n    handleHeap = async (steps) =>{\n        this.setState({isRunning: true});\n        let prevRect = this.state.rects;\n        for (let j = 0; j < this.state.count; j++) {\n            prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isRange:false,isSorted: false};\n        }\n        this.setState({rects: prevRect});\n\n        for(let i = 0;i<steps.length;i++){\n            let step = steps[i];\n            //   console.log(step);\n            for (let i = 0; i < this.state.count; i++) {\n                prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false};\n            }\n            let {left,right,sorted} = step;\n            prevRect[left] = {...prevRect[left],isLeft:true};\n            prevRect[right] = {...prevRect[right],isRight:true};\n            this.setState({rects: prevRect});\n            await sleep(this.state.speed);\n            let temp = prevRect[left];\n            prevRect[left] = prevRect[right];\n            prevRect[right] = temp;\n            this.setState({rects: prevRect});\n            if( sorted ) prevRect[left] = {...prevRect[left],isSorted: true};\n            await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);\n            if (i === steps.length - 1) {\n\n                for (let i = 0; i < this.state.count; i++) {\n                    prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false,isSorted: true};\n                    this.setState({rects: prevRect});\n                    await sleep(this.state.speed);\n                }\n                this.setState({isRunning: false,rects: prevRect});\n            }\n        }\n    }\n    handleMerge = async (steps) => {\n        this.setState({isRunning1: true});\n\n\n        let prevRect = this.state.rects;\n        for (let j = 0; j < this.state.count; j++) {\n            prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isRange:false,isSorted: false};\n        }\n        this.setState({rects: prevRect});\n        await sleep(this.state.speed);\n      //  console.log(\"steps \", steps.length);\n        for (let ii = 0; ii < steps.length; ii++) {\n            let step = steps[ii];\n            for (let i = 0; i < this.state.count; i++) {\n                prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false};\n            }\n           // console.log(step.left,\" \",step.mid,\" \",step.right);\n            for (let i = step.left; i <= step.mid; i++) {\n                prevRect[i] = {...prevRect[i], isLeft: true,isSorting: false};\n            }\n            for (let i = step.mid + 1; i <= step.right; i++) {\n                prevRect[i] = {...prevRect[i], isRight: true,isLeft:false,isSorting: false};\n            }\n            this.setState({rects: prevRect});\n            await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);\n          //  console.log(step);\n            for(let i= step.left;i<=step.right;i++){\n                prevRect[i] = {...prevRect[i],width:step.val[i-step.left].width,isSorting: true };\n                this.setState({rects: prevRect});\n                await sleep(this.state.speed);\n            }\n\n            if (ii === steps.length - 1) {\n\n                for (let i = 0; i < this.state.count; i++) {\n                    prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false,isSorted: true};\n                    this.setState({rects: prevRect});\n                    await sleep(this.state.speed);\n                }\n                this.setState({isRunning: false});\n            }\n\n            this.setState({rects: prevRect});\n            await sleep(this.state.speed);\n            prevRect = this.state.rects;\n          /*  for (let i = 0; i < this.state.count; i++) {\n                prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false,isSorted: false};\n            }*/\n            this.setState({rects: prevRect});\n        }\n    }\n\n}\n\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nconst getInitialRects = (tot) => {\n    const rects = [];\n    for (let i = 0; i < tot; i++) {\n        rects.push(getRect());\n    }\n    return rects;\n}\nconst getRect = () => {\n    return {\n        width: Math.floor(Math.random() * 200) + 50,\n        isSorted: false,\n        isSorting: false,\n        isLeft: false,\n        isRight: false\n    }\n}\n\nexport default RecursiveSort;","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <span className=\"navbar-brand\">15 Puzzle Game</span>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\n                    <Link to={\"/\"}>\n                        <span style={{color:\"white\"}}>\n                            Home\n                        </span>\n                    </Link>\n                </div>\n\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React, {Component} from 'react';\nimport Navbar from \"./navbar\";\nimport FlipMove from 'react-flip-move';\nimport '../helpers/array_helpers';\nimport './style.css';\nimport {times} from 'lodash';\n\nconst FLIP_DURATION = 750;\n\nclass Puzzle extends Component {\n    constructor() {\n        super();\n        this.state = {\n            squares: times(16, i => ({\n                value: i\n            })),\n        };\n    }\n\n    balsal = async () => {\n        for (let i = 0; i < 15; i++) {\n            this.setState({\n                squares: this.state.squares.slice().swap(i, i + 1)\n            });\n            await sleep(500);\n        }\n\n    }\n\n    render() {\n        return (\n\n            <div style={{backgroundColor: \"#57407c\"}}\n                 className={'full-height'}\n            >\n                <Navbar/>\n                <div className={'justify-content-around '}\n                     style={{textAlign: \"Center\"}}>\n                    <div style={{textAlign: \"center\", height: \"440px\", width: \"440px\", margin: 'auto'}}\n                         className={\"m-5\"}>\n                        <FlipMove\n                            duration={FLIP_DURATION}\n                            easing=\"cubic-bezier(.12,.36,.14,1.2)\"\n                        >\n                            {this.state.squares.map((stt) =>\n                                <div key={stt.value}\n                                     className={stt.value === 0 ? \"square \" : stt.value % 2 === 0 ? 'square shadow correct pt-1' : 'square shadow painted pt-1'}\n                                >\n                                    {stt.value === 0 ? \"\" : stt.value}\n                                </div>\n                            )}\n                            <br/>\n                        </FlipMove>\n                        <button className={\"btn btn-secondary\"} onClick={this.balsal}>Animate</button>\n                    </div>\n\n                    {/*<FlipMove*/}\n                    {/*    duration={FLIP_DURATION}*/}\n                    {/*          easing=\"cubic-bezier(.12,.36,.14,1.2)\" >*/}\n                    {/*    <line key={5464} style={{strokeWidth: \"3px\", stroke: '#999'}} x2={299} y2={186}*/}\n                    {/*          x1={(this.state.squares[0].value + 1) * 50}*/}\n                    {/*          y1={(this.state.squares[0].value + 1) * 50}></line>*/}\n                    {/*    <div key={this.state.squares[0].value}*/}\n                    {/*         className={'square shadow correct pt-1'}>*/}\n                    {/*        {this.state.squares[0].value}*/}\n                    {/*    </div>*/}\n                    {/*    <div key={this.state.squares[1].value}*/}\n                    {/*         className={'square shadow correct pt-1'}>*/}\n                    {/*        {this.state.squares[1].value}*/}\n                    {/*    </div>*/}\n                    {/*</FlipMove>*/}\n                    {/*/!*<SvgLines animate={true} duration={1000}>*!/*/}\n                    {/*/!*    <svg viewBox=\"0 0 960 500\">*!/*/}\n                    {/*/!*        <line key={5464} style={{strokeWidth: \"3px\", stroke: '#999'}} x2={299} y2={186}*!/*/}\n                    {/*/!*              x1={(this.state.squares[0].value + 1) * 50}*!/*/}\n                    {/*/!*              y1={(this.state.squares[0].value + 1) * 50}></line>*!/*/}\n                    {/*/!*    </svg>*!/*/}\n                    {/*/!*</SvgLines>*!/*/}\n                </div>\n\n            </div>\n\n        );\n    }\n}\n\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport default Puzzle;","import React, {Component} from 'react';\nimport './cell.css';\nclass Cell extends Component {\n    render() {\n        return (\n            <div className={'turing-cell'}>\n                {this.props.val}\n            </div>\n        );\n    }\n}\n\nexport default Cell;","import React, {Component} from 'react';\nimport Cell from \"./cell\";\nimport FlipMove from 'react-flip-move';\n\nclass Ribbon extends Component {\n    render() {\n       // console.log('this.props');\n       // console.log(this.props);\n        return (\n            <div>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\n                     className=\"bi bi-caret-down-fill\" viewBox=\"0 0 16 16\">\n                    <path\n                        d=\"M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z\"/>\n                </svg>\n                <FlipMove\n                    className=\"d-flex justify-content-center align-items-end\"\n                    duration={100}\n                    // easing=\"cubic-bezier(.12,.36,.14,1.2)\"\n                >\n                    {this.props.strip\n                        .filter(cell => cell.id >= this.props.cellStart && cell.id <= this.props.cellEnd)\n                        .map((cell, cellidx) => {\n                            return (\n                                <Cell\n                                    key={cell.id}\n                                    id={cell.id+50}\n                                    val={cell.val}\n                                />\n                            );\n                        })}\n                </FlipMove>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\n                     className=\"bi bi-caret-up-fill\" viewBox=\"0 0 16 16\">\n                    <path\n                        d=\"m7.247 4.86-4.796 5.481c-.566.647-.106 1.659.753 1.659h9.592a1 1 0 0 0 .753-1.659l-4.796-5.48a1 1 0 0 0-1.506 0z\"/>\n                </svg>\n            </div>\n        );\n    }\n}\n\nexport default Ribbon;","let Steps = [];\nlet Maps = [];\nlet invertBitSteps = [\n    ['q0','0','q0','1','R'],\n    ['q0','1','q0','0','R'],\n    ['q0','B','qe','B','R']\n];\nconst inverBitMap = new Map();\nfor(let i=0;i<invertBitSteps.length;i++){\n    inverBitMap.set( invertBitSteps[i][0]+\",\"+invertBitSteps[i][1],[invertBitSteps[i][2],invertBitSteps[i][3],invertBitSteps[i][4],i]  );\n}\nSteps.push(invertBitSteps);\nMaps.push(inverBitMap);\n\nlet addOneSteps = [\n    ['q0','0','q0','0','R'],\n    ['q0','1','q0','1','R'],\n    ['q0','B','q1','B','L'],\n    ['q1','0','qe','1','R'],\n    ['q1','1','q1','0','L'],\n    ['q1','B','qe','1','R']\n]\nconst addOneMap = new Map();\nfor(let i=0;i<addOneSteps.length;i++){\n    addOneMap.set( addOneSteps[i][0]+\",\"+addOneSteps[i][1],[addOneSteps[i][2],addOneSteps[i][3],addOneSteps[i][4],i]  );\n}\nSteps.push(addOneSteps);\nMaps.push(addOneMap);\n\n\nlet twosComplimentSteps = [\n    ['q0','0','q0','0','R'],\n    ['q0','1','q0','1','R'],\n    ['q0','B','q1','B','L'],\n    ['q1','0','q1','0','L'],\n    ['q1','B','qe','B','L'],\n    ['q1','1','q2','1','L'],\n    ['q2','0','q2','1','L'],\n    ['q2','1','q2','0','L'],\n    ['q2','B','qe','B','L']\n]\n\nconst twosComplimentMap = new Map();\nfor(let i=0;i<twosComplimentSteps.length;i++){\n    twosComplimentMap.set( twosComplimentSteps[i][0]+\",\"+twosComplimentSteps[i][1],[twosComplimentSteps[i][2],twosComplimentSteps[i][3],twosComplimentSteps[i][4],i]  );\n}\nSteps.push(twosComplimentSteps);\nMaps.push(twosComplimentMap);\n\nexport function getNextStep(state, read, algo=0){\n    if( !Maps[algo].get(state+\",\"+read) ) return ['qe','B','R'];\n    return Maps[algo].get(state+\",\"+read);\n}\n\nexport function getTable(algo){\n    return Steps[algo];\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nconst SimpleSelect = (props) => {\n    const classes = useStyles();\n    const [age, setAge] = React.useState('0');\n    const [state] = React.useState({\n        pos: props.pos,\n    });\n    const handleChange = (event) => {\n        console.log(state.pos);\n        setAge(event.target.value);\n        props.onAlgoChanged(state.pos,event.target.value);\n    };\n\n    return (\n        <div className=\"ml-2 mr-2\">\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-label\">Task</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={age}\n                    onChange={handleChange}\n                >\n                    <MenuItem value={0} style={{selected:true}} >Bitwise NOT</MenuItem>\n                    <MenuItem value={1} style={{selected:true}} >Add One</MenuItem>\n                    <MenuItem value={2} style={{selected:true}} >2's Compliment</MenuItem>\n                    {/*<MenuItem value={3} style={{selected:true}} >Bitwise AND</MenuItem>*/}\n                    {/*<MenuItem value={4} style={{selected:true}} >Bitwise OR</MenuItem>*/}\n                </Select>\n            </FormControl>\n        </div>\n    );\n}\n\nexport default SimpleSelect;","import React, {Component} from 'react';\nimport SimpleSelect from \"./simpleSelect\";\n\n\nclass Menu extends Component {\n    render() {\n        return (\n            <nav className=\"nav alert-dark\">\n\n\n                {/*<DiscreteSlider*/}\n                {/*    default={50}*/}\n                {/*    min={10}*/}\n                {/*    max={100}*/}\n                {/*    step={1}*/}\n                {/*    title=\"Speed\"*/}\n                {/*    onCountChange={this.props.onSpeedChange}*/}\n                {/*    disable={false}*/}\n                {/*/>*/}\n                <SimpleSelect\n                    pos={0}\n                    onAlgoChanged={this.props.onAlgoChanged}\n                />\n\n\n                    <div className=\"input-group mt-2 col-3\">\n                        <input type=\"text\" id='inputText1' className=\"form-control\" placeholder=\"Input Binary\"\n                               aria-label=\"Username\"\n                               aria-describedby=\"basic-addon1\"\n                               onChange={this.props.setInput1}\n                        />\n                    </div>\n                    <div className=\"input-group mt-2 col-3\">\n                        <input type=\"text\" id='inputText1' className=\"form-control\" placeholder=\"Input Binary 2\"\n                               aria-label=\"Username\"\n                               aria-describedby=\"basic-addon1\"\n                               onChange={this.props.setInput2}\n                        />\n                    </div>\n\n\n                <button\n                    className='btn btn-warning btn-lg m-2'\n                    onClick={this.props.onReset}\n                    disabled={this.props.disable}\n                >Reset</button>\n\n                <button\n                    className='btn btn-warning btn-lg '\n                    onClick={this.props.visualize}\n                    disabled={this.props.disable}\n                >Visualize</button>\n\n            </nav>\n    );\n    }\n    isClickable = () =>\n        {\n            if (this.props.disable) {\n                return {cursor: \"not-allowed\"};\n            } else {\n                return {};\n            }\n        }\n    }\n\n\n    export default Menu;","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <span className=\"navbar-brand\">Turing Machine</span>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\n                    <Link to={\"/\"}>\n                            <span style={{color:\"white\"}}>\n                                Home\n                            </span>\n                    </Link>\n                </div>\n\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React, {Component} from 'react';\n\nclass Table extends Component {\n    render() {\n        console.log(this.props.data)\n        return (\n            <div>\n                <table className=\"table table-bordered\">\n                    <thead>\n                    <tr>\n                        <th scope=\"col\">State</th>\n                        <th scope=\"col\">Input</th>\n                        <th scope=\"col\">Next</th>\n                        <th scope=\"col\">Output</th>\n                        <th scope=\"col\">Direction</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.props.data.map( (row,rowidx)=>{\n                        return (\n                            <tr  className={ rowidx===this.props.state && 'table-primary' }>\n                                <th scope=\"row\">{row[0]}</th>\n                                <th>{row[1]}</th>\n                                <td>{row[2]}</td>\n                                <td>{row[3]}</td>\n                                <td>{row[4]}</td>\n                            </tr>\n                        );\n                    } )}\n                    {/*<tr>*/}\n                    {/*    <th scope=\"row\">1</th>*/}\n                    {/*    <td>Mark</td>*/}\n                    {/*    <td>Otto</td>*/}\n                    {/*    <td>@mdo</td>*/}\n                    {/*</tr>*/}\n                    {/*<tr>*/}\n                    {/*    <th scope=\"row\">2</th>*/}\n                    {/*    <td>Jacob</td>*/}\n                    {/*    <td>Thornton</td>*/}\n                    {/*    <td>@fat</td>*/}\n                    {/*</tr>*/}\n                    {/*<tr>*/}\n                    {/*    <th scope=\"row\">3</th>*/}\n                    {/*    <td colSpan=\"2\">Larry the Bird</td>*/}\n                    {/*    <td>@twitter</td>*/}\n                    {/*</tr>*/}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default Table;","import React, {Component} from 'react';\nimport Ribbon from \"./ribbon\";\n\nimport {getNextStep, getTable} from '../algorithms/turing';\nimport Menu from \"./menu\";\nimport Navbar from \"./navbar\";\nimport Table from \"./table\";\n\nclass TuringMachine extends Component {\n    constructor() {\n        super();\n        this.state = {\n            cellCount: 0,\n            cellStart: 0,\n            cellEnd: 0,\n            midCell: 0,\n            strip: [],\n            inputString1: \"\",\n            inputString2: \"\",\n            table: [],\n            algo: 0,\n            state: -1\n        }\n    }\n\n    componentDidMount() {\n        getNextStep('100');\n        this.handleReset();\n\n\n    }\n\n    handleLeftShift = () => {\n        this.setState({\n            cellStart: this.state.cellStart + 1,\n            cellEnd: this.state.cellEnd + 1,\n            midCell: this.state.midCell + 1\n        });\n    }\n    handleRightShift = () => {\n        // console.log('aaaaaaa')\n        this.setState({\n            cellStart: this.state.cellStart - 1,\n            cellEnd: this.state.cellEnd - 1,\n            midCell: this.state.midCell - 1\n        });\n    }\n\n    handleSet = () => {\n        this.handleReset();\n        let string = this.state.inputString1;\n        let strip = [...this.state.strip];\n        for (let i = 0; i < string.length; i++) {\n            strip[50 + i] = {\n                ...strip[50 + i],\n                val: string[i]\n            }\n        }\n        this.setState({strip});\n    }\n    handleReset = () => {\n        const width = window.innerWidth;\n        let cellCount = Math.floor(width / 50);\n        if (cellCount % 2 === 0) cellCount--;\n        let strip = [...this.state.strip];\n        if (strip.length === 0) strip = getInitialGrid(cellCount);\n        for (let i = 0; i < strip.length; i++)\n            strip[i].val = 'B';\n\n        this.setState({strip, midCell: 50});\n        let cellStart, cellEnd;\n        cellStart = 50 + (1 - cellCount) / 2;\n        cellEnd = 50 + (cellCount - 1) / 2;\n        this.setState({cellStart, cellEnd,state:-1});\n    }\n\n    handleStart = () => {\n        // this.handleReset();\n        this.handleSet();\n        this.handleAlgo();\n    }\n\n    handleAlgo = async () => {\n        await sleep(500);\n        let state = 'q0';\n\n        while (state !== 'qe') {\n\n            let read = this.state.strip[this.state.midCell].val;\n            read = read.toString();\n            let [nextState, write, dir, rowIdx] = getNextStep(state, read, this.state.algo);\n            this.setState({state: rowIdx});\n            let strip = [...this.state.strip];\n            strip[this.state.midCell].val = write;\n            document.getElementById('stepsText').innerText = 'Reads ' + read + ' on strip';\n            // await sleep(500);\n\n            await sleep(1000);\n\n            document.getElementById('stepsText').innerText = 'writes ' + write + ' on strip';\n\n            this.setState({strip});\n            await sleep(500);\n            if (dir === 'R') this.handleLeftShift();\n            else this.handleRightShift();\n\n            state = nextState;\n        }\n    }\n\n    setInput1 = (event) => {\n        let input = event.target.value;\n        const filtered = [...input].filter((item) => item === \"0\" || item === \"1\").slice(0, 8).join(\"\");\n        this.setState({inputString1: filtered});\n    }\n    setInput2 = (event) => {\n        let input = event.target.value;\n        const filtered = [...input].filter((item) => item === \"0\" || item === \"1\").slice(0, 8).join(\"\");\n        this.setState({inputString2: filtered});\n    }\n    setAlgo = (pos, val) => {\n        if (pos === 0) {\n            // console.log(\"sup 0\");\n            this.setState({algo: val});\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar/>\n                <Menu\n                    visualize={this.handleStart}\n                    onAlgoChanged={this.setAlgo}\n                    onReset={this.handleReset}\n                    setInput1={this.setInput1}\n                    setInput2={this.setInput2}\n                />\n\n                {/*<div className='row'>*/}\n                {/*    <div className=\"input-group mt-2 col-3\">*/}\n                {/*        <input type=\"text\" id='inputText1' className=\"form-control\" placeholder=\"Input Binary\"*/}\n                {/*               aria-label=\"Username\"*/}\n                {/*               aria-describedby=\"basic-addon1\"*/}\n                {/*               onChange={this.setInput1}*/}\n                {/*        />*/}\n                {/*    </div>*/}\n                {/*    <div className=\"input-group mt-2 col-3\">*/}\n                {/*        <input type=\"text\" id='inputText1' className=\"form-control\" placeholder=\"Input Binary 2\"*/}\n                {/*               aria-label=\"Username\"*/}\n                {/*               aria-describedby=\"basic-addon1\"/>*/}\n                {/*    </div>*/}\n                {/*</div>*/}\n\n                <center>\n                    <br/>\n                    <div className='bg-info'>\n                        {/*<h3>Turing Machine</h3>*/}\n                        <Ribbon\n                            strip={this.state.strip}\n                            midCell={this.state.midCell}\n                            cellCount={this.state.cellCount}\n                            cellStart={this.state.cellStart}\n                            cellEnd={this.state.cellEnd}\n                        ></Ribbon>\n                        <button\n                            className='btn btn-warning m-3'\n                            onClick={this.handleLeftShift}\n                        >\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\n                                 className=\"bi bi-caret-left-square-fill\" viewBox=\"0 0 16 16\">\n                                <path\n                                    d=\"M0 2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2zm10.5 10V4a.5.5 0 0 0-.832-.374l-4.5 4a.5.5 0 0 0 0 .748l4.5 4A.5.5 0 0 0 10.5 12z\"/>\n                            </svg>\n                        </button>\n                        <button\n                            className='btn btn-warning m-3'\n                            onClick={this.handleRightShift}\n                        >\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\n                                 className=\"bi bi-caret-right-square-fill\" viewBox=\"0 0 16 16\">\n                                <path\n                                    d=\"M0 2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2zm5.5 10a.5.5 0 0 0 .832.374l4.5-4a.5.5 0 0 0 0-.748l-4.5-4A.5.5 0 0 0 5.5 4v8z\"/>\n                            </svg>\n\n                        </button>\n                    </div>\n                    <br/>\n\n                    <div className='row'>\n                        <div className='col-4'>\n                            <Table\n                                data={getTable(this.state.algo)}\n                                state={this.state.state}\n                            />\n                        </div>\n                        <div className='col-4'>\n                            <span className='bg-light p-2 font-weight-bold text-lg-center rounded-3' id='stepsText'>\n                                 Details goes here\n                            </span>\n                        </div>\n                        <div className='col-4'>\n                            {/*<textarea disabled className=\"form-control\" id=\"Textarea1\" rows=\"3\">*/}\n\n                            {/*</textarea>*/}\n                        </div>\n                    </div>\n                </center>\n            </div>\n        );\n    }\n}\n\nconst getInitialGrid = () => {\n    const strip = [];\n    for (let cell = 0; cell <= 100; cell++) {\n        let currentCell = {\n            id: cell,\n            val: 'B'\n        }\n        strip.push(currentCell);\n    }\n    return strip;\n}\n\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport default TuringMachine;","import React, {Component} from 'react';\n\nclass Vertex extends Component {\n\n    componentDidMount() {\n        if( this.props.id === 0 ) return;\n        // document.getElementById('ranim'+this.props.id).beginElement();\n        document.getElementById('cxanim'+this.props.id).beginElement();\n        document.getElementById('cyanim'+this.props.id).beginElement();\n        document.getElementById('tanim'+this.props.id).beginElement();\n    }\n    render() {\n\n        return (\n            <g>\n                <circle\n                    cx={this.props.pos.x}\n                    cy={this.props.pos.y}\n                    r={6}\n                    // ry={3}\n                    stroke=\"black\" stroke-width=\"0.5\" fill={this.props.current?'cyan':'white'}\n                >\n                    <animate\n                        id={'cxanim'+this.props.id}\n                        attributeName='cx'\n                        values={this.props.pos.px+\";\"+this.props.pos.x}\n                        dur='0.5s'\n                        repeatCount=\"1\"\n                    />\n                    <animate\n                        id={'cyanim'+this.props.id}\n                        attributeName='cy'\n                        values={this.props.pos.py+\";\"+this.props.pos.y}\n                        dur='0.5s'\n                        repeatCount=\"1\"\n                    />\n                    {/*<animate*/}\n                    {/*    id={'ranim'+this.props.id}*/}\n                    {/*    attributeName='rx'*/}\n                    {/*    values='0;3'*/}\n                    {/*    dur='0.5s'*/}\n                    {/*    repeatCount=\"1\"*/}\n                    {/*/>*/}\n                    {/*<animate*/}\n                    {/*    id={'vbanim'}*/}\n                    {/*    attributeName='cx'*/}\n                    {/*    values={(this.state.poss.x-50)+';'+this.state.poss.x}*/}\n                    {/*    dur='2s'*/}\n                    {/*    repeatCount=\"1\"*/}\n                    {/*/>*/}\n                </circle>\n                <text\n                    style={{font:'3px sans-serif'}}\n                    x={this.props.pos.x}\n                    y={this.props.pos.y-4}\n                    textAnchor={'middle'}\n                    // alignmentBaseline={'top'}\n                >\n                    <animate\n                        id={'tanim'+this.props.id}\n                        attributeName='opacity'\n                        values='0;0;1'\n                        dur='1s'\n                        repeatCount=\"1\"\n                    />\n                    <tspan x={this.props.pos.x} dy='1.2em' >N:{this.props.label}</tspan>\n                    <tspan  x={this.props.pos.x} dy='1.2em'>R:{this.props.ret}</tspan>\n                </text>\n\n            </g>\n        );\n    }\n}\n\n\nexport default Vertex;","import React, {Component} from 'react';\n\nclass Edge extends Component {\n    constructor() {\n        super();\n        this.state={\n            x1:0\n        }\n    }\n    componentDidMount() {\n        this.setState({x1:this.props.pos.x1});\n        document.getElementById('vbanim1'+this.props.id).beginElement();\n        document.getElementById('vbanim2'+this.props.id).beginElement();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.state.x1 !== this.props.pos.x1) {\n            this.setState({x1:this.props.pos.x1});\n            document.getElementById('vbanim1'+this.props.id).beginElement();\n            document.getElementById('vbanim2'+this.props.id).beginElement();\n        }\n    }\n    getPolyPoints = ()=>{\n        let x1 = this.props.pos.x1;\n        let y1 = this.props.pos.y1;\n        let x2 = this.props.pos.x2;\n        let y2 = this.props.pos.y2;\n        let l = Math.sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));\n        let r = 6.5;\n        let xx1 = ( x1*(l-r)+x2*r )/l;\n        let yy1 = ( y1*(l-r)+y2*r )/l;\n        return xx1+\",\"+yy1+\" \"+x2+\",\"+y2;\n    }\n    getPolyPointsX = ()=>{\n        let x1 = this.props.pos.x1;\n        let y1 = this.props.pos.y1;\n        let x2 = this.props.pos.x2;\n        let y2 = this.props.pos.y2;\n        let l = Math.sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));\n        let r = 6.5;\n        let xx1 = ( x2*(l-r)+x1*r )/l;\n        return xx1;\n        // return xx1+\",\"+yy1+\" \"+x2+\",\"+y2;\n    }\n    getPolyPointsY = ()=>{\n        let x1 = this.props.pos.x1;\n        let y1 = this.props.pos.y1;\n        let x2 = this.props.pos.x2;\n        let y2 = this.props.pos.y2;\n        let l = Math.sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));\n        let r = 6.5;\n        let yy1 = ( y2*(l-r)+y1*r )/l;\n        return yy1;\n        // return xx1+\",\"+yy1+\" \"+x2+\",\"+y2;\n    }\n    render() {\n        return (\n            <g>\n                <defs>\n                    <marker id=\"arrow\" viewBox=\"0 0 10 10\" refX=\"5\" refY=\"5\"\n                            markerWidth=\"4\" markerHeight=\"4\"\n                            orient=\"auto-start-reverse\">\n                        <path d=\"M 0 0 L 10 5 L 0 10 z\" />\n                    </marker>\n                </defs>\n                <line x2={this.getPolyPointsX()} y2={this.getPolyPointsY()} x1={this.props.pos.x1} y1={this.props.pos.y1}\n                      style={{stroke:'black', strokeWidth:'0.5'}}\n                      marker-end=\"url(#arrow)\"\n                >\n                    <animate\n                        id={'vbanim1'+this.props.id}\n                        attributeName='x2'\n                        values={this.props.pos.x1+';'+this.getPolyPointsX()}\n                        dur='0.5s'\n                        repeatCount=\"1\"\n                    />\n                    <animate\n                        id={'vbanim2'+this.props.id}\n                        attributeName='y2'\n                        values={this.props.pos.y1+';'+this.getPolyPointsY()}\n                        dur='0.5s'\n                        repeatCount=\"1\"\n                    />\n                </line>\n                {/*<polyline points={this.getPolyPoints()} fill=\"none\" stroke=\"black\" strokeWidth={'0.5'}*/}\n                {/*          marker-start=\"url(#arrow)\" />*/}\n            </g>\n        );\n    }\n}\n\nexport default Edge;","import React, {Component} from 'react';\nimport Vertex from \"./vertex\";\nimport Edge from \"./edge\";\n\nclass CanvasSvg extends Component {\n    constructor() {\n        super();\n        this.state = {\n            pos: {\n                x: 50,\n                y: 10\n            }\n        }\n    }\n\n    increamentXY = ()=>{\n        let pos = this.state.pos;\n        pos.x = (pos.x+50)%240;\n        this.setState({pos});\n    }\n\n    render() {\n        console.log(this.props.vertices.length);\n        let off = this.props.offset;\n        return (\n            <div>\n                <svg viewBox=\"0 0 240 150\" xmlns=\"http://www.w3.org/2000/svg\">\n                    {\n                        this.props.edges.map((edge, cellidx) => {\n                            return (\n                                <Edge\n                                    // key={vertex.id}\n                                    id={cellidx}\n\n                                    pos={ {x1:(edge.x1-off)*15+120,y1:edge.y1*15+10,\n                                        x2:(edge.x2-off)*15+120,y2:edge.y2*15+10} }\n                                />\n                            );\n                        })}\n                    {\n                        this.props.vertices.map((vertex, cellidx) => {\n                            return (\n                                <Vertex\n                                    // key={vertex.id}\n                                    id={cellidx}\n                                    current={this.props.current === cellidx}\n                                    label={vertex.label}\n                                    ret={vertex.val}\n                                    pos={ {x:(vertex.x-off)*15+120,y:vertex.y*15+10,\n                                        px:(vertex.px-off)*15+120,py:vertex.py*15+10} }\n                                />\n                            );\n                        })}\n                    &rbrace;\n\n\n                </svg>\n            </div>\n        )\n            ;\n    }\n}\n\nexport default CanvasSvg;","// draw tree class functions start :/\n\n\nexport class Tree{\n    constructor(node=0,children=[],label=\"\") {\n        this.id = 0;\n        this.node = node;\n        this.label = label;\n        this.width = node.length;\n        this.children = children;\n    }\n}\n\nexport class DrawTree{\n    constructor(tree,parent=undefined,depth=0,number=1) {\n        this.x =-1;\n        this.y = depth;\n        this.tree = tree;\n        this.children = [];\n        for( let i=0;i<tree.children.length;i++ ){\n            let newTree = new DrawTree(tree.children[i],this,depth+1,i+1);\n            this.children.push(newTree);\n        }\n        this.parent = parent;\n        this.thread = undefined;\n        this.mod = 0;\n        this.ancestor = this;\n        this.change = 0;\n        this.shift = 0;\n        this._lmost_sibling = undefined;\n        this.number = number;\n        // this.lmost_sibling = this.get_lmost_sibling();\n    }\n\n    left = ()=>{\n        if( this.thread!==undefined ) return this.thread;\n        if( this.children.length!==0 ) return this.children[0];\n        return undefined;\n    }\n    right = ()=>{\n        if( this.thread ) return this.thread;\n        if( this.children.length ) return this.children[this.children.length-1];\n        return undefined;\n    }\n    lbrother = ()=>{\n        let n = undefined;\n        if( this.parent ){\n            // for(let node in this.parent.children)\n            for(let i=0;i<this.parent.children.length;i++)\n            {\n                let node = this.parent.children[i];\n                if( node === this ){\n                    return n;\n                }else{\n                    n = node;\n                }\n            }\n        }\n        return n;\n    }\n    get_lmost_sibling = ()=>{\n        if( !this._lmost_sibling && this.parent && this!==this.parent.children[0] ){\n            this._lmost_sibling = this.parent.children[0];\n        }\n        return this._lmost_sibling;\n    }\n\n\n}\n\n\n\n\nexport function buchheim(tree) {\n    let dt = firstwalk(new DrawTree(tree))\n    let min = second_walk(dt)\n    if (min < 0) {\n        third_walk(dt, -min);\n    }\n    return dt\n}\n\nfunction third_walk(tree, n) {\n    tree.x += n;\n    //for (let c in tree.children)\n    for(let i=0;i<tree.children;i++)\n    {\n        let c = tree.children[i];\n        third_walk(c, n);\n    }\n}\n\nfunction firstwalk(v, distance = 1) {\n    //console.log('hue hue hue',v);\n    if (v.children.length === 0) {\n        if (v.get_lmost_sibling()) {\n            v.x = v.lbrother().x + distance;\n        } else {\n            v.x = 0.;\n        }\n    } else {\n        let default_ancestor = v.children[0];\n        //for (let w in v.children)\n        for(let i=0;i<v.children.length;i++) {\n            let w = v.children[i];\n            firstwalk(w);\n            default_ancestor = apportion(w, default_ancestor, distance);\n        }\n        // console.log(\"finished v =\", v.tree, \"children\");\n        execute_shifts(v);\n\n        let midpoint = (v.children[0].x + v.children[v.children.length-1].x) / 2;\n\n        let w = v.lbrother();\n        if (w) {\n            v.x = w.x + distance;\n            v.mod = v.x - midpoint;\n        } else {\n            v.x = midpoint;\n        }\n    }\n    return v;\n}\n\n\nfunction apportion(v, default_ancestor, distance) {\n\n    let w = v.lbrother();\n    if (w !== undefined) {\n        // inbuchheimnotation:\n        //i == inner;o == outer;r == right;l == left;r = +;l = -\n        let vir, vor, vil, vol, sir, sor, sol, sil;\n        vir = vor = v;\n        vil = w;\n        vol = v.get_lmost_sibling();\n        sir = sor = v.mod;\n        sil = vil.mod;\n        sol = vol.mod;\n        while (vil.right() && vir.left()) {\n            vil = vil.right();\n            vir = vir.left();\n            vol = vol.left();\n            vor = vor.right();\n            vor.ancestor = v;\n            let shift = (vil.x + sil) - (vir.x + sir) + distance;\n            if (shift > 0) {\n                move_subtree(ancestor(vil, v, default_ancestor), v, shift);\n                sir = sir + shift;\n                sor = sor + shift;\n            }\n            sil += vil.mod;\n            sir += vir.mod;\n            sol += vol.mod;\n            sor += vor.mod;\n        }\n        if (vil.right() && !vor.right()) {\n            vor.thread = vil.right();\n            vor.mod += sil - sor;\n        } else {\n            if (vir.left() && !vol.left()) {\n                vol.thread = vir.left();\n                vol.mod += sir - sol;\n            }\n            default_ancestor = v\n        }\n    }\n    return default_ancestor\n}\n\nfunction move_subtree(wl, wr, shift) {\n    let subtrees = wr.number - wl.number;\n    // console.log(wl.tree, \"is conflicted with\", wr.tree, 'moving', subtrees, 'shift', shift);\n    // print wl, wr, wr.number, wl.number, shift, subtrees, shift / subtrees\n    wr.change -= shift / subtrees;\n    wr.shift += shift;\n    wl.change += shift / subtrees;\n    wr.x += shift;\n    wr.mod += shift;\n}\n\nfunction execute_shifts(v) {\n    let shift, change;\n    shift = change = 0;\n    // for (let w in v.children[:: - 1])\n    for(let i=v.children.length-1;i>=0;i--){\n        let w = v.children[i];\n        //console.log(\"shift:\", w.tree.node, shift, w.change);\n        w.x += shift;\n        w.mod += shift;\n        change += w.change;\n        shift += w.shift + change;\n    }\n}\n\nfunction ancestor(vil, v, default_ancestor) {\n\n    if (vil.ancestor in v.parent.children){\n\n        return vil.ancestor;\n    }\n    else\n        return default_ancestor;\n}\n\nfunction second_walk(v, m = 0, depth = 0, min = undefined) {\n    v.x += m;\n    v.y = depth;\n\n    if (min === undefined || v.x < min)\n        min = v.x;\n\n    // for (let w in v.children)\n    for(let i=0;i<v.children.length;i++){\n        let w = v.children[i];\n        min = second_walk(w, m + v.mod, depth + 1, min);\n    }\n    return min;\n}\n\n/*\nlet blank = new Tree('B',[]);\nlet ll = new Tree(\"ll\",[]);\nlet lr = new Tree(\"lr\",[]);\nlet rr = new Tree(\"rr\",[]);\nlet rl = new Tree(\"rl\",[]);\nlet l = new Tree(\"l\",[ll,lr]);\nlet r = new Tree(\"r\",[rl,rr]);\nlet root = new Tree(\"root\",[l,r] );\n\nlet tree = buchheim(root);\nconsole.log(\"==================================================================\");\ndfs(tree);\n*/\n","import {Tree,buchheim} from './Tree';\nexport function getTree(n,algo=0,r=0){\n    if(algo === 0)\n        return buchheim( fib(n) );\n    else if( algo === 1 )\n        return buchheim(NcR(n,r));\n    else if( algo === 2 )\n        return buchheim(derangement(n));\n    else if( algo === 3 )\n        return buchheim(bigmod(n,r));\n    else if( algo === 4 )\n        return buchheim(stirling2(n,r));\n}\n\nfunction fib(n){\n    let tree = new Tree(n,[],n+\"\");\n    if( n <2 ) return tree;\n    tree.children.push( fib(n-1) );\n    tree.children.push( fib(n-2) );\n    tree.node = tree.children[0].node+tree.children[1].node;\n    return tree;\n}\n\n\nfunction NcR(n,r){\n    if (r > n)\n        return new Tree(-1,[],\"(\"+n+\",\"+r+\")\");\n\n    if (n === r)\n        return new Tree(1,[],\"(\"+n+\",\"+r+\")\");\n\n    if (r === 0)\n        return new Tree(1,[],\"(\"+n+\",\"+r+\")\");;\n\n    // nCr(n, r) = nCr(n - 1, r - 1) + nCr(n - 1, r)\n    let tree = new Tree(0,[],\"(\"+n+\",\"+r+\")\");\n    tree.children.push( NcR(n-1,r-1) );\n    tree.children.push( NcR(n-1,r) );\n    tree.node = tree.children[0].node+tree.children[1].node;\n    return tree;\n}\n\nfunction derangement(n){\n    if( n === 0 ) return new Tree(1,[],n+\"\");\n    if( n === 1 ) return new Tree(0,[],n+\"\");\n    let tree = new Tree(0,[],n+\"\");\n    tree.children.push( derangement(n-1) );\n    tree.children.push( derangement(n-2) );\n    tree.node = (n-1)*(tree.children[0].node+tree.children[1].node);\n    return tree;\n}\n\nfunction bigmod(n,r){\n    if( r === 0 ) return new Tree(1,[],\"(\"+n+\",\"+r+\")\");\n    if( r === 1 ) return new Tree(n,[],\"(\"+n+\",\"+r+\")\");\n    let tree = new Tree(1,[],\"(\"+n+\",\"+r+\")\");\n    if( r%2 === 1 ){\n        tree.children.push( bigmod(n,(r-1)/2 ) );\n        tree.children.push( bigmod(n,(r-1)/2) );\n        tree.children.push( bigmod(n,1) );\n    }else{\n        tree.children.push( bigmod(n,r/2 ) );\n        tree.children.push( bigmod(n,r/2) );\n    }\n    for(let i=0;i<tree.children.length;i++){\n        tree.node *= tree.children[i].node;\n    }\n    return tree;\n}\n\nfunction stirling2(n,r){\n    if( n === r ) return new Tree(1,[],\"(\"+n+\",\"+r+\")\");\n    if( r === 0 ) return new Tree(0,[],\"(\"+n+\",\"+r+\")\");\n\n    let tree = new Tree(0,[],\"(\"+n+\",\"+r+\")\");\n    tree.children.push( stirling2(n-1,r) );\n    tree.children.push( stirling2(n-1,r-1) );\n    tree.node = tree.children[0].node*r+tree.children[1].node;\n    return tree;\n}","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nconst SimpleSelect = (props) => {\n    const classes = useStyles();\n    const [age, setAge] = React.useState('0');\n    const [state] = React.useState({\n        pos: props.pos,\n    });\n    const handleChange = (event) => {\n        console.log(state.pos);\n        setAge(event.target.value);\n        props.onValueChanged(state.pos, event.target.value);\n    };\n    // console.log(props.items);\n    return (\n        <div className=\"ml-2 mr-2\">\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-label\">{props.label}</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={age}\n                    onChange={handleChange}\n                >\n                    {props.items.map((item, cellidx) => {\n                        return (\n                            <MenuItem value={cellidx} style={{selected: true}}>{item}</MenuItem>\n                        );\n                    })}\n                </Select>\n            </FormControl>\n        </div>\n    );\n}\n\nexport default SimpleSelect;","import React, {Component} from 'react';\nimport SimpleSelect from \"./simpleSelect\";\n\n\nclass Menu extends Component {\n    render() {\n        return (\n            <nav className=\"nav alert-dark\">\n\n\n                {/*<DiscreteSlider*/}\n                {/*    default={50}*/}\n                {/*    min={10}*/}\n                {/*    max={100}*/}\n                {/*    step={1}*/}\n                {/*    title=\"Speed\"*/}\n                {/*    onCountChange={this.props.onSpeedChange}*/}\n                {/*    disable={false}*/}\n                {/*/>*/}\n                <SimpleSelect\n                    pos={0}\n                    label={'Task'}\n                    items={['Fibonacci','Binomial Coefficient',\"Derangement\",\"Bigmod\",\"Stirling2\"]}\n                    onValueChanged={this.props.setAlgo}\n                />\n                <SimpleSelect\n                    pos={0}\n                    label={'N'}\n                    items={[0,1,2,3,4,5,6]}\n                    onValueChanged={this.props.setN}\n                />\n                <SimpleSelect\n                    pos={0}\n                    label={'R'}\n                    items={[0,1,2,3,4,5,6]}\n                    onValueChanged={this.props.setR}\n                />\n                <button\n                    className='btn btn-warning btn-lg m-2'\n                    onClick={this.props.onReset}\n                    disabled={this.props.disable}\n                >Reset</button>\n\n                <button\n                    className='btn btn-warning btn-lg '\n                    onClick={this.props.onStart}\n                    disabled={this.props.disable}\n                >Visualize</button>\n\n            </nav>\n    );\n    }\n    isClickable = () =>\n        {\n            if (this.props.disable) {\n                return {cursor: \"not-allowed\"};\n            } else {\n                return {};\n            }\n        }\n    }\n\n\n    export default Menu;","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\n\nclass Navbar extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <span className=\"navbar-brand\">Recursion Tree</span>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\n                    <Link to={\"/\"}>\n                        <span style={{color:\"white\"}}>\n                            Home\n                        </span>\n                    </Link>\n                </div>\n\n            </nav>\n        );\n    }\n}\n\nexport default Navbar;","import React, {Component} from 'react';\n\nclass Details extends Component {\n\n    Switcherr = () => {\n        switch (this.props.algo) {\n            case 0:\n                return <div className='row bg-info m-0 p-2'>\n                    <div className='col-3  card me-1 bg-light '>\n                        The Fibonacci sequence, in which each number is the sum of the two preceding ones. The sequence\n                        commonly starts from 0 and 1\n                    </div>\n                    <div className='col-3  card me-1 bg-light '>\n                        N = Nth fibonacchi Number\n                    </div>\n                    <div className='col-3  bg-light '>\n                        function = nCr(n,r)\n                    </div>\n                    <div className='col-3  card me-1 bg-light'>\n                        Fib(0) = 0 <br/>\n                        Fib(1) = 1 <br/>\n                        Fib(n) = Fib(n-1) + Fib(n-2)\n                    </div>\n                </div>;\n\n            case 1:\n                return <div className='row bg-info m-0 p-2 '>\n                    <div className='col-3  card me-1 bg-light'>\n                        In mathematics, the binomial coefficients are the positive integers that occur as coefficients\n                        in the binomial theorem. It is the coefficient of\n                        the x^k term in the polynomial expansion of the binomial power (1+x)^n\n                    </div>\n                    <div className='col-3  card me-1 bg-light'>\n                        nCr = n! / ( k! * (n-k)! )\n                    </div>\n                    <div className='col-3  card me-1 bg-light'>\n                        function = nCr(n,r)\n                    </div>\n                    <div className='col-3  card me-1 bg-light'>\n                        nCr(a,a) = 1 <br/>\n                        nCr(a,0) = 1 <br/>\n                        nCr(n,r) = nCr(n-1,r-1)+nCr(n-1,r)\n                    </div>\n                </div>;\n            case 2:\n                return <div className='row bg-info m-0 p-2 '>\n                    <div className='col-3  card me-1 bg-light '>\n                        In combinatorial mathematics, a derangement is a permutation of the elements of a set, such that\n                        no element appears in its original position.\n                    </div>\n                    <div className='col-3  card me-1 bg-light '>\n                        N = Nth Derangement\n                    </div>\n                    <div className='col-3  card me-1 bg-light '>\n                        function = der(n)\n                    </div>\n                    <div className='col-3  card me-1 bg-light '>\n                        der(0) = 1 <br/>\n                        der(1) = 0 <br/>\n                        der(n) = (n-1) * ( der(n-1) + der(n-2) )\n                    </div>\n                </div>;\n            case 3:\n                return <div className='row bg-info m-0 p-2 '>\n                    <div className='col-3  card me-1 bg-light '>\n                        N = Number\n                        P = Power\n                    </div>\n                    <div className='col-3  card me-1 bg-light '>\n                        function = bigmod(n,p)\n                    </div>\n                    <div className='col-3  card me-1 bg-light '>\n                        bigmod(a,0) = 1 <br/>\n                        bigmod(a,1) = a <br/>\n                        bigmod(n,p) = bigmod(n,p/2)^2; p is even <br/>\n                        bigmod(n,p) = bigmod(n,(p-1)/2)^2 * n ; p is odd\n                    </div>\n                </div>;\n            case 4:\n                return <div className='row bg-info m-0 p-2 '>\n                    <div className='col-3  card me-1 bg-light '>\n                        a Stirling number of the second kind (or Stirling partition number) is the number of ways to\n                        partition a set of n objects into k non-empty subsets\n                    </div>\n                    <div className='col-3  card me-1 bg-light '>\n                        N = Row\n                        R = Column\n                    </div>\n                    <div className='col-3  card me-1 bg-light '>\n                        function = stir2(n,r)\n                    </div>\n                    <div className='col-3  card me-1 bg-light '>\n                        stir2(a,a) = 1 <br/>\n                        stir2(0,a) = 0 <br/>\n                        stir2(n,r) = stir2(n-1,r) * r + stir2(n-1,r-1)\n\n                    </div>\n                </div>;\n\n            default:\n                return <b>Henlo</b>;\n\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {this.Switcherr()}\n            </div>\n        );\n    }\n}\n\nexport default Details;","import React, {Component} from 'react';\nimport CanvasSvg from \"./canvasSVG\";\nimport {getTree} from \"./fib\";\nimport Menu from \"./menu\";\nimport Navbar from \"./navbar\";\nimport Details from \"./details\";\n\nclass Graph extends Component {\n    constructor() {\n        super();\n        this.state = {\n            root:undefined,\n            vertices:[],\n            edges:[],\n            current:-1,\n            n:0,\n            r:2,\n            algo:0,\n            offset:0\n        }\n    }\n    // setNumber = (event)=>{\n    //     let value = event.target.valueAsNumber;\n    //     if(value!== NaN && value<99)\n    //         this.setState({inputNumber:value});\n    //\n    //     // document\n    // }\n    setAlgo = (pos, val) => {\n        if (pos === 0) {\n            // console.log(\"sup 0\");\n            this.setState({algo: val});\n        }\n    }\n    setN = (pos, val) => {\n        if (pos === 0) {\n            // console.log(\"sup 0\");\n            this.setState({n: val});\n        }\n    }\n    setR = (pos, val) => {\n        if (pos === 0) {\n            // console.log(\"sup 0\");\n            this.setState({r: val});\n        }\n    }\n    addNumber = ()=>{\n        // console.log(getFibTree(3));\n        let tree = getTree(this.state.n,this.state.algo,this.state.r);\n        this.setState({edges:[],vertices:[],offset:tree.x});\n        this.setState({ vertices: [] });\n        // this.setState({});\n        this.recur(tree,undefined);\n\n    }\n    recur = async (node,parent)=>{\n\n        let vertices = this.state.vertices;\n        let current = this.state.vertices.length;\n\n\n        if( parent!==undefined ){\n            if( node.children.length )\n                vertices.push({label:node.tree.label,val:0,x:node.x,y:node.y,px:parent.x,py:parent.y});\n            else\n                vertices.push({label:node.tree.label,val:node.tree.node,x:node.x,y:node.y,px:parent.x,py:parent.y});\n            this.setState({vertices,current});\n\n\n\n            let edges = this.state.edges;\n            edges.push({\n                x1:parent.x,\n                y1:parent.y,\n                x2:node.x,\n                y2:node.y\n            });\n            this.setState({edges});\n        }else{\n            if( node.children.length )\n                vertices.push({label:node.tree.label,val:0,x:node.x,y:node.y,px:node.x,py:node.y});\n            else\n                vertices.push({label:node.tree.label,val:node.tree.node,x:node.x,y:node.y,px:node.x,py:node.y});\n            this.setState({vertices,current});\n        }\n        await sleep(500);\n\n\n        for(let i=0;i<node.children.length;i++){\n            await this.recur( node.children[i],node );\n            // let verticess = [...this.state.vertices];\n            // verticess[current].val+=node.children[i].tree.node;\n            this.setState({current});\n            await sleep(500);\n        }\n        let verticess = [...this.state.vertices];\n        verticess[current].val=node.tree.node;\n        this.setState({vertices:verticess});\n    }\n    render() {\n        return (\n            <div>\n                <Navbar/>\n                <Menu\n                    setN={this.setN}\n                    setR={this.setR}\n                    setAlgo={this.setAlgo}\n                    onStart={this.addNumber}\n                />\n                <Details\n                    algo={this.state.algo}\n                />\n                <CanvasSvg\n                    vertices={this.state.vertices}\n                    edges={this.state.edges}\n                    current={this.state.current}\n                    offset={this.state.offset}\n                />\n            </div>\n        );\n    }\n}\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\nexport default Graph;","import React, {Component} from 'react';\n\nimport {HashRouter as Router, Switch, Route} from 'react-router-dom';\nimport Pathfinder from \"./pathfinderComponents/pathfinder\";\nimport Home from \"./homeComponents/home\";\nimport Seive from \"./primeComponents/seive\";\nimport Sort from \"./sortComponents/sort\";\nimport Queen from \"./queenComponents/queen\";\nimport ConvexHull from \"./convexHullComponents/convexHull\";\nimport BinarySearch from \"./binarySearchComponent/binarySearch\";\nimport RecursiveSort from \"./recursiveSortComponents/recursiveSort\";\nimport Puzzle from \"./15puzzleComponents/puzzle\";\n\nimport TuringMachine from \"./Turing Machine/turingMachine\";\nimport Graph from \"./Graph/graph\";\n\n\n\nclass App extends Component {\n\n    componentDidMount() {\n        // console.log(window.innerHeight,\"  \",window.innerWidth);\n    }\n\n    render() {\n        return (\n            <Router basename='/'>\n                <Switch>\n                    <Route path='/pathfinder'  component={Pathfinder}/>\n                    <Route path='/prime' component={Seive}/>\n                    <Route path='/sort' component={Sort}/>\n                    <Route path='/nqueen' component={Queen}/>\n                    <Route path='/convexhull' component={ConvexHull}/>\n                    <Route path='/binarysearch' component={BinarySearch}/>\n                    <Route path='/recursivesort' component={RecursiveSort}/>\n                    <Route path='/turing' component={TuringMachine}/>\n                    <Route path='/15puzzle' component={Puzzle}/>\n                    <Route path='/graph' component={Graph}/>\n                    <Route path='/' component={Home}/>\n\n                </Switch>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'fontsource-roboto';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}